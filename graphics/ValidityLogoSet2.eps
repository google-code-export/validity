%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: ValidityLogoSet2.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Benjamin Ross
%%CreationDate: 7/20/09
%%BoundingBox: 0 0 800 600
%%HiResBoundingBox: 0 0 800 600
%%CropBox: 0 0 800 600
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (PANTONE 88-1-4 C)
%%+ (PANTONE 27-1-4 C)
%%+ (PANTONE 132-1-4 C)
%%CMYKCustomColor: 0.7262 0.3109 0 0 (PANTONE 88-1-4 C)
%%+ 0.1897 0.8769 0.1762 0 (PANTONE 27-1-4 C)
%%+ 0.4817 0.0485 1 0 (PANTONE 132-1-4 C)
%%RGBCustomColor: 
%%EndComments
                                 
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2009-07-20T21:29:21-07:00</xmp:CreateDate>
         <xmp:ModifyDate>2009-07-20T21:29:21-07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2009-07-20T21:29:21-07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>192</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8qYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq9p/IP8g9L/M7&#xA;S9WvLzVp9ObTp44USGNJA4kQtU8iKUpir1T/AKEf8t/9TRef9I8X/NWKu/6Ef8t/9TRef9I8X/NW&#xA;Ku/6Ef8ALf8A1NF5/wBI8X/NWKu/6Ef8t/8AU0Xn/SPF/wA1Yq7/AKEf8t/9TRef9I8X/NWKu/6E&#xA;f8t/9TRef9I8X/NWKu/6Ef8ALf8A1NF5/wBI8X/NWKu/6Ef8t/8AU0Xn/SPF/wA1Yq7/AKEf8t/9&#xA;TRef9I8X/NWKpB59/wCcRNB8seS9a8ww+Ybq5l0u0lukgeCNVcxrXiSGqK4q8M/KzyhZ+cPP+jeW&#xA;r2eS3tdSleOWaHj6ihYnf4eQI6p4Yq+nf+hJPIv/AFf9U+63/wCqeKu/6Ek8i/8AV/1T7rf/AKp4&#xA;q7/oSTyL/wBX/VPut/8Aqnirv+hJPIv/AFf9U+63/wCqeKu/6Ek8i/8AV/1T7rf/AKp4q7/oSTyL&#xA;/wBX/VPut/8Aqnirv+hJPIv/AFf9U+63/wCqeKu/6Ek8i/8AV/1T7rf/AKp4q7/oSTyL/wBX/VPu&#xA;t/8Aqnirv+hJPIv/AFf9U+63/wCqeKu/6Ek8i/8AV/1T7rf/AKp4q7/oSTyL/wBX/VPut/8Aqnir&#xA;v+hJPIv/AFf9U+63/wCqeKu/6Ek8i/8AV/1T7rf/AKp4q7/oSTyL/wBX/VPut/8Aqnirv+hJPIv/&#xA;AFf9U+63/wCqeKu/6Ek8i/8AV/1T7rf/AKp4q7/oSTyL/wBX/VPut/8Aqnir48uohDczRKSVjdkB&#xA;PWimmKqWKvr3/nB//lG/NH/MZb/8mmxV9L4q7FXYq7FXYq7FXYq7FXYqwj87/wDyUPm7/tl3P/ED&#xA;ir4r/wCccv8AydnlX/mIk/6h5MVfoXirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVfl&#xA;nqP/AB0Lr/jK/wDxI4qh8VfXv/OD/wDyjfmj/mMt/wDk02KvpfFULY6tpWoLK1heQXawNwmMEiSB&#xA;GH7LcCeJ9jirwPWPNF3+YHm651Ay3x8g+X7j6pY2Gll/X1a+G5C+mVYpx+ImvwpSlGfJRjblaPSS&#xA;zz4QREDckmgA9S8lfmDpWq3p8vtplzoWoW8QeDT7yP0y0S7fBWh+HuCPv3yUsdC3N13ZEsEBkjKO&#xA;THyuPRhvkTUb7TfPvmnT7S+tFgm19YZbfU7uUzG39BnYWSuzF5PVlXbpv8srdQ9P1DzB5Va6fQbz&#xA;V7SK/uVMRsPraQ3REo40RVdZQTXYrv4Yq8j/ACp8+y6H5CkutRvrGbTdOtdSuWtprs/pSS4hupPT&#xA;jVJCQY3jXipO/KmKvU/JnnfQfNmkW99pt1C08sEc9zYJNHLPb+qKhZlQkqfmMVTiPUtOkvZbCO6h&#xA;e+gUPNaLIplRWpRmjB5KDUdRirEPzv8A/JQ+bv8Atl3P/EDir4r/AOccv/J2eVf+YiT/AKh5MVfo&#xA;XirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVflnqP8Ax0Lr/jK//EjiqHxV9e/84P8A&#xA;/KN+aP8AmMt/+TTYq+lmUMpU9CKH6cVfN/5oaXq/5deY7mw8kWgh0/8AMG1XT47SKoEN8sixlov5&#xA;S0cxCivViR9nFWUeWtEvtEtLry1b37abo/l+343k8SFpHZjylcU4sTNJVuv2aDoKZy2fUZ8ufIOM&#xA;48ePnX46sdNrPDySMhxRH4tCedtYksPLvlzXNI1OS6u7W5uYrXUJUKzLGwUtFJzLlqUpuSKZ33s9&#xA;COaBExxennXmRfl8HW9qe0ROmJwHbLIcth6fLZ5tr2p6pLr0ut2kAXW31+O5tolWrC4bT1lWMVBP&#xA;95TbNfmgITlEcgSHPwZDPHGR5kAvVfy08i/lfqX5SQapqlta3cl9BJc61rVxxa6juKkzN9Yb44jE&#xA;elCPHeprU2vIvIml6Xe2OqfWLeO74eRtYuYGmjVmNxHqU/pzUNf3igVU9R9GKs70eK28gaJ5E/Me&#xA;wgEWkXenwab5tit0HxJMoaO6ZV+06y/abqdh3xV6J+S+mXdxp2p+dtTi9PVfN9yb0I32orFfgs4v&#xA;kI/i+RGKo/8AO/8A8lD5u/7Zdz/xA4q+K/8AnHL/AMnZ5V/5iJP+oeTFX6F4q7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FX5Z6j/wAdC6/4yv8A8SOKofFX17/zg/8A8o35o/5jLf8A5NNi&#xA;r6XxVjvnXytc67a2Uun3ENnrOl3Iu9NvbiD6ykcnBo2rHzjrVHNN9jQ9RirEn8ifm29898fNeli6&#xA;lj9GZxpRpJH/ACyL6/FuncZQdNjM+OvURR8x597HgF2oX35bfmhf2yWt55m0mazSRZktW0o+kHTo&#xA;QgnoB4gbHuMzMOaWL6PTtW3c05NLjmKkLjd10SpvyO85trZ1s69pn6UN4mo/WPqFwP8ASohxSTgL&#xA;rhsD9njx9sqchAzf846eYJdTm1B9X0kSXEgnuLddPnW2kkU1DPbLdCFt+xSmKo3RvyL84aNdpd6d&#xA;relRTJay2A5afPKv1aeVppYikl06ENJIx3Ht02xVjOj/AJb6tF5muPy1g1OK80Sc29/5rNpFNFHb&#xA;wQuZYrQPLNPxedmrxXjRd9+yr6QiiihiSKJBHFGoSNFFFVVFAAB2AxVhX53/APkofN3/AGy7n/iB&#xA;xV8V/wDOOX/k7PKv/MRJ/wBQ8mKv0LxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kvy&#xA;z1H/AI6F1/xlf/iRxVD4q+vf+cH/APlG/NH/ADGW/wDyabFX0virsVdirsVdirsVdirSoiliqgFj&#xA;ViBSppSp+7FW8VYR+d//AJKHzd/2y7n/AIgcVfFf/OOX/k7PKv8AzESf9Q8mKv0LxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kvyz1H/joXX/GV/8AiRxVD4q9X/Jj8/b78sNP1KyttHi1&#xA;MalNHMzyTNCUMalaAKj1rXFXo/8A0PFrP/Up2/8A0mP/ANUsVd/0PFrP/Up2/wD0mP8A9UsVd/0P&#xA;FrP/AFKdv/0mP/1SxV3/AEPFrP8A1Kdv/wBJj/8AVLFXf9Dxaz/1Kdv/ANJj/wDVLFXf9Dxaz/1K&#xA;dv8A9Jj/APVLFXf9Dxaz/wBSnb/9Jj/9UsVd/wBDxaz/ANSnb/8ASY//AFSxV3/Q8Ws/9Snb/wDS&#xA;Y/8A1SxVJfOf/OXuq+Z/KmreXpPLUFrHqttJatcLdO5QSCnIKYxWnzxVgn/OOX/k7PKv/MRJ/wBQ&#xA;8mKv0LxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kvyz1H/AI6F1/xlf/iRxVD4q92/&#xA;5xz/ACJ8o/mXpOs3mu3eoW0unXEUMAsZIY1KyIWPL1YZjWo7UxV6/wD9CVflZ/1ddc/6SLP/ALJM&#xA;Vd/0JV+Vn/V11z/pIs/+yTFXf9CVflZ/1ddc/wCkiz/7JMVd/wBCVflZ/wBXXXP+kiz/AOyTFXf9&#xA;CVflZ/1ddc/6SLP/ALJMVd/0JV+Vn/V11z/pIs/+yTFXf9CVflZ/1ddc/wCkiz/7JMVd/wBCVflZ&#xA;/wBXXXP+kiz/AOyTFXf9CVflZ/1ddc/6SLP/ALJMVY5+Yv8AziZ+XPlryLruv2Oo6xJeaZZy3NvH&#xA;PNatEzxrUBwtsjEfJhirxb/nHL/ydnlX/mIk/wCoeTFX6F4q7FXYq7FWPeevPGh+S/L82tavIREn&#xA;wW8CbyTSkErHGPE069ANzirzf8tvzh/Mf8wL6b9GeXbKz0i3fjcajcSzMiV3Ea8Qvqycewp70qMV&#xA;e0Ly4jkQWpuQKCvy3xVKfNupa3pvl68vdE08apqcKBreyaRIVb4hyLPIyABVq3WppQYqxP8AJb8z&#xA;dR/MHQ7/AFO9sobE2lz9WSOFmav7tXJPL/XxV6HirsVeR3n5yeZ7L83LTyPe6DFa2d9Oq2t08weZ&#xA;7duQWakTOg5mMkKdwOoxV65irsVdirsVdirsVflnqP8Ax0Lr/jK//EjiqHxV9e/84P8A/KN+aP8A&#xA;mMt/+TTYq+l8VdirsVdirsVdirsVdirsVYR+d/8A5KHzd/2y7n/iBxV8V/8AOOX/AJOzyr/zESf9&#xA;Q8mKv0LxV2KuxVpmVFLMQqqKsx2AA7nFXyT5o1DVvzv/ADZh0bSpSnl+xLpbzU+GO1Rh690Qf2pT&#xA;TiP9UeOKvQ9R/NW38qwp5V/L/So5LDSQYGupFeRWZa82VYypY8gSXY/EammXxw7bvX9n+zUZQE88&#xA;uHi5AbfO/uRnkr8/Z7vVItN8z2sVsJnESX0HJFRyaASo5bYnqwO3hhnh2sMu0fZgQgZ4CTXQ/oL1&#xA;/U/+Obd/8YZP+InMd458wfk9+X0/nz8oNY0OHUm0xl1tLkyhDIriO2VfTkUMlV+Pl16gYq+mPLuk&#xA;vo+gadpT3L3j2FtFbNdybPKYkCF23b7VK9TiqLF3amb0RMhm6elyHLbf7Na4q+e/zETn/wA5QeV0&#xA;5FeUFsOS7MKmcVHvirPfy3/LK/8Ay20fzHMNXfWri9rcwJJGyIrwpIQSvNyzyFvjIO9Biq/8i/zK&#xA;13z95e1DUtYgtYJrW7+rRrZpIilfSR6t6kkprVvHFXpOKuxV2KuxV+Weo/8AHQuv+Mr/APEjiqHx&#xA;V9e/84P/APKN+aP+Yy3/AOTTYq+l8VUba+sroObW4jnEbcJPSdX4sP2W4k0OKvA9b843vnnzfc3S&#xA;X99afl95euBaxR6Uzpc6rfUqYo2iZSV4gmvLZKHYvUKvUvJv5gaHrN02iw2l1pd/bRho7K9Tg7Rr&#xA;QVUksSR3rv333xViHkbVNatPPfmqxtrmO4tG15LeSHUr2UvFbegzt9UWT1Cz+pIPhrToPcKvTrzV&#xA;dCe4bR7jUII7y5Uxi0FwIrghxT4ArLKD4Fd/DFXk35VeetQ0vyFJf6tcwXWladbaldSvPds+pvLb&#xA;3MnCJI5ftIY0opL/AGqDFXp/lHzhovmnSLbUdNnRmnhjnltPUjeeASjkqzKjNxOKpst3aPcvarNG&#xA;1zGA0kAYF1U9Cy1qAcVYb+d//kofN3/bLuf+IHFXxX/zjl/5Ozyr/wAxEn/UPJir9C8VablxPEgN&#xA;TYkVFfltir5I/OT8svNXkLWrbzzbaw+pSXV6Z5tQEfoyQXjMZFqgZxwam3bbjTpVV6B+cn5x2s35&#xA;QaZLpcgjv/N8HAopqYYVHG8FfZ/3PvU+GKqH5T2Om/l15Lie9gMnmTzGiXN0F2a2tHH7hGPUNxJf&#xA;j1qd+gzU9odrQ0xEa4pH7A1S1AxyFp9d/mDf2aLaeVLK00yxgJ9GB4ahwB+2EZONeppv7nNfD2k4&#xA;stGFw9/q/V+Ob1UdJjl69RKU7639yD/Ma00/zX+XUXm57FbTWbGZYr0R7MwMghZOVPjXkyshPbO6&#xA;0GGGTLGPFcJxsEe6/wBYLPszWy0uc44y4sUhYv535ebJ/Iv5mWHmbR7nTJlNvqtrav8AAzchMiJx&#xA;Mik0+L+ZT+O9HtDs2WD1DeJ+x4XSdrY9TkkAKNmvMeX6ny/b6PZTfkndatIHN5aa+sEHxsEVJ7VT&#xA;J8FeJJ9Nd6Zq3ZPSfMvnnzXqukeRvyv8nzNbXt7o2mHUbpGKP+8s0kEfNfiSNIh6khG5G3iCqym1&#xA;/wCcTPKcemqJda1A60AGF/EYkiWUb8liKluPLf8AvK++KvLpNB8x3H53aR5V87XL6hLAV01rxWZX&#xA;uLJ1kZGMgPOrJLSta9jviqI/JD8tNB88+VvMUWrTXMA06aC4ha0aNCzejMKP6kctR8qYqgvy0/Jq&#xA;087fl5r+s281wPMGnStHp1sjJ6EpSJJeDqULlnqVUhxvTFXt/wDzjZ56HmDyMmj3L/7k/L3G0kU/&#xA;aa2ofq7U9lUx/wCx98VYj+bIb8w/zs0LyHAxfTNHHq6qVOwLgTT7g9olRAezMRir6HiiihiSKJBH&#xA;FGoSNFFFVVFAAB2AxVdir8s9R/46F1/xlf8A4kcVQ+Kvr3/nB/8A5RvzR/zGW/8AyabFX0syhlKm&#xA;tCKGhIP3jFXzd+ZNjqv5Y+Yb3TvJdsU0/wA/2gsrW1Rm/cX6yLEzRVqatHMeO/2m8FpirLvKOj33&#xA;l6zuPLdpejTtL0GDjfXqoTI0jENNKtKOTLJuN9lAHbdVCectWutO0by5r+m6m17e2txdQ29/Ih9U&#xA;xOFJim9TkzcaEbk7ffirzHzBqt8/mKbzBZ2yjWTr6XVrHxqwmbT1mWMVqaeoBtir1L8uPy5/LTWf&#xA;yqg1jVYob281GB7vV9fnet1FcgkysLhjyiMLDt4VNa4q8j8j6NpV/Y6r9Zt47sp5I1e8hkdPia5i&#xA;1KYRTkdS6hRQncfRirO9AgtPy80zyN+YdnD6Oiapp8Gm+bUhUkVmUPFdlVr8QcfGfYDq2KvRPyX0&#xA;24vLPVvPeowmPU/N9ybqJXHxxWEfwWkX/IscqjqKYqmP53/+Sh83f9su5/4gcVfFf/OOX/k7PKv/&#xA;ADESf9Q8mKv0LxV2Ksf8/wDleLzT5N1fQpFBa9t2W3J6LOnxwt/sZFU4q+Pvyf8AJl35x8/6Zo18&#xA;HfTtL5T30T1Ijt4ZC7RcT0Ekz8T/AKxOKvdPOVnPcefLi1mJQ3E8UcbHoEcKqEewGcD2njlLWGJ/&#xA;ikPtp1eYE5KZF5t1zTPJZg0zTdHgnf0VklmuF5FgSV60qx+HfembzLkxaXIMMIRvhuyGfaXak9Lj&#xA;FAzjGtuKtvtQnmbVrHVvyX1W+tLJbASSwia3QfB6guoQWTYChFOgzrvZ83lxmqHq2/036XBz9py1&#xA;GgllFwP08+nFR322IP6Hln5cR3T+cLL6tXkqTtIR2jED86/Nds6vtUgaeV/jd5/sgE6mFfjZh9j/&#xA;AOs+ap/4EkH/AFCHOIe/ZJ5e1CLyd+bvk3XdZ/c6VquhaUI7ptkRJNKis+ZY7USWP4vBd8VfWisr&#xA;qGUhlYVVhuCD3GKvmXzF5p0vzD/zlBoEmmSJNbac8NgbmMgpJJH6juwYfa4tLwr7Yqi/+cUf+Uc8&#xA;5f8APD/k1Niqcf8AOIk0R8oa3AGBlTUA7p3CvAgU/SUb7sVY957N3+Tn5wDzZp0Bl0DzDHM89ovw&#xA;qZH3mi8Bxl4Sr7GmKss/5xo8r3rWGq+ftYBfVvMk8hilbYmD1C0jgdvVmr9CjFXtuKuxV+Weo/8A&#xA;HQuv+Mr/APEjiqHxV9e/84P/APKN+aP+Yy3/AOTTYq+l8VY5528sXet29jcabJaw61pNyLzTbi9i&#xA;eeFZODRnkiPEej1BqaEA0xViMvlD85nvpL79MeX1uZo/SuGFjclZU/lkRpSrdPCuKoa/8gfmzf20&#xA;dpd6l5dksYZFljs/qFwsSuvQhVlFB4gbHuMVSpvyZ/MFtd/Thv8AQv0l9dj1L1Rb3wX6zEvFH4fW&#xA;ONAP2aUxVASf84++cHvprkXehxw3MonudOji1BLKWQGoZ7ZbkRnf9mnH2xVG6L+SnnzRbtbqwu9A&#xA;SRLSbTwr219IhtriVppIyj3BUhnkbt7dMVY7pXkDzEuvzfld+kLa60a6+r33mNbIXPCztIXMsdsr&#xA;XEsvBp3Ioq7gfEa4q+kIIIbeCOCBFjhiUJFGooqqooqgDoAMVYX+d/8A5KHzd/2y7n/iBxV8V/8A&#xA;OOX/AJOzyr/zESf9Q8mKv0LxV2KuxV4PdeZvJf5MecPMdzqWlaxPJ5juvrcF9Ba2/wBUWNqyGCGV&#xA;7kFuMkjcqqvb4aAEqpP5n/5yM/KXXjFO1hrdrfwf3N3HBaFgAagMPrXxAHcZrdf2ZDUUb4ZjkQ05&#xA;cIn71ef/AJyc/KrU7SKLX9G1K/miFBOttbRkj5fWyRXuOVMuOkGQDxQJSj15fj5rPDGcamBJVf8A&#xA;5yg/KdtOfSpND1GXSW4qlibW0VERaGhH1pg/xjl0G+bHHk4CDH0kfj4bbMPy0ODw6Hh91JD5X/PH&#xA;8nfLlhfR2VjrTalfRPE+oPbWZKBxsI4/rVAgO/Gu/c5la3tCeegdojo4+g7Nx6eyN5HqwK381flv&#xA;F5Au/KH6R1hludRj1IXv6LtQVMcRiMfp/pHevWvLMB2LMtb/ADd/I/X/ACNo/lbWtO1ueTRbSC1s&#xA;9Uht7SKZGhiWIyIDdSACTh8SNyH0gHFWB2nm3y9BH+jP8Yeak8u04nT4beNFMZO8fD9ImIfPifli&#xA;qeWXnX8mdL866F5h0WPWbKz0RI1/RxsbWR53QuWlkuPryfG/qb/BtTbbYKpv+T35xflt+XNvqkPq&#xA;azqo1J4XB+oWtv6fohx/y3Tcq8/bFWIah5o8g2uu3l/5P1rzH5ds78kT2kNtDVUY1MYeK/h5oK/C&#xA;rDbxOKvU/P8A5lP5x+avLfkrRLaezsUpqWsPdIizwKV/a4NKqlYX6cvtOFNCMVfRWn2Fnp1hbWFl&#xA;EILO0iSC3hXokcahVUfIDFURirsVflnqP/HQuv8AjK//ABI4qh8VfXv/ADg//wAo35o/5jLf/k02&#xA;KvpfFXYq7FXYq7FXYq7FViQQxu7pGqPKQZWUAFiBQFiOu2Kr8VYR+d//AJKHzd/2y7n/AIgcVfFf&#xA;/OOX/k7PKv8AzESf9Q8mKv0LxV2KuxVp40kQpIodG2ZWFQfmDiqH/Remf8skP/ItP6Yq79F6Z/yy&#xA;Q/8AItP6Yq79F6Z/yyQ/8i0/pirv0Xpn/LJD/wAi0/pirv0Xpn/LJD/yLT+mKu/Remf8skP/ACLT&#xA;+mKu/Remf8skP/ItP6Yq79F6Z/yyQ/8AItP6Yq79F6Z/yyQ/8i0/pirEfzP1Wby75Wmn0PQn1PXL&#xA;o/VtNgtrQz8ZXB/eSBEaioBy36nbFUo/Ir8s7ryjoU+pa2C/mjW29fUXc83jUkssRberVJZz/Me9&#xA;Bir07FXYq7FX5Z6j/wAdC6/4yv8A8SOKofFXpf5Tfnx5l/LOx1Cz0ewsryPUZUmla7EpKmNSoC+m&#xA;8e2/fFWe/wDQ7P5h/wDVk0j/AIG5/wCq2Ku/6HZ/MP8A6smkf8Dc/wDVbFXf9Ds/mH/1ZNI/4G5/&#xA;6rYq7/odn8w/+rJpH/A3P/VbFXf9Ds/mH/1ZNI/4G5/6rYq7/odn8w/+rJpH/A3P/VbFXf8AQ7P5&#xA;h/8AVk0j/gbn/qtirv8Aodn8w/8AqyaR/wADc/8AVbFXf9Ds/mH/ANWTSP8Agbn/AKrYqlPmz/nL&#xA;bzx5m8tan5fvNI0yG11S3e1mlhW4EirIKErylYV+YxVi3/OOX/k7PKv/ADESf9Q8mKv0LxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kvyz1H/joXX/ABlf/iRxVD4q97/5xu/I7yb+Y+ka&#xA;1d+YJb2OXT7iKKAWkqRgrIhY8ucclTUYq9i/6Ez/ACl/5adX/wCkmH/qhirv+hM/yl/5adX/AOkm&#xA;H/qhirv+hM/yl/5adX/6SYf+qGKu/wChM/yl/wCWnV/+kmH/AKoYq7/oTP8AKX/lp1f/AKSYf+qG&#xA;Ku/6Ez/KX/lp1f8A6SYf+qGKu/6Ez/KX/lp1f/pJh/6oYq7/AKEz/KX/AJadX/6SYf8Aqhirv+hM&#xA;/wApf+WnV/8ApJh/6oYqxv8AMj/nFT8tPLnkLXte0+41Nr3TLKa5t1mniaMvGtRyAhUkfTirw/8A&#xA;5xy/8nZ5V/5iJP8AqHkxV+heKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV+Weo/wDH&#xA;Quv+Mr/8SOKofFX17/zg/wD8o35o/wCYy3/5NNir6XxV2KuxV2KuxV2KuxV2KuxVhH53/wDkofN3&#xA;/bLuf+IHFXxX/wA45f8Ak7PKv/MRJ/1DyYq/QvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq/LPUf+Ohdf8ZX/AOJHFUPir69/5wf/AOUb80f8xlv/AMmmxV9L4q7FXYqh9S1C002wuL+8&#xA;kEVraxtLNId6Koqdh1wgW2YcUskxCIuUjQeQaf8Anp5i13zLBpfl/Q4ZYp5OMSzyMJCg3Luy/DGA&#xA;oqdmp75ecIAsl63L7N4cGEzy5CCB0G3u8/sevWWoWt2Zo4Zo5J7VxDdxxtz9OXiGKE0HQMO2UEPJ&#xA;ZMUoUSDUtx5hE4Gt2KuxVhH53/8AkofN3/bLuf8AiBxV8V/845f+Ts8q/wDMRJ/1DyYq/QvFXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq/LPUf+Ohdf8ZX/wCJHFUPir69/wCcH/8AlG/N&#xA;H/MZb/8AJpsVfS+KuxV2KsN89GDXdF1bR7S6R5LRA+oWPFg7qpElA9RsKV+EHwzVazVT4ZjBMDJj&#xA;3Irf7f1Fv0Or8HPGYP08/jswrS9PtPIfkm98x2Vuqa7qkRjsgxJ4Qj4i9GJ7Dn7/AAjMnsPUSyeG&#xA;NTL+8lQ2+XLv7/N3ur10tXmjilK8YPzP42+bCfy5/MXUPKupyNOPrFjqEwfUg9TJWv8Aeq3XmKkm&#xA;v2vxzvdX2RinH0DhkOTy/tT7RgaqGKJEoYxUq6X0Ffza/Q+nFZWUMpqrCoI7g5xzYC3irsVYR+d/&#xA;/kofN3/bLuf+IHFXxX/zjl/5Ozyr/wAxEn/UPJir9C8VdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdir8s9R/46F1/wAZX/4kcVQ+Kvr3/nB//lG/NH/MZb/8mmxV9L4q7FXYqwC+0bVtH8/x&#xA;a3bxPPpt84S6aMcuAlARvUA34hqPXpnN5dNkwa0ZognHM7+V7b/e4coGOTiHIsY/M/TvNes3VzNp&#xA;en3MmladH9UijiUqGHR3jjFC4rt8AOwGbjsyHja4cXoxYiKJ2BroPj8KdJ2xh1U5ieIy4IiiASPj&#xA;Q5vP/LH5ceaNc1KK2FhPa2vMC5u542jSNAaNQuByYdlHfPRdT2hixRJsE9AHS6Xs3NlmBwkDqS+p&#xA;I41jjWNfsoAq/ICmcOTb6ABQpdgS7FWEfnf/AOSh83f9su5/4gcVfFf/ADjl/wCTs8q/8xEn/UPJ&#xA;ir9C8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir8s9R/46F1/xlf8A4kcVQ+Kvr3/n&#xA;B/8A5RvzR/zGW/8AyabFX0virsVdirsVdirsVdirsVdirCPzv/8AJQ+bv+2Xc/8AEDir4r/5xy/8&#xA;nZ5V/wCYiT/qHkxV+heKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV+Weo/8dC6/wCM&#xA;r/8AEjiqHxV6P+Vf57ebvy0sr+z0K00+5i1GVJpzfRzSMGjUqOPpTQilD3rirOf+h1fzT/6tWh/9&#xA;I95/2V4q7/odX80/+rVof/SPef8AZXirv+h1fzT/AOrVof8A0j3n/ZXirv8AodX80/8Aq1aH/wBI&#xA;95/2V4q7/odX80/+rVof/SPef9leKu/6HV/NP/q1aH/0j3n/AGV4q7/odX80/wDq1aH/ANI95/2V&#xA;4q7/AKHV/NP/AKtWh/8ASPef9leKu/6HV/NP/q1aH/0j3n/ZXiqVeav+cs/zG8y+XNR0C+07R47P&#xA;U4HtriSCG6WVUkFCULXLqD81OKvL/JXm3UvKHmjT/MmmxwzX2nO0kEdyrNESyMh5hGjY7N2YYq9l&#xA;/wCh1fzT/wCrVof/AEj3n/ZXirv+h1fzT/6tWh/9I95/2V4q7/odX80/+rVof/SPef8AZXirv+h1&#xA;fzT/AOrVof8A0j3n/ZXirv8AodX80/8Aq1aH/wBI95/2V4q7/odX80/+rVof/SPef9leKu/6HV/N&#xA;P/q1aH/0j3n/AGV4q7/odX80/wDq1aH/ANI95/2V4q7/AKHV/NP/AKtWh/8ASPef9leKu/6HV/NP&#xA;/q1aH/0j3n/ZXirv+h1fzT/6tWh/9I95/wBleKu/6HV/NP8A6tWh/wDSPef9leKu/wCh1fzT/wCr&#xA;Vof/AEj3n/ZXirv+h1fzT/6tWh/9I95/2V4q7/odX80/+rVof/SPef8AZXirv+h1fzT/AOrVof8A&#xA;0j3n/ZXirv8AodX80/8Aq1aH/wBI95/2V4q7/odX80/+rVof/SPef9leKvAppWmmklagaRi7AdKs&#xA;a7YqsxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2Kv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:068011740720681187C4C6725DFF993D</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:068011740720681187C4C6725DFF993D</xmpMM:InstanceID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D47F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:21+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T17:01:20-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BC18AC99CBA78E83</stEvt:instanceID>
                  <stEvt:when>2008-05-19T18:10:15-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:26:44-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:08C3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T16:51:46-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681192B0DFFC927805D7</stEvt:instanceID>
                  <stEvt:when>2008-05-30T21:26:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681192B0DFFC927805D7</stEvt:instanceID>
                  <stEvt:when>2008-05-30T21:27-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F1174072068119098B097FDA39BEF</stEvt:instanceID>
                  <stEvt:when>2008-06-02T13:26:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F1174072068118B59CDA4C338DF2F</stEvt:instanceID>
                  <stEvt:when>2009-07-17T14:27:58-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:058011740720681187C4C6725DFF993D</stEvt:instanceID>
                  <stEvt:when>2009-07-20T21:29:08-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:068011740720681187C4C6725DFF993D</stEvt:instanceID>
                  <stEvt:when>2009-07-20T21:29:21-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:058011740720681187C4C6725DFF993D</stRef:instanceID>
            <stRef:documentID>xmp.did:058011740720681187C4C6725DFF993D</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>600.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 27-1-4 C</rdf:li>
               <rdf:li>PANTONE 132-1-4 C</rdf:li>
               <rdf:li>PANTONE 88-1-4 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 88-1-4 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>52</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>213</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 27-1-4 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>200</xmpG:red>
                           <xmpG:green>68</xmpG:green>
                           <xmpG:blue>131</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 127-1-4 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>170</xmpG:red>
                           <xmpG:green>216</xmpG:green>
                           <xmpG:blue>83</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 132-1-4 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>52</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Web Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -600 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 600 li
800 600 li
800 0 li
cp
clp
[1 0 0 1 0 0 ]ct
800 600 mo
0 600 li
0 0 li
800 0 li
800 600 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
f
296.009 186.009 mo
36.0088 186.009 li
36.0088 36.0093 li
296.009 36.0093 li
296.009 186.009 li
cp
0 0 0 0 cmyk
f
296.009 360.01 mo
36.0088 360.01 li
36.0088 210.009 li
296.009 210.009 li
296.009 360.01 li
cp
f
296.009 534.01 mo
36.0088 534.01 li
36.0088 384.01 li
296.009 384.01 li
296.009 534.01 li
cp
f
775.667 533.667 mo
319.667 533.667 li
319.667 35.6665 li
775.667 35.6665 li
775.667 533.667 li
cp
f
467.02 286.297 mo
467.02 286.121 467.043 285.95 467.046 285.774 cv
456.592 282.433 448.99 272.761 448.706 261.269 cv
437.934 264.606 430.107 274.646 430.107 286.516 cv
430.107 301.111 441.939 312.943 456.535 312.943 cv
463.779 312.943 470.338 310.023 475.11 305.304 cv
470.13 300.496 467.02 293.765 467.02 286.297 cv
cp
/0 
<<
/Name (PANTONE 132-1-4 C)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ .481697 .0484627 1 3.0518e-05 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
474.87 267.51 mo
479.645 262.789 486.203 259.87 493.445 259.87 cv
496.257 259.87 498.96 260.317 501.501 261.13 cv
501.504 260.955 501.527 260.784 501.527 260.607 cv
501.527 246.012 489.695 234.179 475.1 234.179 cv
460.504 234.179 448.672 246.012 448.672 260.607 cv
448.672 260.83 448.7 261.046 448.706 261.269 cv
451.18 260.502 453.81 260.088 456.535 260.088 cv
463.662 260.088 470.117 262.922 474.87 267.51 cv
cp
/1 
<<
/Name (PANTONE 27-1-4 C)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ .189609 .876829 .176181 3.0518e-05 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
1 sep
f
467.046 285.774 mo
467.187 278.633 470.142 272.185 474.87 267.51 cv
470.117 262.922 463.662 260.088 456.535 260.088 cv
453.81 260.088 451.18 260.502 448.706 261.269 cv
448.99 272.761 456.592 282.433 467.046 285.774 cv
cp
.184543 .363409 .947662 .00695811 cmyk
f
501.501 261.13 mo
501.273 272.767 493.541 282.564 482.929 285.854 cv
482.935 286.075 482.963 286.292 482.963 286.516 cv
482.963 293.867 479.956 300.514 475.11 305.304 cv
479.863 309.889 486.32 312.723 493.445 312.723 cv
508.041 312.723 519.871 300.893 519.871 286.297 cv
519.871 274.513 512.154 264.537 501.501 261.13 cv
cp
/2 
<<
/Name (PANTONE 88-1-4 C)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ .726192 .310887 3.0518e-05 3.0518e-05 ] 
>>
/CSD add_res
1 /2 /CSD get_res sepcs
1 sep
f
482.963 286.516 mo
482.963 286.292 482.935 286.075 482.929 285.854 cv
480.456 286.619 477.825 287.035 475.1 287.035 cv
472.29 287.035 469.586 286.587 467.046 285.774 cv
467.043 285.95 467.02 286.121 467.02 286.297 cv
467.02 293.765 470.13 300.496 475.11 305.304 cv
479.956 300.514 482.963 293.867 482.963 286.516 cv
cp
.646235 3.0518e-05 .881559 3.0518e-05 cmyk
f
474.87 267.51 mo
479.703 272.172 482.751 278.652 482.929 285.854 cv
493.541 282.564 501.273 272.767 501.501 261.13 cv
498.96 260.317 496.257 259.87 493.445 259.87 cv
486.203 259.87 479.645 262.789 474.87 267.51 cv
cp
.496864 .763699 3.0518e-05 3.0518e-05 cmyk
f
474.87 267.51 mo
470.142 272.185 467.187 278.633 467.046 285.774 cv
469.586 286.587 472.29 287.035 475.1 287.035 cv
477.825 287.035 480.456 286.619 482.929 285.854 cv
482.751 278.652 479.703 272.172 474.87 267.51 cv
cp
.314733 .228824 .798672 .00668345 cmyk
f
534.908 297.711 mo
534.908 302.633 535.043 308.65 535.316 311.795 cv
523.83 311.795 li
524.24 308.65 524.377 302.359 524.377 297.711 cv
524.377 217.989 li
518.086 217.989 li
519.455 216.075 520.821 213.34 521.643 211.425 cv
535.316 211.425 li
535.043 214.571 534.908 221.134 534.908 225.511 cv
534.908 297.711 li
cp
0 0 0 .8 cmyk
f
547.076 225.374 mo
550.631 225.374 553.365 228.108 553.365 231.8 cv
553.365 235.219 550.631 237.954 547.076 237.954 cv
543.521 237.954 540.787 235.219 540.787 231.8 cv
540.787 228.108 543.521 225.374 547.076 225.374 cv
cp
552.546 297.574 mo
552.546 302.633 552.683 309.06 552.957 311.795 cv
541.47 311.795 li
541.743 308.788 541.88 302.359 541.88 297.574 cv
541.88 256.961 li
535.591 256.961 li
537.095 255.32 538.461 252.585 539.557 250.397 cv
552.957 250.397 li
552.683 253.542 552.546 259.423 552.546 264.482 cv
552.546 297.574 li
cp
f
588.646 258.329 mo
576.886 258.329 567.177 268.449 567.177 280.891 cv
567.177 293.609 576.749 303.863 588.782 303.863 cv
600.27 303.863 609.567 293.609 609.567 281.165 cv
609.567 268.584 600.27 258.329 588.646 258.329 cv
cp
619.824 297.711 mo
619.824 303.455 619.96 308.24 620.233 311.795 cv
608.885 311.795 li
609.157 309.198 609.157 306.053 609.157 299.489 cv
604.098 308.514 595.211 312.753 586.321 312.753 cv
569.366 312.753 556.374 298.394 556.374 281.028 cv
556.374 263.114 569.228 249.303 586.867 249.303 cv
596.303 249.303 604.781 253.405 609.157 261.747 cv
609.157 217.989 li
602.867 217.989 li
604.372 216.348 605.876 213.203 606.696 211.425 cv
620.233 211.425 li
619.96 215.802 619.824 219.904 619.824 223.596 cv
619.824 297.711 li
cp
f
630.899 225.374 mo
634.456 225.374 637.19 228.108 637.19 231.8 cv
637.19 235.219 634.456 237.954 630.899 237.954 cv
627.345 237.954 624.611 235.219 624.611 231.8 cv
624.611 228.108 627.345 225.374 630.899 225.374 cv
cp
636.371 297.574 mo
636.371 302.633 636.508 309.06 636.781 311.795 cv
625.294 311.795 li
625.568 308.788 625.705 302.359 625.705 297.574 cv
625.705 256.961 li
619.414 256.961 li
620.918 255.32 622.285 252.585 623.381 250.397 cv
636.781 250.397 li
636.508 253.542 636.371 259.423 636.371 264.482 cv
636.371 297.574 li
cp
f
660.163 234.672 mo
659.891 237.954 659.752 242.193 659.752 246.842 cv
659.752 250.397 li
676.845 250.397 li
676.845 259.149 li
659.752 259.149 li
659.752 290.054 li
659.752 300.309 663.991 304.001 669.599 304.001 cv
671.514 304.001 673.838 303.455 674.932 302.359 cv
674.932 312.207 li
672.881 312.207 670.009 312.89 666.863 312.89 cv
657.291 312.89 649.224 307.283 649.224 292.104 cv
649.224 259.149 li
639.515 259.149 li
639.515 250.397 li
649.224 250.397 li
649.224 246.842 li
649.224 242.193 649.087 237.954 648.813 234.672 cv
660.163 234.672 li
cp
f
667.409 347.076 mo
666.179 347.076 665.085 346.939 663.991 346.665 cv
666.861 343.108 669.87 338.871 672.605 334.769 cv
678.349 325.88 685.597 314.94 691.476 303.863 cv
671.514 264.345 li
668.505 258.602 666.315 254.5 663.991 250.397 cv
676.845 250.397 li
677.666 252.996 679.444 256.961 681.357 260.927 cv
697.084 292.104 li
701.869 281.985 705.697 273.645 710.346 261.884 cv
711.715 258.465 713.493 253.405 714.45 250.397 cv
726.62 250.397 li
724.433 254.363 721.424 261.337 719.92 264.893 cv
714.998 276.241 707.75 292.65 701.323 304.412 cv
695.715 315.214 687.784 327.932 681.494 337.913 cv
677.255 344.752 673.29 347.076 667.409 347.076 cv
cp
f
471.216 305.827 mo
478.192 305.827 483.799 301.04 483.799 294.887 cv
483.799 289.144 478.192 284.222 471.216 284.222 cv
462.876 284.222 458.363 289.144 458.363 294.887 cv
458.363 301.04 462.876 305.827 471.216 305.827 cv
cp
449.465 266.799 mo
447.905 262.03 449.099 255.792 449.099 255.792 cv
456.596 252.54 461.098 249.214 469.985 249.214 cv
485.851 249.214 493.508 257.966 493.508 276.426 cv
493.508 299.538 li
493.508 303.912 495.147 304.87 497.063 304.87 cv
498.156 304.87 499.387 304.731 500.071 304.188 cv
500.071 310.888 li
498.293 312.118 496.105 313.212 492.003 313.212 cv
487.901 313.212 484.618 310.888 483.934 305.964 cv
480.79 310.614 474.772 313.212 468.346 313.212 cv
455.491 313.212 447.833 305.69 447.833 295.435 cv
447.833 285.315 455.354 276.974 469.029 276.974 cv
475.457 276.974 481.473 279.708 483.524 283.126 cv
483.524 275.334 li
483.524 265.624 479.285 257.692 467.663 257.692 cv
460.415 257.692 454.878 261.846 449.465 266.799 cv
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
681.084 315.835 mo
406.01 315.835 li
406.01 315.835 406.136 316.552 406.818 317.466 cv
407.499 318.378 412.009 325.057 422.705 325.057 cv
433.398 325.057 674.997 325.05 674.997 325.05 cv
681.084 315.835 li
cp
0 0 0 .85 cmyk
f
453.825 211.418 mo
435.188 220.252 408.321 281.127 408.321 281.127 cv
408.321 281.129 397.459 250.311 393.57 250.311 cv
389.682 250.311 380.168 250.311 380.168 250.311 cv
378.892 254.015 376.763 257.485 374.631 261.19 cv
374.631 261.19 370.541 261.19 381.705 261.19 cv
392.868 261.19 405.506 311.873 405.506 311.873 cv
409.188 311.873 li
408.701 313.299 442.016 222.528 476.306 211.418 cv
453.825 211.418 li
cp
0 0 0 .8 cmyk
f
124.261 117.366 mo
124.261 117.271 124.274 117.179 124.275 117.084 cv
118.636 115.282 114.536 110.065 114.382 103.865 cv
108.572 105.666 104.35 111.082 104.35 117.484 cv
104.35 125.357 110.732 131.74 118.605 131.74 cv
122.513 131.74 126.051 130.165 128.625 127.619 cv
125.939 125.025 124.261 121.395 124.261 117.366 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
128.496 107.232 mo
131.071 104.686 134.609 103.111 138.515 103.111 cv
140.032 103.111 141.491 103.352 142.861 103.791 cv
142.863 103.696 142.875 103.604 142.875 103.508 cv
142.875 95.6353 136.493 89.2529 128.62 89.2529 cv
120.747 89.2529 114.364 95.6353 114.364 103.508 cv
114.364 103.629 114.379 103.746 114.382 103.865 cv
115.716 103.452 117.135 103.229 118.605 103.229 cv
122.45 103.229 125.932 104.757 128.496 107.232 cv
cp
1 /1 /CSD get_res sepcs
1 sep
f
124.275 117.084 mo
124.351 113.232 125.945 109.754 128.496 107.232 cv
125.932 104.757 122.45 103.229 118.605 103.229 cv
117.135 103.229 115.716 103.452 114.382 103.865 cv
114.536 110.065 118.636 115.282 124.275 117.084 cv
cp
.184543 .363409 .947662 .00695811 cmyk
f
142.861 103.791 mo
142.738 110.068 138.567 115.353 132.842 117.127 cv
132.846 117.246 132.861 117.363 132.861 117.484 cv
132.861 121.45 131.239 125.035 128.625 127.619 cv
131.189 130.092 134.672 131.621 138.515 131.621 cv
146.389 131.621 152.77 125.239 152.77 117.366 cv
152.77 111.009 148.608 105.628 142.861 103.791 cv
cp
1 /2 /CSD get_res sepcs
1 sep
f
132.861 117.484 mo
132.861 117.363 132.846 117.246 132.842 117.127 cv
131.509 117.54 130.089 117.764 128.62 117.764 cv
127.104 117.764 125.645 117.522 124.275 117.084 cv
124.274 117.179 124.261 117.271 124.261 117.366 cv
124.261 121.395 125.939 125.025 128.625 127.619 cv
131.239 125.035 132.861 121.45 132.861 117.484 cv
cp
.646235 3.0518e-05 .881559 3.0518e-05 cmyk
f
128.496 107.232 mo
131.103 109.747 132.747 113.243 132.842 117.127 cv
138.567 115.353 142.738 110.068 142.861 103.791 cv
141.491 103.352 140.032 103.111 138.515 103.111 cv
134.609 103.111 131.071 104.686 128.496 107.232 cv
cp
.496864 .763699 3.0518e-05 3.0518e-05 cmyk
f
128.496 107.232 mo
125.945 109.754 124.351 113.232 124.275 117.084 cv
125.645 117.522 127.104 117.764 128.62 117.764 cv
130.089 117.764 131.509 117.54 132.842 117.127 cv
132.747 113.243 131.103 109.747 128.496 107.232 cv
cp
.314733 .228824 .798672 .00668345 cmyk
f
160.881 123.523 mo
160.881 126.178 160.955 129.424 161.102 131.121 cv
154.906 131.121 li
155.127 129.424 155.201 126.031 155.201 123.523 cv
155.201 80.519 li
151.807 80.519 li
152.545 79.4868 153.283 78.0117 153.726 76.979 cv
161.102 76.979 li
160.955 78.6758 160.881 82.2158 160.881 84.5767 cv
160.881 123.523 li
cp
0 0 0 .8 cmyk
f
167.445 84.5029 mo
169.363 84.5029 170.837 85.978 170.837 87.9697 cv
170.837 89.8135 169.363 91.2886 167.445 91.2886 cv
165.528 91.2886 164.053 89.8135 164.053 87.9697 cv
164.053 85.978 165.528 84.5029 167.445 84.5029 cv
cp
170.396 123.449 mo
170.396 126.178 170.469 129.645 170.618 131.121 cv
164.421 131.121 li
164.569 129.499 164.642 126.031 164.642 123.449 cv
164.642 101.542 li
161.25 101.542 li
162.061 100.657 162.798 99.1816 163.389 98.0015 cv
170.618 98.0015 li
170.469 99.6978 170.396 102.87 170.396 105.599 cv
170.396 123.449 li
cp
f
189.869 102.28 mo
183.525 102.28 178.288 107.739 178.288 114.45 cv
178.288 121.311 183.452 126.842 189.943 126.842 cv
196.139 126.842 201.155 121.311 201.155 114.598 cv
201.155 107.812 196.139 102.28 189.869 102.28 cv
cp
206.687 123.523 mo
206.687 126.622 206.76 129.203 206.908 131.121 cv
200.787 131.121 li
200.933 129.72 200.933 128.023 200.933 124.482 cv
198.204 129.351 193.411 131.637 188.615 131.637 cv
179.469 131.637 172.46 123.892 172.46 114.524 cv
172.46 104.861 179.394 97.4111 188.91 97.4111 cv
194 97.4111 198.573 99.6235 200.933 104.124 cv
200.933 80.519 li
197.541 80.519 li
198.352 79.6343 199.164 77.9375 199.606 76.979 cv
206.908 76.979 li
206.76 79.3394 206.687 81.5522 206.687 83.5439 cv
206.687 123.523 li
cp
f
212.662 84.5029 mo
214.58 84.5029 216.055 85.978 216.055 87.9697 cv
216.055 89.8135 214.58 91.2886 212.662 91.2886 cv
210.744 91.2886 209.269 89.8135 209.269 87.9697 cv
209.269 85.978 210.744 84.5029 212.662 84.5029 cv
cp
215.613 123.449 mo
215.613 126.178 215.687 129.645 215.834 131.121 cv
209.637 131.121 li
209.786 129.499 209.86 126.031 209.86 123.449 cv
209.86 101.542 li
206.466 101.542 li
207.277 100.657 208.014 99.1816 208.606 98.0015 cv
215.834 98.0015 li
215.687 99.6978 215.613 102.87 215.613 105.599 cv
215.613 123.449 li
cp
f
228.447 89.5186 mo
228.3 91.2886 228.225 93.5757 228.225 96.083 cv
228.225 98.0015 li
237.445 98.0015 li
237.445 102.722 li
228.225 102.722 li
228.225 119.393 li
228.225 124.925 230.512 126.916 233.537 126.916 cv
234.57 126.916 235.824 126.622 236.414 126.031 cv
236.414 131.343 li
235.307 131.343 233.757 131.711 232.061 131.711 cv
226.898 131.711 222.545 128.687 222.545 120.499 cv
222.545 102.722 li
217.308 102.722 li
217.308 98.0015 li
222.545 98.0015 li
222.545 96.083 li
222.545 93.5757 222.472 91.2886 222.324 89.5186 cv
228.447 89.5186 li
cp
f
232.356 150.152 mo
231.692 150.152 231.102 150.078 230.512 149.93 cv
232.06 148.012 233.683 145.726 235.159 143.513 cv
238.256 138.718 242.167 132.817 245.337 126.842 cv
234.57 105.525 li
232.947 102.427 231.765 100.214 230.512 98.0015 cv
237.445 98.0015 li
237.888 99.4028 238.847 101.542 239.879 103.681 cv
248.363 120.499 li
250.944 115.04 253.009 110.542 255.516 104.197 cv
256.255 102.353 257.214 99.6235 257.73 98.0015 cv
264.295 98.0015 li
263.115 100.14 261.493 103.902 260.681 105.82 cv
258.026 111.942 254.117 120.793 250.65 127.138 cv
247.625 132.965 243.346 139.825 239.954 145.209 cv
237.667 148.898 235.528 150.152 232.356 150.152 cv
cp
f
126.525 127.901 mo
130.288 127.901 133.312 125.319 133.312 122 cv
133.312 118.902 130.288 116.247 126.525 116.247 cv
122.026 116.247 119.591 118.902 119.591 122 cv
119.591 125.319 122.026 127.901 126.525 127.901 cv
cp
114.792 106.849 mo
113.951 104.276 114.594 100.911 114.594 100.911 cv
118.638 99.1567 121.067 97.3628 125.861 97.3628 cv
134.418 97.3628 138.549 102.084 138.549 112.042 cv
138.549 124.508 li
138.549 126.868 139.434 127.385 140.466 127.385 cv
141.057 127.385 141.72 127.31 142.089 127.017 cv
142.089 130.631 li
141.13 131.295 139.951 131.885 137.738 131.885 cv
135.525 131.885 133.754 130.631 133.384 127.975 cv
131.689 130.483 128.443 131.885 124.976 131.885 cv
118.042 131.885 113.912 127.828 113.912 122.295 cv
113.912 116.837 117.968 112.337 125.345 112.337 cv
128.812 112.337 132.057 113.812 133.164 115.656 cv
133.164 111.453 li
133.164 106.214 130.877 101.936 124.608 101.936 cv
120.699 101.936 117.711 104.177 114.792 106.849 cv
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
239.732 133.3 mo
91.3511 133.3 li
91.3511 133.3 91.4185 133.687 91.7866 134.179 cv
92.1538 134.671 94.5864 138.274 100.357 138.274 cv
106.125 138.274 236.449 138.271 236.449 138.271 cv
239.732 133.3 li
cp
0 0 0 .85 cmyk
f
117.144 76.9751 mo
107.09 81.7402 92.5981 114.578 92.5981 114.578 cv
92.5981 114.579 86.7388 97.9546 84.6411 97.9546 cv
82.5435 97.9546 77.4116 97.9546 77.4116 97.9546 cv
76.7231 99.9526 75.5747 101.825 74.4243 103.823 cv
74.4243 103.823 72.2183 103.823 78.2397 103.823 cv
84.2622 103.823 91.0786 131.163 91.0786 131.163 cv
93.0659 131.163 li
92.8022 131.932 110.773 82.9678 129.27 76.9751 cv
117.144 76.9751 li
cp
0 0 0 .8 cmyk
f
124.261 293.06 mo
124.261 292.965 124.273 292.873 124.275 292.778 cv
118.636 290.976 114.536 285.759 114.382 279.559 cv
108.571 281.36 104.35 286.775 104.35 293.178 cv
104.35 301.051 110.732 307.434 118.605 307.434 cv
122.513 307.434 126.05 305.858 128.625 303.313 cv
125.939 300.719 124.261 297.089 124.261 293.06 cv
cp
0 0 0 .362289 cmyk
f
128.496 282.926 mo
131.071 280.379 134.609 278.805 138.515 278.805 cv
140.032 278.805 141.49 279.046 142.861 279.484 cv
142.863 279.39 142.875 279.298 142.875 279.203 cv
142.875 271.329 136.493 264.947 128.62 264.947 cv
120.747 264.947 114.364 271.329 114.364 279.203 cv
114.364 279.323 114.379 279.439 114.382 279.559 cv
115.716 279.146 117.135 278.922 118.605 278.922 cv
122.45 278.922 125.932 280.451 128.496 282.926 cv
cp
0 0 0 .549255 cmyk
f
124.275 292.778 mo
124.351 288.926 125.945 285.448 128.496 282.926 cv
125.932 280.451 122.45 278.922 118.605 278.922 cv
117.135 278.922 115.716 279.146 114.382 279.559 cv
114.536 285.759 118.636 290.976 124.275 292.778 cv
cp
0 0 0 .3 cmyk
f
142.861 279.484 mo
142.738 285.762 138.568 291.047 132.843 292.821 cv
132.846 292.94 132.861 293.057 132.861 293.178 cv
132.861 297.144 131.239 300.729 128.625 303.313 cv
131.189 305.786 134.672 307.314 138.515 307.314 cv
146.389 307.314 152.77 300.933 152.77 293.06 cv
152.77 286.704 148.607 281.322 142.861 279.484 cv
cp
0 0 0 .505219 cmyk
f
132.861 293.178 mo
132.861 293.057 132.846 292.94 132.843 292.821 cv
131.508 293.234 130.09 293.458 128.62 293.458 cv
127.104 293.458 125.645 293.216 124.275 292.778 cv
124.273 292.873 124.261 292.965 124.261 293.06 cv
124.261 297.089 125.939 300.719 128.625 303.313 cv
131.239 300.729 132.861 297.144 132.861 293.178 cv
cp
0 0 0 .401352 cmyk
f
128.496 282.926 mo
131.103 285.441 132.747 288.937 132.843 292.821 cv
138.568 291.047 142.738 285.762 142.861 279.484 cv
141.49 279.046 140.032 278.805 138.515 278.805 cv
134.609 278.805 131.071 280.379 128.496 282.926 cv
cp
0 0 0 .6 cmyk
f
128.496 282.926 mo
125.945 285.448 124.351 288.926 124.275 292.778 cv
125.645 293.216 127.104 293.458 128.62 293.458 cv
130.09 293.458 131.508 293.234 132.843 292.821 cv
132.747 288.937 131.103 285.441 128.496 282.926 cv
cp
0 0 0 .343033 cmyk
f
160.881 299.217 mo
160.881 301.872 160.955 305.118 161.102 306.814 cv
154.906 306.814 li
155.127 305.118 155.201 301.725 155.201 299.217 cv
155.201 256.213 li
151.807 256.213 li
152.545 255.181 153.283 253.706 153.726 252.673 cv
161.102 252.673 li
160.955 254.37 160.881 257.91 160.881 260.271 cv
160.881 299.217 li
cp
0 0 0 .8 cmyk
f
167.445 260.197 mo
169.363 260.197 170.838 261.672 170.838 263.664 cv
170.838 265.507 169.363 266.982 167.445 266.982 cv
165.528 266.982 164.052 265.507 164.052 263.664 cv
164.052 261.672 165.528 260.197 167.445 260.197 cv
cp
170.396 299.144 mo
170.396 301.872 170.469 305.339 170.618 306.814 cv
164.42 306.814 li
164.569 305.192 164.642 301.725 164.642 299.144 cv
164.642 277.236 li
161.25 277.236 li
162.061 276.351 162.798 274.875 163.389 273.695 cv
170.618 273.695 li
170.469 275.392 170.396 278.563 170.396 281.292 cv
170.396 299.144 li
cp
f
189.869 277.974 mo
183.525 277.974 178.288 283.433 178.288 290.144 cv
178.288 297.004 183.452 302.536 189.943 302.536 cv
196.139 302.536 201.155 297.004 201.155 290.292 cv
201.155 283.505 196.139 277.974 189.869 277.974 cv
cp
206.687 299.217 mo
206.687 302.315 206.76 304.896 206.908 306.814 cv
200.787 306.814 li
200.933 305.414 200.933 303.717 200.933 300.176 cv
198.204 305.044 193.41 307.331 188.615 307.331 cv
179.469 307.331 172.46 299.585 172.46 290.218 cv
172.46 280.555 179.394 273.105 188.91 273.105 cv
193.999 273.105 198.573 275.318 200.933 279.817 cv
200.933 256.213 li
197.541 256.213 li
198.352 255.328 199.164 253.631 199.605 252.673 cv
206.908 252.673 li
206.76 255.033 206.687 257.246 206.687 259.238 cv
206.687 299.217 li
cp
f
212.662 260.197 mo
214.58 260.197 216.055 261.672 216.055 263.664 cv
216.055 265.507 214.58 266.982 212.662 266.982 cv
210.744 266.982 209.269 265.507 209.269 263.664 cv
209.269 261.672 210.744 260.197 212.662 260.197 cv
cp
215.613 299.144 mo
215.613 301.872 215.686 305.339 215.834 306.814 cv
209.638 306.814 li
209.786 305.192 209.859 301.725 209.859 299.144 cv
209.859 277.236 li
206.465 277.236 li
207.277 276.351 208.015 274.875 208.606 273.695 cv
215.834 273.695 li
215.686 275.392 215.613 278.563 215.613 281.292 cv
215.613 299.144 li
cp
f
228.447 265.212 mo
228.3 266.982 228.225 269.27 228.225 271.777 cv
228.225 273.695 li
237.445 273.695 li
237.445 278.416 li
228.225 278.416 li
228.225 295.087 li
228.225 300.619 230.512 302.61 233.537 302.61 cv
234.57 302.61 235.823 302.315 236.413 301.725 cv
236.413 307.037 li
235.307 307.037 233.758 307.405 232.061 307.405 cv
226.898 307.405 222.545 304.381 222.545 296.193 cv
222.545 278.416 li
217.308 278.416 li
217.308 273.695 li
222.545 273.695 li
222.545 271.777 li
222.545 269.27 222.472 266.982 222.324 265.212 cv
228.447 265.212 li
cp
f
232.356 325.846 mo
231.692 325.846 231.102 325.771 230.512 325.624 cv
232.06 323.706 233.683 321.42 235.159 319.207 cv
238.256 314.412 242.167 308.511 245.337 302.536 cv
234.57 281.219 li
232.947 278.121 231.766 275.908 230.512 273.695 cv
237.445 273.695 li
237.888 275.097 238.847 277.236 239.879 279.375 cv
248.363 296.193 li
250.944 290.734 253.009 286.235 255.516 279.891 cv
256.255 278.047 257.214 275.318 257.73 273.695 cv
264.295 273.695 li
263.116 275.834 261.493 279.596 260.681 281.514 cv
258.026 287.636 254.116 296.487 250.65 302.831 cv
247.625 308.658 243.346 315.519 239.954 320.903 cv
237.667 324.592 235.528 325.846 232.356 325.846 cv
cp
f
126.525 303.595 mo
130.288 303.595 133.312 301.013 133.312 297.694 cv
133.312 294.596 130.288 291.941 126.525 291.941 cv
122.026 291.941 119.591 294.596 119.591 297.694 cv
119.591 301.013 122.026 303.595 126.525 303.595 cv
cp
114.792 282.542 mo
113.951 279.97 114.594 276.605 114.594 276.605 cv
118.638 274.851 121.067 273.057 125.861 273.057 cv
134.418 273.057 138.549 277.777 138.549 287.735 cv
138.549 300.202 li
138.549 302.562 139.433 303.079 140.466 303.079 cv
141.056 303.079 141.72 303.004 142.089 302.711 cv
142.089 306.325 li
141.13 306.988 139.951 307.578 137.738 307.578 cv
135.525 307.578 133.754 306.325 133.385 303.669 cv
131.689 306.177 128.443 307.578 124.976 307.578 cv
118.042 307.578 113.911 303.521 113.911 297.989 cv
113.911 292.531 117.968 288.031 125.345 288.031 cv
128.812 288.031 132.057 289.506 133.165 291.35 cv
133.165 287.146 li
133.165 281.908 130.877 277.63 124.608 277.63 cv
120.699 277.63 117.711 279.871 114.792 282.542 cv
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
239.732 308.993 mo
91.3501 308.993 li
91.3501 308.993 91.4185 309.38 91.7866 309.873 cv
92.1548 310.365 94.5864 313.968 100.357 313.968 cv
106.125 313.968 236.449 313.964 236.449 313.964 cv
239.732 308.993 li
cp
0 0 0 .85 cmyk
f
117.144 252.669 mo
107.09 257.434 92.5972 290.271 92.5972 290.271 cv
92.5972 290.272 86.7388 273.648 84.6411 273.648 cv
82.5435 273.648 77.4116 273.648 77.4116 273.648 cv
76.7231 275.646 75.5747 277.519 74.4243 279.517 cv
74.4243 279.517 72.2183 279.517 78.2397 279.517 cv
84.2622 279.517 91.0786 306.856 91.0786 306.856 cv
93.0659 306.856 li
92.8032 307.626 110.774 258.662 129.27 252.669 cv
117.144 252.669 li
cp
0 0 0 .8 cmyk
f
135.198 468.626 mo
133.368 468.626 132.248 468.626 131.56 468.626 cv
130.443 471.183 129.82 474.005 129.82 476.975 cv
129.82 487.955 138.298 496.936 149.063 497.779 cv
147.812 492.992 141.151 468.626 135.198 468.626 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
151.754 497.811 mo
157.062 497.546 161.851 495.325 165.391 491.824 cv
162.243 488.787 160.066 484.768 159.309 480.264 cv
155.341 488.649 152.619 495.567 151.754 497.811 cv
cp
f
150.938 480.416 mo
150.938 480.416 152.082 477.829 153.957 473.956 cv
148.408 470.315 144.696 464.111 144.521 457.02 cv
141.25 458.031 138.329 459.833 135.963 462.191 cv
137.81 462.191 140.716 462.191 142.215 462.191 cv
144.515 462.191 150.938 480.417 150.938 480.416 cv
cp
f
171.927 457.491 mo
174.38 456.477 177.064 455.913 179.883 455.913 cv
182.105 455.913 184.242 456.266 186.25 456.91 cv
186.253 456.771 186.271 456.636 186.271 456.496 cv
186.271 452.077 184.892 447.987 182.552 444.614 cv
178.849 447.984 175.266 452.493 171.927 457.491 cv
cp
1 /1 /CSD get_res sepcs
1 sep
f
161.688 459.234 mo
166.628 450.63 172.466 442.104 177.408 439.434 cv
174.006 437.03 169.864 435.607 165.382 435.607 cv
153.846 435.607 144.494 444.96 144.494 456.496 cv
144.494 456.672 144.516 456.842 144.521 457.02 cv
146.476 456.412 148.554 456.086 150.709 456.086 cv
154.744 456.086 158.498 457.25 161.688 459.234 cv
cp
f
153.957 473.956 mo
155.893 469.96 158.613 464.592 161.688 459.234 cv
158.498 457.25 154.744 456.086 150.709 456.086 cv
148.554 456.086 146.476 456.412 144.521 457.02 cv
144.696 464.111 148.408 470.315 153.957 473.956 cv
cp
.184543 .363409 .947662 .00695811 cmyk
f
186.25 456.91 mo
186.07 466.107 179.959 473.852 171.571 476.45 cv
171.575 476.626 171.598 476.798 171.598 476.975 cv
171.598 482.785 169.221 488.038 165.391 491.824 cv
169.148 495.449 174.251 497.689 179.883 497.689 cv
191.42 497.689 200.771 488.337 200.771 476.801 cv
200.771 467.486 194.671 459.603 186.25 456.91 cv
cp
1 /2 /CSD get_res sepcs
1 sep
f
171.571 476.45 mo
169.616 477.057 167.537 477.384 165.382 477.384 cv
163.854 477.384 162.369 477.205 160.934 476.891 cv
160.369 478.039 159.833 479.159 159.309 480.264 cv
160.066 484.768 162.243 488.787 165.391 491.824 cv
169.221 488.038 171.598 482.785 171.598 476.975 cv
171.598 476.798 171.575 476.626 171.571 476.45 cv
cp
.646235 3.0518e-05 .881559 3.0518e-05 cmyk
f
171.927 457.491 mo
170.396 459.784 168.916 462.172 167.5 464.601 cv
169.96 467.935 171.461 472.014 171.571 476.45 cv
179.959 473.852 186.07 466.107 186.25 456.91 cv
184.242 456.266 182.105 455.913 179.883 455.913 cv
177.064 455.913 174.38 456.477 171.927 457.491 cv
cp
.496864 .763699 3.0518e-05 3.0518e-05 cmyk
f
160.934 476.891 mo
162.369 477.205 163.854 477.384 165.382 477.384 cv
167.537 477.384 169.616 477.057 171.571 476.45 cv
171.461 472.014 169.96 467.935 167.5 464.601 cv
165.11 468.702 162.897 472.901 160.934 476.891 cv
cp
.314733 .228824 .798672 .00668345 cmyk
f
158.996 476.801 mo
158.996 476.663 159.014 476.528 159.017 476.388 cv
157.207 475.809 155.514 474.979 153.957 473.956 cv
152.082 477.829 150.938 480.416 150.938 480.416 cv
150.938 480.417 144.515 462.191 142.215 462.191 cv
140.716 462.191 137.81 462.191 135.963 462.191 cv
134.12 464.03 132.616 466.206 131.56 468.626 cv
132.248 468.626 133.368 468.626 135.198 468.626 cv
141.151 468.626 147.812 492.992 149.063 497.779 cv
149.607 497.821 150.153 497.862 150.709 497.862 cv
151.062 497.862 151.406 497.827 151.754 497.811 cv
152.619 495.567 155.341 488.649 159.309 480.264 cv
159.12 479.135 158.996 477.984 158.996 476.801 cv
cp
0 0 0 0 cmyk
f
161.688 459.234 mo
162.952 460.021 164.136 460.924 165.201 461.951 cv
167.117 460.058 169.399 458.534 171.927 457.491 cv
175.266 452.493 178.849 447.984 182.552 444.614 cv
181.155 442.599 179.41 440.848 177.408 439.434 cv
172.466 442.104 166.628 450.63 161.688 459.234 cv
cp
f
161.688 459.234 mo
158.613 464.592 155.893 469.96 153.957 473.956 cv
155.514 474.979 157.207 475.809 159.017 476.388 cv
159.128 470.743 161.464 465.646 165.201 461.951 cv
164.136 460.924 162.952 460.021 161.688 459.234 cv
cp
f
158.996 476.801 mo
158.996 477.984 159.12 479.135 159.309 480.264 cv
159.833 479.159 160.369 478.039 160.934 476.891 cv
160.285 476.75 159.643 476.588 159.017 476.388 cv
159.014 476.528 158.996 476.663 158.996 476.801 cv
cp
f
171.927 457.491 mo
169.399 458.534 167.117 460.058 165.201 461.951 cv
166.044 462.765 166.804 463.656 167.5 464.601 cv
168.916 462.172 170.396 459.784 171.927 457.491 cv
cp
f
165.201 461.951 mo
161.464 465.646 159.128 470.743 159.017 476.388 cv
159.643 476.588 160.285 476.75 160.934 476.891 cv
162.897 472.901 165.11 468.702 167.5 464.601 cv
166.804 463.656 166.044 462.765 165.201 461.951 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 /1 /2 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 11.0%%AI8_CreatorVersion: 14.0.0%%For: (Benjamin Ross) ()%%Title: (ValidityLogoSet2.eps)%%CreationDate: 7/20/09 9:29 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6CQfd^D'8T]l9FnW77a[V:0$E140]C\FJ&8OLQWC<A:)0JTqLkNY;glu]Z\K6YP-R$hMJ>6k4<7;NOp^nh*gEl+d&0`!!sct%p9XAFTAFtmqTX6I\,Yo(h97h(niYf/pbtu5qq6IErHGGor(r$X\)7,UnES9q?b^sbc)Vq9]RB\UgNPm]e]mJ'?bX)Hjid,N0/%8C%gT0eXJ,=.CkO2c,o7'P#48hnMrVc'N?erJFp[IbP9mJoI/Gu)'qR[j.1[oD^S\]gIk*tghqY&ICiPVk5rL4&eo8i[%npC632m;)Q%#KktaM^.BXV]Xg2I8F*rrp/%:If$Uh]%eiFIC;7r2n-PP[f9QeYN6=#CBrbro"Y-)LDAJ24Hs*:"M`1M'c-S@``DEZ+oTC?)s6=g%0"D^5)/IITAi]_78F?>&W@cF*hc"Q$nX$*5V&k&.qnBAuV'0DYR;4CGkj:mL^%MPdh(EDJnT27J>Qap[Y:JUMo9/.Yci<7u?@DSE%a7o%/^46+Tc%#`sO5b(b4oFgJbP/2R$H7:>So1,'qVhH!D..H]42C\DeTt.l^3R/gr7=-k?N'3U=9%tq0[%1UrT=(5+90,4kh!#Q%iAl(-p\m+Ts$)lE3)sD01A($aqYo$Whn==6*[X?G:udW8o'Noi^8G*ZT=t:(,u1M/Su$r"#/>T^m^lQh@;W[Ur[7%[]nQLYX.LG>%]_pe?S9ZX"i,=*ip#``%s.60;Q=@C-(EDul7eelsEjJ`^*<@(J]o)eD:;h[T=2^rNkkl@]s51P;rS?cuJ&R>/f>V+3Hi7eg(1k1Y%r/IY)?JWAns-QLDnb`'ah?Xd\p%Pr1m!)o_Ieaq-l/g1![r3@-!+6]DljQ8[#%ksNDnk>Ig$ePLq"RWLE"D14^]2hgBFU^?32^-2%?g@*0rV]O]Vn[]Tp89#3k0:ZRSUQ%ap?b)Z](t_T*7sXsrq;uaa/a.8s5N2(!pIDtk,6i"?Tio7qM/F*&.s$Mh5_Lo,CGmXX$8iJ%l+:$s!ck;jS=u9.s8)$X[m)jZ#'p%,gRE\;q<j$!UBZkSk2j2oJfEhgYQ#@:ne-2sEHg%_+FX(b%j5Rn^%q@l_o_p!nM0CjpjVfD%:5X6SkBB/hpkP?r^4#mlTcO/DfEFrFD#`\gNaL6?hYca[B$gNOdU;r!O9C&VDh6K#^B+?/kD]B5jnIZIrpJUc+9(d+S"gc>r8$5J%J,>amouDi;If'*0+!:?,EfaYCI/!X52rDCHbo_F_s6AQ1fT7'Po(pV?0G-n?FDB\sr.)r;c#<UNnqU;"oDKd!WTA%,@JW+m7PFV0%4o9b'>f4h^NViT[^O,eDCCmtJa.0pEl.+&9_1,g@J"tq/9ZLNPpOMJ^l(=jQ4Q.&?0CZ&aQm4^"Sii@Mc4-AoI%G9>]D45>chGe&%=^Z__if]V?'[SMeEa$cXgb*foA[u12BjG,e%r5G!Rb+is1:!M&o6S%*_/icJ")&AL)MAZ280Na$C1uQ?cJ^\:_/fqW5fXMh(h/G<%MA_ue\kn<_G`K9'/mdOc]E^ci[&/po8h!R9Vfl\P[1'f%p78gtht\A"J\T)Y&PncIr1,jDhig1U^1ZG2#4<6&XjD!O\-_%?qSA-0%J&kspIYR"qR!kCkTJNTqoj@^iFFSdi\\Gbk]g(DHmMe:]^>.oK"O%/Glhtig?g]S6bMD:REk\%rm8>V!OtZ&40B'3C(;L>#^Ur:W%h;-qYmnV>;];p/;0&NM;#cqD%(*MQ7p2YM(H[C+R4l*R$H<Y:YD7Y_9iHDn?DWgWiq/X22hk&0We%)%8\X`7OS`;`#f*S=kI(DOJ%:3WVje+n)H[8T5R;a.$V4GD71>+jdI1fjAFe/do&*H__$KcN6XkHK;e\qloqDFWn@Fr%[t*QA>H>V6]_*;b1XrC7>?%iXs=3J"h.%DC"3IncZLTI)0GRmN@#;CB>h+Rt+B*1u_L]INcanB?7L541"suI,]4VIAT.uGk<H2H2gPC^si:6cGZ3ErVl^)qNN`tKq8WIK*R,c%S`t\CJc,gS_RO-Fp3FcaicCb?_M@XhXHD<%3DCA<8qtFjbe)ep_Wk7e=\C0I_Wb@:PZ$ISn=7Y3_"7_`_^*#T<0mpnV1onNU'\PF%Cg1[l'dd*If39(8*:E\nX/pk`dm=/a!TYICd'0p$C?GeB)on0ia??Uj&7d=Zmc8qU,nEeXHP%.n29U1TGP'W^%u<.=*pI=5-VY^6%;-IRpQt8RaXFT)BnFK%4cg^O,V!'C%d_"V8&'?)XX36BT'Y\(Ji"lrb+@6a`=Hp+!_]`MTei&]#-umQYEDbk)5c!3\8K`(Wnck2g%#paEnfioP\2Ris:q%00[?a/C<G:2;kne&njj0SgSJcpif@s;Ni[kIl-0G_,O+t%16,?-!,X:.H3iKZt#!g<'p=!`go/W;O-$,BYO%r%lP!S.>W][X]@2a)qcrjqd+*#tD2:[)tC'0ZUso"qE1,HLG8phSH9U_]3MI4)d)hfGPn*FG1m*6$?L@^#$UIEe4Tpi=.dofO=o$%Erc<fEXC>S4i&1Jj;j5=:(LKD,&_?j=PWK!R@Y'TD*l7u&i4E>2WG.SV$-ug23M?9dCPKc`FgM@HV]5/7I;+P>84UBFdbkh2Nka%%I8TuUP//Q#,>$mF_geODL"cs:m0ed43tfddS5DDDJ8QpS%]$qWdm!GmLB#iNHHOVk*J3l15&(%==nb_@hWM0DKqJ#bc-K#b_gKH7%KA$/!0Dk877sJeL_:R&XSeDCGFGM*D0S.?R!t2W3=/FFb<Z>KucU1pR9h<T78tDR>U*WEQ=O8Y(/e'YL6\K5+F$bNt,Z;Q=%5a^r%&`N:#`)sYQ`N'Yt22jfXq9G4=eT-`$jSP;$^:JUip?!IrJ?&IQq*,;2b).oOZ%f+FbZJ@;&<T4Q>F/=/?]`-E@Nh<^`H0[/rqQ6r%ih6Z7EpYpOBLolN<Co.$UPk4^c9VC%]2u2mGY;ZO!-D@\*"e$5.!gI.Kd#c_W3NYRb$$=\Xe<5IIL&$o7,)+E/MPWh(hNU)c0pZ<%.Vss,[b(_;:4Pb;RkSZuG9H+qJ?Zj2=C;6ON?!+bct4r,"e8+RLnmScTQZu"JAqZ7Y"WHKlKjqtlU.-)(OmGK7"pn#&.lYL<hf6'%qkBH7N@^\gWaQO0.?[iAb-Ta,n&fV\2gl^R;V"AlVNEL,O0UCl[8GIE:P1DPlKDd4W9U.'e48c*VGj3Y=e%[$B:@lgF!^rk)<OeM%3H]rLFUPPC*]E$^k$W]WR=Keh)gK:!r!_?W*GkHDYk]rF#R!s3&l;XpC#JrXlqu1]8VLY#%Sc.XAoqLi3tUeXe<*VaaKRjjEIB/9%qc8[B]*YU35fT&@[B-TqC5Fp`.6q1tc;a&T8NLue)T;jr'Qn;e7E4e+gPGK,e8<;l0K9<+3!Rka0Xq8D_l/<YS\COu*X>1=].-S<%WZYrn_D?k07913\RPU`mZGsE$`4VucF%<S"/@m'>O7_BA)R1On#!$'hJB&&.c6H.W%MY'0RH-YsET8\l9cdI$RqMW<M/k@h0u(:5%7="#9.2R'$i1NQdFNKeGba$&j'R$BZ`0moo1F7n:=8,@'0_F?-r7"_HAQ@]HOu7r'6OQMQ'OiZ&TMB%UZ&*[5'5o'6O0(OMn]5<M%'<dQBJOU]MH",uoWJ@>Uo:(_&1&!$"p_qg;X>f%*m74bPM<5<%J$a5t>.rr0m7@t.$gC%HVD%rF'SMBl+$E\0h\E>YFV9Ohhp]Sh%'fV_br]SH1as+[&pobV5YF;ONrm#sC>^<gPo2\P\Mei]P*A)H@=O%TXLQ,n'S(2I)j4U#?:N90qL]9k&ou%tZK091UN<iITVnMj9%c$,OdU9do'VR]B>hD97S_i0?K!N%\Kk=F&=VskR?=0Q(HecqSF4A4!W47?ma5cKjdomi6fV]Kai@=l&0qZMi-Z\h]>,R`"u]*)s`%GHsdkZq3Zk+aK9M+GjM;RDAYeC\/\#NYZCQ9/`![Wflmr"uGr?mXjjP)O(ut6mS+$+^6&F%1(mM#&Bdt=)tl`1<`S;UXb9pr]5Je%hei>iLI\k%plYN@>p3j%I&b@GME>>\#KT?(*pbFYGB"DU7M)0r4,knW3AO@h^F8))(B6+gkHh[[]5m<So.9bmmDKZV`op>:h>H]V%99hGBWmOUbTrmCA[[#<Pm]$V@%f<<R@hhS1@^"=6dZD*Pm(9j(%I>VeX:o<*Q2Fa\jG?jWA.G_,:9Bd$>>&BZb:\[134\IudD_/k%G4NbH2R,?/Fa\=[45]dXn9qA#]DK=moA+iPZhhB`Edk@l>CGDbqq]Knh>Q6QH--=%)10CNk8ZR&N?.f5p7AP*2`C4"inS&#60=\J%oJG_Y;dYr=bBVU7adcsX,P!ZrSHDTVB`&;,YflMIV^D4jj7A[o.!CR?fI=tM4\-/:FK:1Wp?4r8Z0[@uR8&._M'hn)e+q99Emk=g%1H26_<h-F=k)<;aCgm9gEXMMH]fq9g[ZYDaPGX3)fg)"h6<<*Z\7tDF#+R(3f!<'!P4G'`CQ!Yra@\9,/>t2*JVb]_:N2nl4Ge0!%:TToo#9A.m[;[PI\n<V4H`PK$d[<h#8]rApHI&L,M*th&,+`T=]2f\-p.WDqA^;B,9c9>8$t3aQKEZ!E8AH(1`"kpVKocIiVeTaJ%gkhBW9^6RA?U^eYL.iYHk`6-;%\\A0gb0q0:]`M;39.OoMA=uDWpM'XgrSeL=%Sd(OjGl27AAt(Zohl=nC#*8@C43s2;hZRF[3!8%&h2-ob_&R+.RT'qb!V#l?">aN+!3K3r0@r4nX="(`*@ukX>?87l#(RhJEeMBbbF,Q1=-FQdO*dQ=4":VK7g>sW/I2Zm$:0UGp\DO%5'kqZB3hiG3c*Joj1YtWrC))Lo43#m'\>c#=^"D2Sk/##ML*EO%/+24[/.A.b,T3g4\`#]_T:coTIT8$gBT73W4LsmP>-J-ZjEuM%HY*;:rAr&A(52U.B8?jSBru]g\&bo0X8$gWP'?2<p"`&sI]I:<9Z9R]aRbt8NR*Sq'><mqWd6QeG,?VtbGcmcP".>0fsV9*iV:d`%9qnHT,<MRlnm\f:oIi::k#4t5S!c[VY_k06JkVpd5(G`"s4ONojq55Sk\+&brd1pGK/h58f_RYBmqlf0RbHGl[@Z6lKOuUd@rA_"%8)*6B';(N"gVW#6DJDo%RQWNd728AZkYnnB`4GU\L)^@MEo7nU6=h,.7&RSCJpU9W.h%5BYF#"H1c_AF?10+`J]Ses.ZQZ7lZC1m%8R-KS-"B,#o%&ra:Dt]=R=iPjGU-lj*BerX=ku6q'E3tEFV:;W]2H<u[@0J5]2Y>"<Lc>1%7Iq\8R/=8\Q?C58<<`<F:F=UBQ;?J%_D0+oMA&QQobas@<54RlNg`MbPK6RKDML__qF'3F0s)ZNA'1Rg^,bc-3?KRXg.?[pGN=P;E$en3ZJ[&;A)d0YX6nK?[T+="aDZ,g%TJOH1,1IEK43@2i>6h>ah(iZUOKF,*A;,8[bDPut\"mP#9sPf'<j:e6Z9=j6-=0HBllY?g#os^2U+[jT;%U('6Da*>d[Np1;5th)%K]cm/e)lP`1!V*]SKO`<U#eJjduT/RCRaPB0^`OYWEiLMZ7;>,-'je7=5@$COP8%"6AE?&YuYTg>m<*r)q%1!+Z6+.0s.,M@e!-(%:lcs2L'$_Z!&bu#maR0?]dA6u243%:i?1<,Ump+94L21X-FUJ,M5YU,>2H`'IFHZ8!FE\Mca'pQRGq\eW("F"nPWP$J51h\HZ&42%%hDn3Vhr-M=m]]1`peO#JYl:X)MofGBO[((;,.d;EcGg&[V+nIhHZ"C\(6J:!Qdd3M=!Kpq7aE?[RKit(G^/R(B'fWp"d%mqgK0+%VV+o8ko@q@,ko60J/Oa5X*YWVbl-4JX^-\EDLA>9rRZ>hS/ut0rZU*[LAN)_dNTqY$'>'mLu]hIbJt(iXbf9617=+dR9rURRN=E,%+mQ(SZ;+lo(CRd2B#_\#R6G$!-8G9sBCL7HQ49R+oTM!k*Ls18:$YU+e6(/O/@BH1$UC3^P?>C4R9OLpT$?83iXfLaJ@Yp:##8b:%a6k4?`Zn1db^`d@6afnqK#XUg=DFX=5`]"rNb7BDPkAWoT;+S+#%q0O,m@tH)0ggs3M:2QZu@?/W.^C4'k3UN#1+V4MmZ@k(h'3_%Nu"=j0^bL=/)]DH+IF-)igF4'CR+7n:_JM1`+:AX;;RZ3ElGb4i6tD,T*L_`/ct8&E=koeC0em$+ddu$8AMU5/)kE!R'N75S'[be%#'CS'L-[iJY(r/gr47^soCK=?)(#PA,HfXeDd0Rg'ElTD%iCTmUb]0KObJD%PVknP&t>""f_b4Z:h/S;dTgb<'p3r?OO/p;DdH9V%Psl!r+[+i.Nh\EGi]%P0nK`qFScf)V!LS4t76-l%'^&lep#Bb_ZP182?RKKQZW5kC/(l+"__JegJj2*4-YJM//b6_)-T@5Jb1/%E%_jl*JP<,*iDC0K_WMQcCVIg=9o+4W:d>3sB]^G'=?[ZmM\>#.R,$FQK.Mf`^-[X.?.]^"N$BT"5&f!X&9J/]ZM<9"%#+W2[Z-/2r%gt\8]O<N*EA&c:o+4`a,ACC+;_jRfdF[*HV7OQL$NAHt3^Q$V7F/QO`%I^E(#&bg@hpZ#L`k?FpN\dZeD!J8D6]D"TF)#^d8qSpA%DIl].lXkmBgcUd5g*qo'j7DM6iS;nXA/]\!1!#0m#mig.\khO'+rnSr8=J%M0G1ab]Y,t:lcmn8n<']S=r^=]EBN'&I6UD\W/2EV%L8Rh'D>]DhMVo\']Gk'&`SG(2ij+F!=UulLEmpdZ&N<Q62d=9>,BN!#4^PssnbZ.o0P(.L_Wdp"iO7S87Y_i'1S2N$nn5+iCQ`8(%_luM]jZ"H>j)OM+"dUSM#H-`J9[#a@=sK@M#2TK'Fu>3oK/n\CX]!mV1C9UUJ_XB;Ad>oP<cVV+nm%m?$N3s.-4bjX>eiP@i#2/[%20/0FBu,L.;$"uC')DEo&!h3d10MM2I4F*?,iT8&k&ej)4>\^hO/Lrb.#-+X8inu'qQ[:uhU0gnT=Eq1G'6G=4_&+c8D3g_KH3)/%4O_DaSQrPpqFJ8AmLe'<<s=c^:84m1`K=`!hAgmU/?kX(W0p#ARj<-R*ejPL'qV;>do:R\$G3:qge8fjM8Mbmp5(u*q)QR\q=HeV%0?ml$bWMHR]`"2k>i"Z,mpCS=k1+fN]/kQ;WW^cG8NT.Nk9oNl1t*[SrljMs1FTdt#A#aKPjfYLh=^A0B8_<=HCsukYWT+7%QCdZ%04A^is7S$rc[,K?:WQ>',en]tk2jL]Df<?'cjd'4QmIMqRYKh,OedfF7gu7^b?58:_t]"$?WY*L/KY=NW+I]*V[M0Mdg(LJ(<^:`%d60)j_BlFE]4H:6$pk%>dLaNAp5qIR_Jnn#SjBRj#/U#*07&acOUFksaHNZG_)3ik@>hHb#Z*b-SKn8A/>8Z!kga3M-OHaX,]Yd7%^R-$I/TLc#V+5jSr4RAX39UEsqF#&gS0200hOc4b85nSfBfEQ"kqbtq4Qf^Uj]J]&Z8JG<Is-i)QL8@!Dj1->Fajh>n8=En2ZOj6%m?-;(K1;=%&Vn+)9>KjHo^tu?k;5$PruS7GA,[NfII>ng)B+N8=JfkI/7)bQY+`+FKk:+$NJ5\&I2)E6L3jlUmGbU1asF3,aY^qQ%];d/E`:e#&RQXXI4N&FW1d[d=5_9A8(kNBH[=Zj[/n#]e5UBq62$uM[T"smrXE'B09TD^TltZd#c%1=.dLXgh<8X85n':Vam/HGB%J7"?3-[3Sf:\jbJr;EF@39tdnqD-pVGhVW3q_'$QmiODcfYqUa;]1sXXR*&t30XGXRqF2U\@/oo?B<,uEMl*/!>ch2<Y54/(1;#3%*2eq&Yd,'-DThm7SAaf;QKt4@3`TdoLT1c5]dgqI/!;QfSiHb"c(j]pH9J;iDWJ,1nZAj1g`_:(MUl4n>$Vo*o-*D8(fI8%@M_Z$%>A:EU[ijf/DHqc5,=aB&M72"e+`dJL3(q[57Ehf@QCu:W^DKk'cF\F]*$-?HHJJ#3,'EA(UISWR%E>4eZAG;n3S%6ka"VZFA&_PE%Q'Ni'JmN)8=9*&=ggq-;^X&JNN&"6,l;,ml'Rb;/dM!#60D%gU\0Pa7T>#c(QVoZGA*TY2G3L*;j^:(YP4$_=*1E-u:np6KD"jF\%YI;2Ls(_S7#=*\;l3/:p^nt:/=I1q9]U+KoLGtSd^*T"c(gjOu/s5m?pX`dbK0N`Y'_kn''8ipslH`R,7B3r/+t>C"%Vpu-!Sc34%bA\j[_cX2u\L2n!.??Y*1oR^h55'q.>2j1A9!>Gsci_^E0#a@ac\A.aK7qP@M0,s"YR<hmY:#`Y:s<UNd!WhhN>g1CTiF*fcC^di%J#T2]Lq%rg*M7MqVqpkrATn8O^CJD0b&-g6C)j9D[CkFY*;R"s*PVddmuCbh^P2pk>K^%?C;ok\k)LIC\*Or$o4BKuT47,X@dBUp%l^hSO5!B^Q@dBUplTY@7.CSXn[dGT%jtAfRk%Q;-9nfLEn2(k$NNL+SpQOXg(:8eM(C%RpLHd_JWhnl7-F8+l&=%_</'[[/CnA,`%4R[80O&TZHBKRBbJU/'I"(YX"EJkk.B`m3n/i;`B8IMFHh3k\c9j9Zh_Am':cu/.EWZ7pN;]R\cF\pZM[H^Jjd\(EpFUp`Z[5^]?%T;4LrlJl^ITD07S.ta"*/JW,%5M#APn&llm1Y;p^NBplZZC%9EmpUb1a0sSB\Z:ghi>/45#$d:hY\&T!iSVW]r1P'Dp,>WloX]kC%O_Z+(jfE!Bpp"iK<<"M]`r\Z=D!&c#_OnB`9TSt%^Nbs1*fGg-D_`;toV&iDX$n.:UuNPqI)8REL,'*[(2^F^HP2&GUA#F0e:W[Z%E[Y-sd0IjNDE!Y7U""K#M`j]1b1t.,;pA/hGdT"J,Z=]dP&`X?UAfILiZlb78eEKiG"DIW-on[9Oli0(8r>S%mZES*$J<(1'2$;/%@K8c^_ip/Va[c9i,C]1q5P^,-I)JfEi[5i<PE5L\)t`2.I$tC<;rMF?I%?>n5>UEG;Cb,:NhcIqr1+FGCP9GY@^n).h\@m$'&d__%n>T)ER;#3)RX..rYPRI_XnkYjrBc]sa$[Ua;!(3]_P@UJ+$XI_*6jQ7RU)F&4>ZoJ(h\Pp'B>%5gBSe7'=#je58,*/$[b1u,Vu.?%"ZIAk09b_W`b0(8%*"-&5l6pKd96'#E`!NWXd6R>_8iV<%V%Nh@(P=(HYM8kl=tP94:a)BVTWVlKs*j*?JXS,s-V*AP5pePE,[ql%LB9`ls.KR_N^^`+"L^[9K7A"-j<RYHMecMPf62>Q;dhc+-YIeu'&h\@l,H@TBPd#_)13s#]IT=r\!mA$/9u_$&RJQo>YiisJX/au%pCd.5YeS%D(O2Br;:e=96?.45ptXI!G*&TGNps$3Tg#n*9HjLV3r$hdQlPUY5\5La$g1<X$;LU]$KgdNPk]YKGPqe/r_+9R)$[Or%eKi?&I\M0\)VmujdX<CMXjLE"!QOa5@u2"`i:S<N>s-R!dZFOC\Yi[=]PJkP73fTo\m]-D]3p`R$XG<(95I'EZZ&A,Z=$,0&lXX`%/5c)#=l*;<Mpl1QFC=';=1E-h,DO+M5Ih[1VaB$sfR+<%FaiMs#<gDhV;sasdg'0:O#Rn6I`:8dNp4`)k8:kZK0OAP^tfukgs#<I%gM`u#>^nilaPeberQtMPPMF"u:'/OK=ljgoI-<"]]!$Vs<qK9W8lic$dl:]gZW.>n^aMt^1K6"*B#:IFn2(lOVS^e]Yc7,'28'pZ%\o(jl!@4<9r7YJ&INCl"?Pr.*TDmVZV_9P9osKRuq7+.*Y+JWBlB/ED8(ZSQZoR1:CJR`NqJFnUC[]h,a^2>ReFn^n/9`60'mN\1%C4A]H7lZ\o,]7HI)s,A"`s^hZY&)V$h!>M$FL'A&4o$*oIH@R)\B^<L6oq>2j_o>RRn0<I7?2cg,<[dGk9cYGh.okFqlWquoOR&?%M4&<5-*#UTe07oeG$FW5$+sN;9$\6)>ZHclBVr^S)!$Mfl70cPc>jHJfh,1Kd#K:0FsV!1b#;/[W^o'!(-9+-FF\F!gK:B>A[ias%V+<L.SHbd9<2=8YhR$ko=JBO]!u8=:<S-eiKBPeG%u/)UWMSNooI2gpJ'Gm'd\_;sT/stS!W6k6oub$6\.?Q2(So=5IC6/tCm\I%%X7\.bEY1t'WP[3;qLlNm@/;^Pn8W`T0=^)qeOR3AHDN0N=5.&$]YEBLhA+8?P$-8rC?'cJYqMS('[GEsc5MURSYf]kXKd@X0`UaW%/#"ned?6h"PH1LE#N,,lgXf;>XcM#aHE>+enqAEFaN>%Dg2b`PNpCPu9UH<IDY9L,NpCTUb$,+Y\#,ksQ7p$rFPiCb_0("g(-L&3%.5$,GQH[$,s2&"e/.5a5ZS!saa-u)+To>Z2XV+**;f)&O<(up6ke9f3XSG\4"Rp'\$?Q$1%JY/jPG7A_degP_V8ou,L<'U^**B-Y%1a')JFZ;R.DYhaZdn`,WrTFj[@u*<lQFfMl=]B'je,64eW3daVK?Q]6M+[N2;KT'835.Oi5C]kgmE`1Po57:(L[hul(`&#)!2>1-%D==+2qjc#4]mFi?RE?;enjk1/%n?5cW3hm`%'$opd#6ml'Br'p1`p#!j_Cq0FbY!^aR(3<QFh\'kpXE33Q'V;US4"<0\!C&/oIg6%@NOE^\.,\WMfXh&oRWjZ(Qiq-;km!^l]]7#NkOUId4AP5GM\#dmQ++6T8&0=UR8nARS\W43>:UDQh329Z%V7')Z*]Hkq)Lm<XO[6%AC5Hhgkp:rEo,+o?,DM$n.rT_pPu`uJNjlUIRiWcO_TPX@a@1`ojCBfK)rK4Y-u33c+q'B7+:WH[)##a/aqC[`tl:pG"sV1\^/^[%5H_Rn+4T-$j/7*^.IP[*U,e6d3N.#Nm2Fi=rHQp(%$Q`rDu+^_b#.nXj?D&\qH+!#caCAKf"L<H@WD+tgGqmDb^R?b-'0gc"=k_E%AdHQk;bgq)5=$qs/#B)PM]T>Rkc]MsDe.(b8^]bcD,!tO.AD"rgFk:ukhM75PRG>t`'fS0(3\F!`RdBKFW9tH%s2#b<ZN)#b-,6=%e#-(<r#1'VOf"2::Zts$rZoDY;u%,;'B$!7H:?Lcm,S*>R]\.f+/OY'Wo[JF^+8B\9<7jJe/-`TCJ;FrlJB]Zs6a"rSZAj;hhdEa%_AQ%<8u45!)mRHfpIsP-ejRLE(\&LMUK#86B`2bDrc<Z7bB2!*8?_*$)Ej@W:/@jeePgh`1G=1EV5&@0gJdNS-gEdIb/KL_%@%kn%cNj9/FE@1??1Mgj-IpmHQ7BGU+hlD6<.@=hr)_P`oCFZRN5JSbV1>Wn0pgLXZi>!aS3iIXKktq6QUcbnp/:i=fY0t*L@n)b!q`h&%L[D6pmL3cN&od0BNp&1l5^XUu-_;CR*B]nr2>Rcp>=+#=A9VYPcDNfoTCVFK#3$04[k<f,bJi5sj!?A$f(0W1fg0#t-OR20c`$D1%H1tsdI6&!uqtH/GAR0'X]KfC'F?MUba*Cd[7;iYhH@>C[lhrm.^>Mg-Dra[ZQQD%-VnZ!R*'.!7==`uA6D$:-q30g05:M!RjK,Nq%#>BSU#j/%Yo1*Me'!B(DL-Hu#kKb$:pI_09Ub-MVF5^I=Rh4D:Qt4Otrk^rFcg(YPTlWq7%HZb+Yta2.chuj*/Zj9]c&[Y*r)&.i%97(SWH9HuU"m<;[I$o^]o$)9*YP\34YV+qd^W897H3k@*esP7P!Y'DSe3F,M$nF>RVO4bfc)/krZ1Lqq]?(P`md50K<^IT!a^5Za%+Jk[)4NYeUrgkM:+Z9s_mn^?`eY3r8n=56r$s&:R=T,cVO2S._GOE$6BF'#3@Y&uSIH@`,]o1@e\pi5JosQm>VeN(RjRok1MarS;%X._l)o"_f!d->?P[7O$!95#@N#B=G(M>W6TPjcj?Go@2=on:E,(gJYdZdobX2mn=aE[:b,h/Upba7a2bSWC7$d<6@B2bC4oVWb$A%nl+Q7*Yj^!Wtpce0f]!-'(R<5ipTuE55)BC_iG>E<&=5\C0j+FaokC]c^_QPcEd2)HLg(fA?RH*r93R0a^%4m`cQYhWmfR]kTQKN%EMbIjo9$$t*7*<9%L8/j6iUI>&!s"?QoQS$LRe#uFW.gP0B00q12Y>!ZgOgJ-bQg<;Rt1lNRq.VFT\)Qbt6]'(ii=+:,!7ub^^([%5&.6_mKgVU4rih%oPFOl0uAA/Zg@rDgXrmdaa@dOG`tVQD.0>fH[?u"PO2\)n*8ZXqN:0&f9Wr)e@b%45.HLj2AO'JLm'RA`(-2J%Bo">Y,"abU,lZ)t0lUY/(n$+LOn!n/0ed,D#T3\0LA6gD%/f&D0Co(#TgrpnB`O<N+9gF(QQCr>8M&<'KYlNTLnn6:kj2_LloZ2=%P;kZr6Bn>j8kC7m(7bb!54+_346FtC,^E#)ra.l=qeC*ma)6cSPeVI5-PpLmocjoU4agN4]FTtoB!eHh3qrNeGYarZo(UNDhq5$<%-FV^VZs;c^r`F0hbS'6Ii&TS$jNNs<qCa0nk.'1r<a1!r$N8[3Q[j@W"8";9rU%Oa51:#&YK6S(a+mGQK(),L3I2a?n5Gd*=A_,\%=So@4Zhg@+fHT(]:3joQ3(`DOSQDalSXMg9$?lEkqGS[rFhI>"h03^m"cHOQI-EMVi02jMHK2E#dUY91U]S7(=qV2g-`0c)c.Qp"%4-V94'JZEG"gWIM54sRH/9D\.,@^r&)+p3'4.+6\R2cQ"Eb<D"@H45JJ^Z$KkLN8$>u8(qC3aL\"POWtPY,_7oD7.<eE$M+?boL'%&DBHRb,'+V]N\%3\WGq]/Db^a_SI)tlb`C\(=E:7M[[t#1-XKub%0ZR-]LAP-pi3"LZHP*@,)`"rO<-p_52'&acFo0NY;8s2K=ot%09#@'CRETq[,T$uAeOf1%ej$E@^+C-^#?i5G`sHDS]FFa'Y`\EVf7m6f6n"gCn3Ho"eWG_re0]Vm@K!cO5)SdBm7icH5#-,OmD3@%YG_9EZbO*>6W_ie_F8Xs5rIb"WNZ6`1Heolq.!2\I\t0bn43RmH:G5<=f]5;q@nXPL2%ASG#YZRT]Hc5k)J\fhmnaOh=N.?Y(-;M%laLRh\97`WpTB#)c0O,)-cl#GUW%+s[1fTbnmimBY@Jbn"&_J2W8,:n($N:H(phd:oq^\OkhnD!"b:`o@l_9gn-\CY@LS*@Ganra%K3K'TDBaJf=4_o(<70h!9qB=Hm8<?(R/D;&MbXt0h'<_=:I@%oM^0><l^:=gU$;`rlRdK(Z7e@;`q,:Q<?7HMLEV$bd^9lP&[=-%%eRS4e>s9-GB-S'3O77SA.g_8-@YFE`*gY+qq=in(T81>nk"6f2Ye-OQMC'$IjRq]qXW4BJansDC\p%ceS8_=bJt;TTb+BeoE?KUu%Lfqg%1[T%'F:%G14!7lsbh!AtjP&R>g0+SMp.S][M*.4C3A4!PYs\JNI5o#(k/VAJq!_SIq[:+K;DLIaj2F<qVLPI5Q063%mN-Yl%X"Ba2eGIS6J,Y\Wp%&e*5%/5tXqudFaj3kqMklpYpEQ`i'm109iUO3kg`^%fO1I32[='C6]9*hgrSnr6+1[`nc_G9R\[unPoRqY$%?Mj@%me^)rcsJu]>hE=H4`QI78&APA")bAMd+XjYg=65:A:oL'q::Nq2tjF?-CRB*PX+!S0VeWp8t7mJ@9s`GV5\'Yf.bZj+aj%(%OiI"caM(7O.7YjYq>?o<V`Qu3md,20ZfC;qNi+s#T'ksTOrF6_"6%Y,dF4X,:Nq![L\LC'?.A@#'qV;>do?++h<XtVeO-h=!C#[f%Ikc]Zm4^c4D=UW+/(a3)@V5B,khg5S`41f#R>*sFs/2VQn/=p*$*;gL"$J$,B4Te]U;V$cQ(f[EG7"s!E$5C!+pD<u-hJJC?<FuE%ks_6%KhJ'K:R$De3*Dr?`Ou$5T$HEGB.#QP2J:ET7)-!C#CI`INuK;XHI`2]KP?rCVYG?uKKi,lKB,4D,]_igOU3*;6J)M]HqM2j%->n>[pD6Hc!s)-UH2@C6R8WWH,i1FM;WXKB5*^OGrGDj)AMt,;VSPuP[gS^*Bt1j_@^s9cG<3<ua"Gk%Ab,DW[\gn$a;M1)))(oE%5f\YT?]U2c@9AjS>Zk;]mUTY*!AZ37K"k[sP;Vf_j4@]73`10)$)NWH:aAjFmB@,`^PbbDdGjM]`%rEYQ0o_Cb5Upolk7(A9#qeF%OICi>fqn7hajtU<<kQQj@<LP0GrO-]FKrnBG$u^XU=J0W0'7>>!4.AG@fe#4A3$c'$."H"I/"OH\edGY4A3'7Kd(jZMY2f?rPP?L%nDaQ!78@XoXB+rE/A$+jgKu6;O3.JC8An;cLQAL:e&V,]^&@oB8W4OFm;C,7*lUZU[M^c/akaPMH\k,&e2CcN;g<M,3A0^mYk0Q?%SE]]KD0(H?4[ik'Rhb@?NlGhC4%Yq6-r!GB=U"71B<`Yp4\\"!:Lh@KC3Wa9qs=1olf`Ad[b4&P9?V::434)AL+8F67+AT4C9/r,%ZG"?YH<a]WCJL_2(5sE<Zkp],)<,b2CU!Wi\EXPS*i9tFCtCuITe-EJ^]2j=2nsh9qT\ohDn^Slbj@7d&(@_2^qU$ObHG9eJ,efi%)q]akoDea\o%g>gDbb5bqu5-TYkr5:2p:bS`_to2\B4Pl_uK>S!8[PZ]8Bf:4ob:IqX=Ff^]"`DrnC/[q;ojcrV--M>Cun8hnb@*%c3FRf]JhJD[X$I)e'G`f^k]-QoX_f6@;#tE/CibdXTkq7Q<#Kd""Hg6_IbT"#-@&>-.i8h?iB"XHiq$heT@"HK+/fg?ifdnH7/[!%*C/[q0D:bEoIo]PX]Y)nG52Jd\J0@B_ErU`[(6_h5D&-4?QA"QpX&)R<=(\nJs5&dYe3(/XeaqI7kjo.MZ\A'*i2Fmml=G"kHU:@%(t@]Y*J+-X\(L=)oWaqbYUIR%!e9J8il5AY8RFa=.T&G-i'<m?b(V(-T+*#'I0iaQZUDk+_85mkD><l<bg2%r^4BLX0i=;[!<)g-%b`BOTT=tQrE@cYV*!kY&-mqWF+2ZC-L!/UL8:jeR7$13Yd"7a*rf.Yp$CK?h`W<t4fECmUf`pLb5tsJ(\U^aVjr[Cc=Ln5d5?%Ga%3?#?$`H8=r2qS]6cReWcS-RfB_>ZG-*k@FhRMA4;$mAh4eFW)*H?`u]LXincH/anI/!HD(m6i)did/gOfnl6P"gS`=B1dq>.^J,K%mO59!?s[_enT@I?Y,PBUE\/`I`9DIrbTjD321-[S+bl28G1&Zs]+o]=6NKp8Lfshi`HiZts7o:YI4KsKoIM\:;>=QToDn%*iK6gK%ii"*t!<d!Vo0L)3a?BdLk?dL/?"LB%dbesKIV=e<k(.J8fLqSu:hFbcC(b(pJ.`'B<cG1`:'nI?6?2oC"V2*_lQGWWmKVgQhr7R<%[lT2o.m-R(<";/7j,lf_Du&42@I4]W;:-u183O*QQh.h]If+iX0n78*s'hF8:@R]os)%T=SjDU'<]Nb1HktF6T;NXX]Wm"S!aKsc%arI$`S:LdWfRRtH`'@_JE!3M.^R7p[`7[ts!#uhi/,p7/S733id;5Jh.c%V(+r6`i%X!/ZFr(`![Omjt.3l>bT@Y'$&@ah-j"<#'%!FG:IeCpL\)0V]Kg,JNs>4V9j<2#ZtK#4$^o*t_U/;P0_0"Enl+`&+s.lLWK^pll6ncC)S5!2a-R4:A2S]8)gbhkYk*)biC]PAcX%7c9aFV-(gKk"W%Tm2n:Cmqj)GV!Yol,?Kj/c[V^54&EE8^J)D3g<IrnEV#7k!5HpWL/fp$l&X)2K&-M&Af[cH-VsM8)T\Hf!pgS[%llV\f"k\E9U,h_$&R7-;fh,Y-j:Q?$Eika*fJDkkpsKL25\rhKRaD6EE="SZ/Cl+&0En]57Y7=FXTbU?K*-<.;+aKg[i)R2'KUV!%%O_0_`pLB/lPPu01r1_/cT-U3o+f5.!`ttVg_S(Z,;;6`d%#Z(BoNFOAMKtMcX>+A[;C`jZ@o'b\`FI)F>r5G+X9O^+jQ?%J/t2j%0ULtGP#lO*KjQNZ5rhNZ)JI4uON&]uXuZ*,5VS:(7eY%[9@bTJ9sBod(m[Ui`UI0QMr:6J_d/d`lT,F)39QsMR[*-I!ulhkCj]Z*%0sEL2!;,V%^p[4=TE=9^_1I^F=kbjsm6W,MPmcdi?m$k16G\8:6P4uOfbedqftZIha\>l$2]<b04KPm50[Ql!B.,'Xp8m3-B=n5a%^@P10TEn^p$B-\gYUO"`B.FfY3qZ_9#n6rL?*[-Mg:._#dppqm!>8$hT3u\P+dSWI!Xq\$_7;4kQg"ZQjdHTD81E6!?);CUMu`%_%RKV9i2Ig-o12T=N>#n'gC8$=`^t<mJ@-hC%!j"*miHAKg!go35#YU@qM`XZ?o")=<MLq:0d-e&2J8n=N/P$D?[K)&Q+Y(1$Q81GO%=f@ukP75AP1uW[3%"oL_(.41*/lf!L07@&&.tST!=VQ26e>f0tYq"(_$nq*7"C:5,0XQ+Q)l&,ee.`qP(`5pPP119*=r&93,p%\I%3tQF@DdS0N2X:>rWNLh\M1$Y%oQS8*7NDaG&(GdA>r+@/NK"^q)F0;fm6\rN&-0`1-)#MDPn(TmB&u"0G6-9hWsg;A,%s8R9as3*%f*L37d^J/pAme:^58k"a,673gbOPmL[n0f^>hC2b6V2gO]GL^EOV^f18c`Tf_Jg(7`7YmVhE8!%h2EK80^=J9:4g9[MmoF?Be>#?%OAO15KODEPIQXN+gd]4InuqW]EQ?If"#k&TYab\9EDmG0Uqir+/r1j&5:lDBrG"HS!8'^d8OWjG<gD@B`uBU50@mQo]2r+qd<6MV%*!?<?bJMkmH"u8,\>o>Aj5O93TWa5(WY'n7NB9s';IGjK[PIqD[&e$\Z[!G@qMGmL#NcZ#g#e*"";Q@.\ic<>C>2`i$m*RHr&8<t%U0ZCL/Fs$65dVD5"U6/R='X7g!l2%"kaK[](UQVK$p2i$\'^A*eI])Jkc0EgK5C^Z\#ZJaE=lS,7:$^\E%B:XGtfRn^FOioeCG':%!LQ9g&7NWc^a.0!<t't4#*R]cj#-Eh"CRaT/PHc;[7Y?NMObOb:+ZbZ14&%nBW$ZT`Hi'S/Z,s-.Nf;kU2sB0r32V:h/stC/hhcS%7p9FE!#VT*c7`!qV(F*B-6QEg"RB]W3osCHhpAfcWfo'u-uHfab/tXRrXcoGl57MA#Qg*YdIoG&i@b<BJkNp?.14Um;>d=A^h,Y;%l,&;oQA_h6ntI9=PhiFi4t_`p(N`3ic>'E]E%T0D`kW4P25C^:&-E9(2'j(@>/ku'A74<NQaeLK-.j9m#:H2je:e!aDZg@#]-<WK%!7tB_R$/]WF*n0L9mE/!e"&OsOtdA'l/9(m^qAs"8)19_/NL\gZ%9>P[=^?@nqM(7iDtAA$&0QU.O\1%g9DD/!TlfdA7hT+J?$cm%R"UbJ@&]1%Fid5kb;94E<OEmrjqU1@9j"("/c]Z`NNQq2b4@J?^FQ=SMu^YMGgPr3,ZZ/j3&_TG.>XKZ&\dP2Jh<LE_G\08'T#ZB%DP:ff5`qa,/YhrH"L-mDDE"Q#&V+`;RVSc3,&kr+J9S(4!^)R2m^B2&$6$d?'s&__Jm;=`C_K*R83.8L,t5T(W^'D4P5s2MUN0C!%Nr@OO#E4_l')!hiR75"<?_=K^**!(OW*j7(5\_)8j6U;6R4\p7.SkWaMu^\g>lY&lgdU.QhWKS_Q7g3e+F8_E\-`<LC)a#i_D!qR%PoR/j0sF&'6Q->DKOt+0_*D3o];jQ:At^8XUIqZ22Cj/uDE<9Q=c<>eW[\$''sqgm9rO[?cZTGo\r'-amIOW%)XTf:P4eF@MZ[om%W_-@"A!QhcWm";_*t]dc]_)7:fMjZW#f(`56.$PU^lYkI!"f^nd^CFLDA>HC<?-WS+Ar`dJX-L`@V2/_iiZ<%',WY!EhS6!Tcc<p%^PWkq^nd*<Yo!O'A7D?3blIs:MAt+9Kj`Wr)2p)7J]6,Y)i!9]2#LPe0C[ZGr#2qZ[Ab`a"pC6*^"%gm?s"l5$2#H10]ll;Rr]17%X>lbAN$+QdKQEUd6%mK12O0A5C&p$BMSkEL&0tmV2K>_s&2/F]QXu`oR8&u"+W3SC9,[pQKS"$cU;#[g[cgDdX'2e'q5,*'DR7&m%[<5Qu5\D41Ar4`.2]@:S\iIS(8CA97O.>9C?q]4+Qrc_,/qTsI@Uj6UJP4Ki$uDjb0PF+`=J?rEfeujeeH%"'7i^3P\-EcC8_qd5%O5S>cO?35`eRnnK8\1PT1b/T7I-<JDG*!o`F@oCs`(l,eQRWO^IMH6&IiDisVbfcS^h+C?R25o/'3$oO`eI>Y,pVWD%0B_Wqbpon%'WgL&e/bC-/d9%nfoRu3^r45F^)sF^7Zak:C<Y`8'8YPUb3WHR<s:jsfDRmii+Ce657dpTWA%JV70$eISB7.5#gsWU0Q_7@eu[j6%,@HK4eP@]3`/]GgAj%YLLik>MCks*l^dVsS=_/">46r\B[g)p'^=H0N?l+\MXU/&\,Cgf-WbrOqYAaKi=WU5^Z8;T>.g%jP<#J0p%XP.cuXE5X?#,ORI&HK`d7@aZLGl[EIaf`e'ie;n-X.:N5=NUV_Xm-T6>(b;#C#`0odEIOp>AFR.bbC]3M?'hfE`7u1T`<i4Bf+e5%/D7/\_Lo;QZ^8V)!8nbp$Z_GKfCjoMD).;FR=TT:U3\?Y@K7\"^CFd2]NspSI0"''C/N?D/$C^`@mq3+,$9IQVpU>A;de?[>M/-c%$>_koS3[LfqBJsX9k]0YQE?#t!4u1/Re`'Y86,=1^c-][!(4,qD,(G>5o$#f]+'=6%qoEq"#-UND,Gdm?s$plbsg8(F7m^UYVu.Z%2c0\hB\EL/:IDA1D4$uQ&&^md2^<';;;Jp+!)?6og?P(o>$2rf"X5Q:!1);;^S&S:6Ha>QD7D'ICn!+qNUj*BqD_&B7A0([L,)P:%-U:DN,;E]d^?9Z[X"!n*LYZf4'2dXV7#h<_[VX]Sag,EL\->NuZi4Q=6W'Y4RdC+Ac@D5Vj9pLb-L:;)V%gbV:[lr2BAJ^6VBXZY%^a\AT&m/D..%2r<*,d2.lh3ql7a^Km)h;(.8B!)n@Mf,BHk^,CW-+S+7@:Jqa[g):[tYXrm+cVec/(.60]>%"ar]-H!2L+:DVM%g%7Yp?UqXJ/=$KGr$2grSR0c@nVd@6mdKO@hXOBkHZ/ll9;@)NX]nuQRh!qDY?&-03k`p^nO7p];9-X[Y'/HFl\N6Hu".hoe1#H;n[%>A!P_'O`*cMn')>i8p$;eei#R`7Qn8?rf'Ab+TUOf0rs_I=WQoS9R*M]e/o7fojb<1`N;?$NV7!.T7DT.IM"KQ$NRVMn/.J!!`$t%nQ'h^A(u,@+:Nu+l26H0ekX)dXmMLXZA&HHQr1;?1dt60H"0NCkJ/QrJ(Y21]?.l4C^>cd3->CU*@_1kdlGQC!8q%<im#'S&R;`G%$;^_WfqdoMHStrci\qfFOE+:4ZFAi,M(DJb!]`Zoamk[WL`$5b[[<&4K&q]:,G4>6eW:H`LFI:riYC(a(9a[pfEj8bEn2[3NY6NY%"&N:<U8BXH$supb9-"#Cl=!qefdG$0fA3MX0S7uh+i78WP;;tlFbCS$2J#!%;aHNQ].5Wt7Mj$JoT0RqA2Q,p=BHG8L8\"LYVS,b%q2$SYjqc&!CXe%fMJYhj0Bt)aL:*Z\f"7R\6sV)kYa7:-4W0ole.bIMSVSAq*"gC5[prp9p#$</&>Q)GXpb1^^L/I%WK-)g2T7@n%!J,'oW,G?Ao_#hJAE1KTZ^k(,V:t^_:!Anln]m%6!d#N5O_)I=4T/0jT^_7:R>NoPDZh=5bP:V/V_0jkU$1IUOk-0D=d1^2C,qcW%Wue9mi>6h"OOp:F;_l09(1imk<#1%C\i\'/gFFjSD45<jlC>aNXeodknZ*;Lbe]ZXFs,5ch'Hlo!"^Kb)S`^D&cos&>o!^uFq2+%%`54!^'+!"8R=^0n._@uAGR>Lk8I+>+#hpqhY0WbF_dae/S1f/QS@=hRc_>C$p)sFbF&cAF)L0)XX=fN6#-NlI7;c'oYj)6;c$AWV%36dsP%hUc:/fhc+g:A0j'e:Vu1g-(Fcs)`d4pb9?LG7j`%WW-5Qadl&!),\$E*?S*TU6)i<)lC!oQUXKQ5!;@[]O.d(34i'fKa`U%6GQ3X/H[hXFjns;1]RaC1pi)O2!VsR&drTenfg(<6r6kQZ<14)nHeCZl>7b+aC]BWf;-[u)EW@iCT<,"3RMuQ<rZ7k>!Y*7LQ;\s%]\uR-(hG\Va+?.M3iDj`!eR2iI$+gi"Pa`94V'!(>;.a6\$E]K+4D?Wd83@,*?cg\=%iT_4f0Uc?CH;Tc>'mhgGfQh&5e3YAM^cs%]'DcSj$HD+V@"l&Uk#^QpBS&['JG.]%/VKfb\"9J5`"%c]u@YY!"N.u:n1[h.!T38*QH_X#,\'R:eb!lE8_'em$YAk$D'6NSWB?A%!#2%+,-V^h`+p,S1A)3pAu_f%SmE0j.UPJW1E0/=BI,a29u@MB(oe(W*-Y8t+=!<QkLZdU/%W+'?4FK`W2YJAc0\0)=:t1.Vrr2Y%[Ah;>a!hEj-6(_S#6Zr!e7T*'Y"`]9Bdo]<f^)`5#c)!LaQFc@4g^fe)8,1oGbM5kn4rX9`!h8MH_8_j3,VC%Ms;V)[RK$8X4Y5g%$l6;g,YAZ!0j#,VTB$0hQ7De'Wbq9PB,P"jggFD@WV1>mcW>6'q&ue6fc^kW"3'"Qc5C\qj)U;mKn:Il.M4pl6ikF:)%s0Rk82n,%OMqit!]bUFPT1GAfOhO$]Bb+]R&H0ePQJF8dG_K5:15i&DMD(e&_+&Kp9PH]=mhkg#nKG0U,aIbQl"N>\8`KrgI6P:l;P`)RB)s1%N1`0IWs6,!joVH=(nq:@e6UZ%1r.IQ;r]Q06hhD%q,l8da&aRpV,7TakMp$DDgYY`I"7t5RM?/A:^+_]0M9f]+>Osh[LH+.0o\UF%TShHP`.rRRh/:=Hog6GCX0g/(G-HYDP#.!))P8SP3ED^DaK8#>5/!r@)Que\P@1K5%GaEg_VcQ9=^%'fP#V`l/XE`;RQU#tq"hCD%ogN1nFUnm\*PMec<AE"eI3a[J@78O[SSDd0<:rXe>OsMHkba[]oA":A;P!VcP8AehU=WP]4?0`;c<&]-L.-VX>:r'HV(UQp@;E$(%qX&FKB4*@7eSHiq">>2tiAk#fTk$iuMR6t9^ss.]MW[u^,Ne=Oc;^OJ\Zi9M0TZGTR%alKVQTD>m\#I!^m"Ro44$_DqFM!6-I$`)%:m8.WO+gQn7UU)]Z:cAeXBKkY*6TI-<F)/1[K'.4l7,pOg'(=YCC^_="?j1ZS:V$*)V`Ub;-fQ3E`P!^JG&Cd%:asOl$=%4.kh#A%Y[kfNPoZV*>h%&"9;4'*\7M=%:-mXE1aPg>JcXNjeBhe_./6@oCHEG"qc6GB&-JIZ^Y%`HcI;`d!1"9j"?/NCWG$D+2CEB2,f#p\%adcmtT^"qp_^]KGTj+YRXpAk+gHhO/#l68oP%YW,[^M/Pa*sG#SE.+UOOT]+YTd2o"'KuP!!3s"s,Sb20SjtbXg:8t+>m7\Bb++\%QF7E,$^[gU;bT([fpc$eI&K1bYpPIcd:5R6J8RQA"[S/4.Yc+!Oe](uN#j,_g-,tO4/g_b.HiNhqPR!98/M[Ef2"=uZV^Au,07>,%eKW&"[U=]dkgf!],boUN.8I2VMo`D[Ze$Cd77J"oQ$,c:c9,nNC8Z0jE]UG471%5]g>]u<p$`lN=aRS0%W@E.RT30#4qV>BM@kT0%'JQc"2&h-Zn\9A2i$1or=uA6o,1[X1#LX5hc3UEr6OC.R"Pfd#-jLZAN?]@PXdGG3dnH+r,-g+s\\>5H(P*pA:.FfM(tdi52+*2t%VA<SnYth*E-1+o9Y6tY^j]SgD]1V%tRMI6tQoMC;/!dMbNU.f8^f&MjX[Q9)W%KgT7U7"?'Uu;J-5>18#Xhorgij&D55%YZ=rfmH%L9]`q5_E]!T?R]HEaXRsEmmn+g8>?)"'Gk2K/'EPDNFqQL+9g*"dg*AW=_f<7^"V/%Q.dGU`pMS1$]O;F*Ro^rOJY\6o,pK$nf7\%"3fe/Mp5,DAaB_M#Yk_M0C)2@R]V1b@Fjsl'OZrc^.dQ>!2p3;'&b*V7E3+uR@rLokNM%D"3Go86QdOW-mf^(eL:CV4c,8:>6/>A%[hRdM@Yt]OW27`^TP4irg:@Ze%;[HpWk*e\9U]$Rgee2'`75=`$N[FDk?GPtoK\o$$%8eqWie9,h2%2!.d<\Hm12J9-5kIdT#beB%jfB(1/NpD,)+pC!k&mV0'nD4a%6CamA]F6`Y,8t>%A3cgJZ1):Sb,8A;feopp]kYt`=TCoF-g-sf'84KUuH=;5ogjlE-*fQ?CWO7%3bFD8*o-/3Ko9;^HJhi(j0!8ek[KXE\8X:2H7h%0UY=ZHqElOj%!j78(?VENi_`g'1LH1G$=SmDNZ#Edat0`S9tbUm\1UM+l^^"d%VK5V*CTG-C"%U^&3,A4+3J3s/K/'?ulo>O9,n5`5_JfM]X'K>#"s'K1G0/Gmn)r66c-i.b_:$hP>;,8'VFV*2CAu&gP`N]D-3D$O%M^^.mRiMT'$=_u(=$&1%XGFai3hKtaMao4DZMKLj:-#<[KoX.r,Wt"L/s+JULTIgq089?EHMT-=.<\'F0_(sK`h6R='aR]=nX:C+%&"Ab<;U5ShFON_P4ZpNOFd5?V.flkD2IY/=DoE!H7"JepP^$Z0ZZ)uRG)@tU"WU>h@\@I_Ke;D!'"+r9B34[)!*I]f$D1qE&2<c_%3h/%"!gk6XeNQ729e#;h:`*"PMB-sR)8Y<u:=dnb`KJl247E7>>',e(8XX46lB;.i>B,fK3i:Gf#7t.?N1$8f-T$pMJjoV!#m7;A%l,$]f?jN'$&a6c6&iE9nQp_Kc1Cslu82,X17LJurP=GF_>gS:7N]+Y@m/%KMU_BA\Got"_njS=rio1e@[`nD\+s2>`GL>Y@EHA_`%f&gF/MiE>R#\dj-84JQUNR5#)9>NH?eFQ3<a)/I#E0T_UCnUm7WV75WLIOjn)9;47&_0UX>*9.WUQdX9]s(5M5T132TZ>SagS>4C%H!gcb\*HGV,E6=MdnR/PVNFJT"?0U/9.:bnY/,UNf.Oj:b')mX@.hCQ;pQip?9PlJH=CF!,d\8o8JsgK(:nDI/<GFUV[-+[M@jNS%Qn1W8nKu4J(>CXf/^Q>P_SMlRbX"2e*ZbnJh+d&@("3k)lr2Rm(,Wr=KCMt:`+W;QV.[.<9T%2b.,d+PIFH<D/M#+aksro;dWB'Q%86:fP^kASdo-dbD"3P[_E0gG;Ja9=!&9ZSN8epNoM!2uug/b!DB1jJ&)5Zq<G(WUB!>`#I,d=WI"JFELKM,,+_)MI\^2sEO#XYl%%Y@:"nQiNFo-e=[Sd&`m3+gXs/5P*Q[WXYI*foH_;cb_2E#o1qb6a:TW\+28EZfq7Y@.e0&)([(#1Ag"%;&6PZ$DR"-o!L/9?.,RB%XW.dX5m!'&7$V'gp"#`(S2hC=&1m%JWk+0^dNSa*A`AS/!<Y1_\8WLt,,!D.kua(FCS-C0W]."!$B.MMLISZ;6UnY3I:?'0VK5Ci%!sD3tE-D$p=RW!RQCmQWG0(X]6Ch]Nr/rni$@rsh^*HX"Z_\ff:gCeAR6h&,jJd!(=A)%uqTN9&(CH1=3)]BP1%76i3*7bn"@>TB%/YZB$8IlKAFqMJ!j$AQQ<LK7pGE9<q9Ct,Cd?.[km#j*cXQO,/Z9G$=4R/]ak*V\aT3;S?[ALdQR]iAd5f^O1&h_B/m/Y9!<LH6G%+9D]3)/?Y1pD&SbSkBlno@,c4elBjA8]2[ZQVos0pPG?::'*si#-A`i,A>0q\u<.m+o?A!Z\k`\.sb!B<)oq8*b+Zg-q,3lS1Lj3%,2('WC]Va3WSb34%@ERNfG,"jE,B_YQoDMI&2+/uNA[4XCnk073ut2U7uBW41q(&rRsi`fmFnT&"AtJ]L_YN"T$A/bX,EBJ,n(ei%"]c("#d_NPm.%fO(XA$UjJ.)6E3Y4+8[1ZcdYK*iF(/MbCK@*RgLjOS./p(.iE`R3R\^U8HNJ)E1,7'2<^eGN4f7lh8TY8@^i(X\%`L<Vk/Ope_S[:4hCmcc`pp-o>7$J^98:ckWJHo1BIVB33'YGi.7>%:1;:%[04mjghK,j[u<NZ:M[V7WP.N]SnU$gq=qiriW`0,d'%oFD["(D_-+J[5AEd^U,SX.rK)eK`F>?m.'MS#;o+M_N67&nmSsQ*'8uL+8U:;-]$uU?s$*S=8PET[KP0KY7Kj3=B.5,8'8c>8aZb%HIRRt<P%p`:TRW*TkR\6+fbjSq4q.]S+W_Jl9#C$h"0mb\$.5F`b93A!KXVZ#6d&e0nCb_0,.[ANCVit(WT'Q:]\D9.iX<&S,DBE%"(_SM!sP\C(t$p&ZNIrZ_-&OO?eFQ9OT*Wd6k<<+`-YMZEp+A2*2jQf=K+nF?>'nK*daA2]Fn$.W?`]<ZZPdGQO@'?1Q4^9$,D!$%eZLJLcd7fm"`C'3K9^7_^1*$Rm/RtdJp-rKU1_usp1q%C1?3oYqBN%S$$m?lH?`K&B<HFM=4j4GAbAB(ibR#&"cM)'oc.\^Q::+[%=7clq#ZeP!R6?)J!lGgo+p2fKKr/H7>(tS4E]+@M=O@[*k6-Oj9&pH4pu,nR>jQ!KD42K11M::jb/&%W[Ms<b];;_Q3l9rW0i5.8%b'9m>f&;.-,>0'+a(S1Vi"ZH44:!oG11D!r@KS6!aU$-!%3*;,k+J_5.D-\BX@1`:)O"qE3a2kHV&`SA'FIg%""h'$$$5%K`RT2m%,ut-(XWh?^_?d)-7/Q/oehO(4h/c8#'>A@d_KbVt&M(+WBd.CYpG+I:!]0sV>W:ES=MKi*mk?:-jm+k2WbCA,9TuO[)1!oS6&K]i%E`CT7\LdH&7FtR;+6BLWLasN-B@4lP6H,*o4?tm.[A4Un`R$%?0deM-R!@+Jq`]ah9-$\WM3uBYMHLj<DS)R,:O6E7qL+"sCKpAH%_YMs<G+^Dq;fF!2IkL#R_A!u2--fYoB49O`h7nbT-Mn5M\<?N>V(L:K91Y<GK-A-Dn^Fl#S:6R)RmW<0864]e#\MmAMsVaW%sUXo%bP+FS6mFr<db3orosX2/a_V(1%TEcP5mJc\Hk'7Er0AllYYh&YQ"`ReDqhnYZ0lmf4Smb"s3p5gqn(J;]RTnRc-(<\]_O&XrVZSO%S,`,Mp[;G'q<mD.^\Pdj+'tMQImq>Us6qsk^UX*sZ,qKD[)m7dpqnV"oRFY@gdck0h$Slm@Kl@lEi.:FTJ<5#M=G_1EL@Oh?a]ZQ%P\k0Oc%g\5+BZ^VI2KfNU03e`Z3%q"`4<85$(&eZ!p\u`/4jcl@eO6O"4@\.pZp`d33h1%+>(tWTG.GAaFe-DqR4)D*UB:!3-_Bj%@k]b;b]Tdi!f.\n*/lWC<)l0@IZJu1<O5RTiQ*n,NOKO+=6'AH@0;g9-VU`3i<uRLESm(9K-1;qbag!Uc$J+Z6i"gfjKL\<:r!>t%3*DJ[a/V]=!sK$2mL$A9D=:QH]'"W`2p>CR)A=N.UK^1WS=FMr!<$<fo)!G0;37K-I(,\e(Xud-9R=Ll#2E%S;9tA*QDK.,ZGFo`%EX.%<Y,e)FHe7!Ra!?ne@<Fi/5e3rRbdH./XE[b`@N?moTQ4,4okf&j*7c,@KY(V&:aKm2>$&9D&9Y9Nf.*T3G8LOrpAs_Z^_'+D%IjI<ZOf:\`lb`p3fmI7\6e:YV.^0[p@NDE6?1T&U[^<?^_JrZu:akP%Ku%dh0OVj5iml[3'IZf2/(FF(]jD98NX*ebN-[3Md7,F<%0SGul.&fNBmc"q$N%s9*?_?Q="gSe&G@SmL)9]T1G84BM?l/,>B2TP''Mm]%APT4)+SQ=T7s+H/>;YKnYef%E6@fW-Jhne4N*$a+%/<1DM:q<XV]!f:Z%dT,[_VL$>FQ+F_]9#C[AA5r*T\g?*06]W`B&RNa`UF+%]&GRg%i_a;dUlCR1b$^2#s1D[PDp=].UurpbGK.*%H@HuO#7:Vmmff67)*)/#>jZ@'5_.!ZV:N'ArGl"a4CH0\^,31\$3NdL#2oRJE4?"+B;rKiUt?\<ZE7_ZrF-O9S#`dFK2j-bGC?Q%%ktt8>GE.]@3`+K[-G+2S!AeK_(fh.m$5A&CoCH>p%Z3*r0o@2@JBD.Df!Xo$l:?+=&E_ut:H-/+oI$!A$l`OjRCe>-.-N^b/#)C1%*>(t:?e;BJ^B5:1VdD-6FqMj"okr.1=Es3>:lUR\#tM]])Z"O2@-p4Q^dcA[)XH@dAik$V'F7OGX44_h^:T,B`rfl@_MW5I/)'PM%\J8/Z)ed'.'V<?kMc%6;Mu>HOiuAdu*nrkpTNHhlerc9q%WE<13dnt%0/0a'`749.jW4\gZ30piqXG'G,7B:5cb9=$L+.2/:-VBu%2\"lWmuL[%V^kq"^Cr!PU/!oIna2S&.[$F,k&_PIM9kC-[fl@\OTkP7K$i,Pp%L-FK@TG@@Ua[)7g0O?>ss3Y>:_8A@5X]U^^)t\%F%GGDQ#_&kL&qN6!i+>SFkuFepH0R4p%<JQ<\]P,R@L3=CquH;!3"m%>LARo/%K#,%b1Tf?P;bpgQI'!H'B<nn)dCb\4T6gJ<D[&%=rq%S5TNrMe[Mq-H*"X7?d!&WaHg!*[\a[rY6kI\<6jW_&PoiH/(;Wpd'pE9k((V.>goum4)6%Ra4c)2JT=i.]g>rDMQ(9P9A:ml%+<rRTIG<U3LNUXiCY=X`TTdSsK5RlJ%2a_Z<ipK_9+d28QDQHNM89:Z].dU#D=QtoV%(uc'FL):$?h+e%4`G@L,)Z"5io.FleD,^%3NP:`>g6l>Oo;A8>q)Kf3b[Zo&dEO"F'4]I=6d">:q>>4c<Y4tBYoAAg4;qJIU8_]N-Rocl[!qAK9WY+os/bS6Or"^n(0<0.8XhX%/NE'ASc`VHO&La?[E2U7jg==7;[VTGX]T+KfsJ`ZdBIGkG+_[)CfPG^nr+&oZS3asJH-QRVq/9CrGl"a4Lg!BLp&I37]Z_+[2kbt%Js1ao;'<i^EjrtuY<Z[c,,3Yr?#\pY)lt&.'I[H+N-@/'b!X/%/@rhu+@'M>;X<'1IQ=Jk*aHrh6p\dXD!7@W2:TQq1Incj5?cEJ%(F;f_.s\<Z_[3:.%ElD&4/]CNYUWHtY_b#@N(:$3QAQD51=e#\!`T:pX_Z\gjfn/tE&D,;LlaS#[,8+YaMSLh=)T38(,\1"k<L@/%#Lq&<T]>(dp-VQ0[0)6e)]o/tr2%;7]DBo(W*WKge.->B^Dtf6&$B\!iZ>obWC8QC*d1pmN.*Lr7%*qRb%bH#d!@*,EbJ+V?sB]Q%8/*J(%b<`MLNQ]$8q?t:7[^m,gA679ef>:8iCK(1$)^uLZ5VDNq3)YUBsH+rD`DoZSN4RF)<Cs6`U83%Kf+`ln0_ecF=\XedCuc#%[JO2K<W`hdUBB[c*o+!Zag9dVe1"3:,;<k\gYUcQMiM_#+Bmc+fSk[T/(04[9N$9U_-#)PZ<VrYc%oJL8a=Sd!\.QRP*Blhpiq;,%C-\VG&Ti!#^q,O@X&!H88p&9(T^l*]okf&"*S)5AY%9V&20Q.*KOPTHJ;4TD4dS9bKL),d0NU%qYhD!*I412hQM??BZ#/&'@Y_>.%jS_,!$LU4,*@^ij-&ef:TKqV@&F8*E?9,)K%U@1p`'X-%fY9s0ikktZfmAjJ'.*u#0c7"QG-kL3!@i0`MEf]NEuiR=CBmlVPN0G2%aiUc]]qk=rN<08=!i+>UmJV'-G<EC(h3_4P4M`dT+Dm(N$>u/BPQGL#o"(,+N`&Xl'VMa51PB&gUa[o;CBk1MMEo#2f5qh1kff>D%ktZd2Q+]MdDqk0NYjQaT/HZXS6]a,%_BHW()_dR2i+p[.6A(qsK1=YDD$0s&q\IS&#b/8ZV:pa5",-fGrNe8W21:f8c$X[l&s1q3%RNpCkmG7%uG9",Eq1s'JMi8HD*dZIhX2"NtmSh(b-_YU+RmUBr#?8-(JtR%?72V;lL:%,;!_(JP<p%&)`PWJ%(o1(Q5io%Ele;4'%)V,o>Y%BlWb-=;a8r\/LJ?.L"Mt_(-IRoT:7\<9KVL"(*W8*O$7=8=lHEsj.Y]c[9TEmS\6STT^$qagcL&qB*H^3<YD==W9h=9E<%js+//ZHA?'[)RkAfG'aHiL*5@8:#?6>hH&Am9Gc=N1mA<Jf:n;+And;3nUTXkZG)p7p%\a#Z)*][6r^*08F\f"(q!:/4UsF276+t%#sIXjRSne:i/FLPkYn#MI'C/fc>hH:DO_ZNG2Tm=%BT5m#-=Z'HO:%W#WfArD=<h/]&<ZoNZYUnrY-\"V=3`GkU'R?='$h7=@Ka=%C5HN5N3##^E?euEI;,1ZE[U[=eUW9DkJ1BRl<%>j8#K`#$gH1;[_99_l])3WDpe[3>1B`C"bn'V@!C''m,CGEJF'-B9UW'"!L9k[%)V_,@\q?;kK=(f8!p-J7ZX37SOd7'Gg^-e"J)6"SD0r`QdN&RqA^KC9)2jMV^q4D(2W0$W.Fua79d[03'VZNf@Was(>.0o]?/&h8%Q,?e\(.o;)i:MGWb'OS"9/6`rVa,gU>bT`XmJV'-G<EC$8VboUE:Q#,q.Q<`CqpnO)=2+!(cB!7@J=D0>^E@OQ+L5W_6kkB2pI/d%",-di.0;,&-E(Fn!'2P?d4%nbE`]44D0s#;ef>:(B%#Xt/56A09#<c.^l<,P0Ynprq4(d`#b@`B&KRh:?+BI0D[Sn7l7'#Im6I@1%&Lb0]$XGgECf_-,$3[<o<GGgohCjY,a+J/qFBB,&,W/Y9abLhO<%sX&NJek5CJA'F.OG<(jLup7QM#+$7@Q9<*]S?H*K4^t<gcL`%B"slc"kdg,SQaXRpWI"$n_aaD*Jo1b8'70GfRS<H3Rp"8\6KI\L2Kl-LCR;';S(#ZD<%.9O0o(D!_(JP=ollVbuREk;'8,8XA\B<%qX,9Q*=o;beD]+aF<HM'>WZm^"VqF,_Eq?a9k&i57Vp],!L5`^cHE)%1'Q6;9nQKI%bq*O"b:"JB=<hP4Dnk*mEi:cf<F[fE&FC#%M;YBlA1t*6p,_[oZ9N)47PoST>&q8VC/mb1!O[!NBE3Rj9mj(pLii\U-W`?2.q&oiX!Ef9'N@^b)5q[pHbUQO%1fURe7!L+VB_G-%'+Q$VF\`1.mGP,XI1`<_N&q@pM>O`%O7e=:",R(H?skQj5@>cPF\;`9'g\bK\$^ZFX;`5Yq\aODfi;g0#0k$igpeio1G1E'4[aoh%MV"LH[)9MI3Jb:iC1Yl&\V+e:g4A+ZF'pGs2IJ+WF6,Z<!Z?PdleD,^3NP:`I(`C4=6\4'*%P"fi*c_*()_Yc?#,Ku@j+KhMC]gi%]dd&Qb-f3/[WC53m6I@1#=cO1Q)Gq(m.iZ#"=R+".`D1l]iuNANW[lgl:O9+XIQosYQ6[a5r5l!Q:06N**CL/Xq%D3eT?;m[T]tY%8(qD%V%bt0kuVd?;Y7.c26ou-!faU)f=(Fr@GPq]=sb8%bN5V`9JXmCY]8?%VD`$J*4?5u@[pYX.:]bBIW&B"MYDq4"6npi<X![F%WhZ@TD7OH%hQB+TWt=RNp+AA,S'GBcP/B\7bLdsEp94QVY)(6]8qk@7Ddu$g.4pG[.VGT<Q#B='*8:[5#7:Wl5f(-7W5G(/dre$/%!0t)eX_Z\gjfn/tE%O]mYK!kU1_N@j40T^/QfMuG@/J!5(C/u\iN],Kq.n0J(M#Ud*p1CO#8aH@mVldPZ>t?+!0+68YFDuB7H59:%?2(O1`)2e.MZU&&03$H-ohl-CO]gi$F(rM9b13=>d/fN7R;:p[[[76,KFQKB'FL)0*N[6)*7eHJePVE62$c^SC[8TJ=Ecm;RLrW4%;\/7_c!>JMb,&bhW!7.JS&+6u/01UhN>>FF>F)+%&U'h[>X.,^1!eQSOnO*mmem2dcDl#(/U]hmkH=DXZefY?\]?(kSi*ut"AA,:%8lEkWq^>1!JT@Bc!gP]-#h@X@Y2qcT*ItKY<XrM[(_9_iC?pl]!ZH->>1^4WbHUDZE&Hqj2<gdeqK26(YQNWcH-'n)DWpt+2Z^=-%/SK[1Djsta@I:jZ,!CIa,4L-5A7^7?l_:gdC@->.*55/95K.MErcCGl'g41pCj?kJc&)Rs\lm#F?L3];X<)Q@nnPqb:"rNfYE"J>%lch8@i/q`Y.o'\LdC*7"jCJDQ[i&2KV:+cCDYeUSgcIcj/I$gD^E,;kB#/"K.@5u]_]UkNCEgq:ao^X1alOgY>IdFP`7fc/JI[9`%q`0/H9(LWS:af/5nWg*HD3IV"2QSt]>g#I7\5IG$K&t`H0]%i.rYR3F)M/a2LitjN?EA<F<$r.2etPX=[;C4/Q,hU06@j/Y_56%E%AQVU64%q^>$<6F#[D$MHQc$Dp_6n)9X;Ya5hq$B1]gD8;*gWKjXuNZ^-0eG\gOYTsERs_'CYAJ0Yn:UR<k"S\Zjc]Vb\E9f*RXlZ%!]%Jj$hVu8]h8ju[eEk0dOI^:Wu=SZp^]H*9=)c?\Nl[NFOlAJ5]^WLW2s:fH/5j0[\#X_*n]e03,mgaIR^ELQdY78#Z/(4e@N*%%?OlC^#M690n7!B\SYE(PLE5#\ki_/Q>nO4jSVfR)CR_"d`JrD(@Z9RpHEg3>VN-oeB!S:Rc$Io?J#`R/T0f5egO%okmWs9bisZ=[%X]j^rc>&jY@(1F'V;+MB/X('(C<#oRPdjRL4YF%K=I(7MZ$INiTKH4n=4nSEIc5sT5_.!ZV:N'ArGl"a4Lgi"7^_3-L:UF7%6D#m%/)@EbHBS=3NVVLan^.B&]r<$ZXaJZta4c)2JKj;cIqP'T`MePg2A?GDfUI)%I<Q.dNX&Xld7>+RZ^AT?*]Ds1pNDK-.`S$PF,,WZ%FeEc1Y/&c"9he7m3UK.a`Pk7S?nn;pd__-,,67jFmOGKEXm`A9h/VAa3Hr@pPKEC""#mo)2-\?`hP_02)sIh:!\/hg<m.X_0AL#=%4ch'g"<C14F%<=LXR7\F!ZI!AXleb\n!@J=n_cbpGLrqHnf`)DGQ6,a[t$=E#jO;Mc[gG*'emr*n?\Hk!S[[bTBLg_&:t'=iuLe%%A@h&1.srbr%eM*C#@!<*LUEIYE>82r/WO#l[Wg>3h=9Dak$t9ooQCA5V-?'Ll`=L/W^JmN3>UtJT#A7h/_I86DH[gX2/NU\`"d00%i*Km3&GB!Qma]$fM^-][[GH.u]:NBOBLL(/d)i;cQ>Q/"/$K*1i>_6D/&d*gX0YhGZ!:u'Jm@I*gLe.HdUVZ0=16)#Xh]h3g.S\1%$@LMB8$-^aqrP'MG]4t(&P"g_Q?oE>><LOFX<>2!JV7N2M?Wl(\$l.=/]`^TCg-\1,/`)bY%W^u>Bpt$fupV0\,2=?N`+cCpW;CL%p&A3=,8.74)D7d2><LDmX!"Y:%>DJ(95\uQ8T#$:SCN-^f/@CrG)s$5Hc[$6[1Xu"WKq"5YO<cA*21&OmuYGrmJE0m779gPrOdW\%$d"%'\-bt@\S%k-@DQhqiDE[^"W9"tS!M/riA7"\@qGmK4P39,FIZB``P:5oC[mY#[_5HHkH=hlD`H22B/TLe>`/hki#MlWSP)Q]%(@7=k<kEB(#Zej][06l)[&0F'm6FaU`Ik:sMT9H9^8JdB!BdcmD=<h/]&UW7$qCs1h*0;./KS_^,%uQrSTIb]"bE+bm)l^Y\<K_2%j9d.OcK'm4CU"Wc[^%A'Vj1WZDg/$]4Jf2tE+Z00h"C\N7O-;mKl4"lb6XE..L8^Voi5,t=IZMOU7KIC[I2b#QJ-La44$U-N*n*7%ij%(;Ec_Yg=&1lb6egHNLNULeX.##):TB^fYu3.u=Gj+$/TN4*Z19D%V\VG-YYm(&_faS:f4/q_44">BN*n*6dW#aI9&K'Z[!53`%Pu@Kb+?Ah>ruoOlA3?ZlA_`9`%djL#EfF+nge+d2]'>gXAQgimJTFLp>IoMYn$>il*B4mm%Vu;K*7eGB`DPR:ZoDfKgZ0Wb@GUJ3%X2@.6Vq__Z>aZ?4mKHUPdXM.IP[;14FTu$;Q:uM2C"5pp93SKeoSU$YM_!99_,aCO@I9mm*!O&MMkek4mG2neG<EC$V-"Bm03Mh#%R2-=aMCM0b_?nN$oLbubq3KP3\SDS=s5(0fZMI9/K!`F#R2-=AJgq7E0>6?Nn7>cCZ+b)DQ,C2n^pWOIRf#<">,K8kXe6$L4/_!e%Z>e^n.VVt]"o09`i-\bA6r+>9$u6*Z1+aP`q7$oM0>6?nn7>cC[D$MHQc$Dp_:<?j+JMs<SX!pZ?n81=nHR.'a"f7!\X#(5d`Sp>%,=$%%S$n730CQ/hTI\LN_,aCO@4bN+`DKH:R2/;pDqk0NYjQaT/Y`n38%B&HQ"fbr/#\'l<lt9HdOPU!\f;a3I9Xs.E,?E(R![Xs%m6FaM`IkRmMFVEX=$-Md9T(:L[I)f889Z&`K%Ys#WE;/I/^r^q<_rrK/TQ]7Q!Qc7;QI"AU21"EQ;(SrjNC:Q'l+&c1+a_Q$EA?P%<dM_`i6&EOC0b'$?,O86_:?b!**fNRCLp[3fIdk++O!&k^PZ3I-EUUk5sXO,PFD9LmE.'Q&ShW_1+a^fPTO-/Xsj==2A?EnfrNU4%D0pI9l])3O1EDU6fk_*LdkZMZ>*Q^7%9>B6<VD#9'cg+4(D].cGAYs)1X]_!5V(;=K%D=56rg<l+2JW+0`AN0l<EsW3KtHe>Upq]%W*Scp%'@o4JlgcC"(ko!ja!d<Tk+J9M3Bcfe$UKgfbS?.NXOUW;GC`@.Wnf^$EQ_?8?H[^qrP&"Gjt0fcBg7?-u+o6\*#f^=&[4c%H"p9i6gCi8Z='>j#8/t9e)X!M2Ij!%<Tt35#7gHt"*Zo/A*nD?*!O&GMkek4mG7/3pH84sHOc7mj=WSsUW%kfRL2nQlY2F0?,9hn%c7&EE>&lpR;:"I5/auC$%dd@=d+)h"?kWS^Bs5/.#k0]T*3m4pmoDrij1r((\UkX"#Ml8a7Z.LU23hFNOQA$.XouCIf5e)gkd3ee%ZD!n4CKm0H\l!UO%d7Z7Gd(1HEEISD'h<hYdGh+tD0s#;ef>:(A^B>KS#[<mYSo)7Ct2LH?3sd%F]Yec-0Rp^eS%64LmI/Vk2pEX%.olms2-N,pWi7tZ`TjTc$Atn3ii)NeHbUQO*=o;bcN3<5<FN*M/KS`Y<06#N<=>,(/(ckq/C)dZ5t85Sj'uq=^*.@3g4?CrM[*HD%'p$o1Y'::YN>><lCYSaJYjQaT/UIs]CDe0pULaR$2&2pR`-QEG=0QTpW\n6C=qFA?(1Z+P_FbeK&"G_5fi8EAC+:9?p=l!5OSs@R%WHE')^DtfF&$B<fOkA:\5c`;l_,a868PMXe#Z>jMJTK>h6<9k8G*uA/(tKHUOg_k8'l+&c)D*19no?loX1R@?E&Cf][B?Y#Y$p/V%i+a#JY+;YVKN=jZ"@FiCoV5LWQWR]"/lJXNp:+U9Wf%p^>2."FY_I9<Zs*.Z%cAlR\&2CnmH>rHc:-ur*SU49):ff=Y%H)?(p>EC%X@A*Q"*^'*6<CA4,#@GQ5`kWc!O[!lCuP-BG/<0gFb@((?&b-^9K=1>f$a;l:-fcl1o5A/gUldUDKp+XUCM"=)Z+;->"5_q;aI(B%=Y+uf=KMpU)0_=lg:hF-G3,rOT[d]n_,=!=`%#n27LH4db=JaNg\^*:DKt[>B@Q%.n'p22FUi6<<-$!dXMm#mmRkd241V[9/NHg0%VL.'N4NMfdl@@`iF'u&Giir-f.uj[<UW$*rg\-)=XEu"9]ht+tX.\or[!8fT;aF#KROumFI1O]*R$n78>L8e+2f05b!j:(s'WV>I%)D*#3j]!5J??a@#:gAtq8$$X`]4FP-*4V;3Qi$$@X3oqC>##7#c2CD!&9Z.D+jjDe"h>22ON4d91O8WJ:QRW)X3oqC<_^OVm<)JM%!PV$],M'?k^$8_o*4V;+#FOPG(]CAEm!r,5KrF)H8ZTLU*QpalS8+$!jFQ+bgKQ#;Z<E;Q'r;"9N><&kqGg&=l`Rb,q\h&H:uA^*%WFOb-rb@a(`ZSR#q8-mRGd(1H6#ooPo,t$EJmI^:%pFr.A:r_lhqKId;ObjceH&s8(([ig.NYY@?1AW=)D.Oaf=(FSA)6b7>*^.9%T)7U\>,,X3bNV'LgMQ+]qa\'KfRdr^\:')m[)?)p!NCfnJ9<U2^fF1Kj0ZBJrq3E`Ml5(4m9Oa7GMU#c&Vmur>^,.A[!8fT;^#$T%XX5WB=0PnGY.ba2ZF-S3CKm<JeZQV"X:FH/[#AClVW+jah%`_:X3oq+F_uPN%I9#Z=#8iVGNu^W/L.d(QjlXU,0QLa86p"WJ<2Y+%OT]&CC"G9(V%,IJaGR?L0R<hYIQUhfVHOGsrRG$fN`Oc?pW6k"p&Ab2*0+r:j3l)WGVEGc+*H49'1^Yf:gbs07mQ02D78VB>MO;E%J5`NikfU8khujD=c%qYM;Ciao"K:\SG(XSb]5(Mm4Lgg\LI=N^Ir/b#7^1t$&od*uB=%#ErNP&!Zk,33;P%egX8V.aG+b+7)8T3]%@)Udimes7\gJ4`UlTK:`2SK.b/^jd`LcJbRrT:n!?mR1*?:,$b*1LP4pJNS'i\!!NF9)DMdAr#I_7\Ud^fG-fTsT+smbP$dM^,O:%9]!%M./+as;Yj\9CNEPdDUdr'*c,t"OBSkke7@Kp/CZE"lhAq6O9^rNn(UH/Nrc9`]':jgCirbuem=KX;;eLa3,2`'f<:3Wc\$#d%DJ=)3B<0nK_,b3&kd;6bafi^u`N6IeXEk9F!E>MpBa_O\eM1"(%d9q%Gd,_$EEIQV(.WqZhVtJVD-an;eiaPHA\FpO;a0;O"1:`O%8?TP4X<n<uXc!Xhhh#[c7FMRFD;!Non\AJG`C$cYMFVD]=Zc_fJr;"b[rpNl=EbapRLPT[Ao!"0<H&hl;JV!Mm</9eUbHtU^f>>>%4oc^Cg/b,=.+SE4'jNlRC9;`^<gCX&i$u6]C3s1:YE!bOK59.ZBsoKjY(Fh&2B)E@]4PP]c^IVKT",$_^2I0/b(3.pk5_eC/fnh/%=$06Ycf3jNC:SRmHX#+"Ncj7Z.i<8V1afspc"aeJ@(2E'WK+AkYZjPrX1;Cd#[Y]OQ4(qs>W)]8!GJlG4Lj^"%]e,mnJ&K:/tUeR%f(H(Rh=KQ>7NC\CZar/uQAYuPeJ09QdF_'N%>cK-p"BbRj['oF`E'RYHG=jJl@?%'b6Z[V#nF#dBCQ\G=tZE#hKJ+c@bpY6C5*^b%,n$Hs=tUk4<EBaAaH<s^B>MkNMlj?i0!nZ[hFQb^`i;I_]WP,>jA:o0(r0C"`?Vee/=liCbJb.LgCCn3UjESV2^rY^Auk#KJu.`>%&`*CjP#[8X1d?N@EhQWI$ES"N-GW_,Acu9hQOtcK=$5&B<]a*uilm4M3pu-Fn!@M>oAIs#QA`r8qq?VY<r/?V_B_#"BKA=n^l<aJ%!*jKJ(9L7ReHhM=EJ"3THZ-J7fl8;D5=)tMr\7e"9fi!Eoh2)sO6<8i6*b,+$jHdP@]A#B;SusH<^6O!B8bk`P'P1/P"B4(DH@n!%NBPS$#S>9(RR/F1Z=@,)$Rr-X,kp!nGm9%B#i(4@Jr`B?b6LuF=HIW6HXl,?,K%G2L_J77n;&hSBr`B0J@MjVY73HbCjF']b+4*_%U&5"B#bIb%04ZG$W!uR#[)i9W&<eAYUOY)gS:H?!UB2d+-D6-AEnE%L%$Is?JDh+EM3'0K4Y9ibk[AU5#X^rd(W-Pecjic3iS]"4%S4Q[O<^R2c.)(\J3Ue(Qb.6G3/t%V4pk4a)bD?l=(d(g+M`#(C8i;;25J9GP5ft8NEA"=(DN'0f?Z^1Z-8d@'dR!f2:h9pJ:gKV3%A`';+j][R>f9G$$[mEP,34<SUR'O&Q!dd:N&Y<s4f[($qL.Ki!a2ms#W3W-T:2B[H&*Y^2[2It/TR'bC8ZmX^=$e%5=_aud6Y-6c%:Ur1&VCRsdJ;98/`4?gqClu=Lh/j%8?c6<6M\>>P_^TYnS?V>^a/)THV;q=18`c=9-B3Bh]nq-$Kj+*@0Dj[kk#6?ZALc;7"\`0g%'jnnr1aT^i;Wgf%n2d_WI\ApHCn)cEc)AU7PtF([]C.jn>V%f_(_UXa$OVW*9a]JjC<ceZ)C%c1.HhBT5g'8ICN-f[\;lX\jGK(L%oAs?-%tD6>HZ8rJj84GSDbdJh!U'RZ_r%UL^F;_RVVqEd4TZ^qrcE>:s5D5[5/:O4U-F)#^]+//Zh)ViRm5DP(,GK:n,I_+\#[!9%nBZ[bh"ldZ(;KhB`VF*@dpAHnp">CuDGECtV(!\VqKUHJjSdd-g[!<]pq'],i@gNVm;MLoDO=&p<\*j4NgB?TrcNVfM&O&l4o=LB%bq70mO"[_;)-ttpa%!5kkHhWVn(04ERm$WeAusqJlY$7dc(+S_lY$4?$dAOl^\mT_q1n^b5NoL*3.&8d$..hff5UECJ"<1d**dp'%Hs>`VE-9n]BhN`,8E_.^B/^paYA%\J+#DKP.@BMbe+Jco$<M[s\opI)Rrpe94hncneums-o])k@)&QQ24o6]]YJ.V/]/dD2s0e2?%`+FK`4$T9U3JYW#^*^100peLb^-9(frn![JoPL3BL$pP,Fu;K*Im!\Yp$)MR<$'QuKKa*6#C"rYFa_<[f-7iU^TU!-D9d@lq_K>8%G?:E>:JUq;IJi(&fu\R"F?+t5?#D._3kN&l,n8<^0/3E12n%!1lGMlZn]fVWqB`M70D6.kY:`"DI6>-0o+[d*!m"':*W$@SS\A<U%YnNLJ!n0nPg/*@Bm0'<<-8<-F4tccrq;8@#541h9S]LFKCKccW[Raq4Y;Fs)9[@o(4,IZcqE'OJ-S`=4_pn*S85+)*Z/H>ET%RG<%C"D&u=)'cUrR^<0GOLUM?N'f#`hr,808MfeoXMTaq8`)&[isc`Ot>1*i?*!pIWbLjZX]BE*1<O>rF2T!cc;YAIQT^+4Lk?O2N_ub%Ii<6<i3g$IJ_4R.I0M]Wq\&O3ek=k%4EU8ah8e!64"gBm@&"Na^0foh[cl\A""O_]?mf%==4dKJoD@:=KH@K!E]uj3`m&\Qia/tk%pu1l+lVG"GTe3"clWHVXlDO76lbfdHO#P+G1D[=p`=&'(B!:N]s8Ht[H$Z**[4e,"?0cnd5(:(lGC4H-h9#2gf0?Y!-8'eo/%,A<%2c[lIC<l0)<6?a)nsnD5p\NSCpBu!Bhcu^XhAjd<#!Is_mIWK[-V$ke[tl8s9E-o9JDX-oYd$gi=2TgkR^Ms\nu108oRG`;/p<]p%D4]WS\piqRW=\p*]8bmes(Q+>h/;B)B40#7^'*GC,t?\cFEh:ef_O4F2ofR?b$S@@_iCqHDVe`jhTWK+^HPi04d+ni<1`^O_@%C?%?VdkT3eb9%+uWsi6?lMBs)\q,q3*q*]m1Xt,l/8NPPFfDfMkl.S4g5_MS:bDo#'G:ebR&Sl03]$2`U4&n@-UP?gk0//A45rHhM0n%-:k`X=6+4s(cPsiS,0YG:OV9b[^To4a"n.h>:$WSp$2CkqlB=hT@T3lc/JS-"[^pP1c-Eu?rPJ".gX&HTqMo]6[N&(-oiZNB2c(]%(?\/U1&%5cjATppl\R!\o)puFq6&o:2Y[$mi&`lgI<^`Kh!<c:[j[,\r>jW]EBi?+gu_P_]p"j:[,O0ZUD8h^.lQ!hiQ(V8B6,NX%qRLN,V>GGL/a2^&n`Alsq0/b"V^Jf]jlJ.ehqGBm9Q]`7/V!;"<8ssbNuuZ.:JNQ<05pi9r*bLS`Pli]C;&#.UEp;UOT-ktri([&%Y$EFSCBhBsm5>QsD(]DTid>Apk.W]FO@+i2r9IW!IhOQeSD1BT2h/NF\%+GIrS0?'X-sV,qS]o_2WY[eS*082md0k!Q?UFG$_4*/%NBh\GN#B_fW6t4k:sXVTral$8b$2D:^7P(tW8RqqY\pUU0TB-e_(r/XJ01KSbR?oT2;:B\p?qeB@`BA,<mNu.lVeLbeh5tWmG"t:%Z[^425$H,G:etHD=NS\,Vi+>pR)/[-FDYA-B]\gWG^XtTamo2K?a"):Is3K:5DEi7=mo*V`r-k%II/2;c!Q9t5JB7lQuf0sa:!Jj%dm`Z#SK#KT9`8L[h&p=RI;:Y>4#_s3;c_1h!ZV#a\(D.!`nWLZNU[qC+D,/jg*/b;>lh0h+rfjY]FB(<GjX!iEucE![b)1$`nWME%f'OG#G)d-[GqcGM&OO6=7u02#H"/;`(-=k,R/>I56+55S@a=AofUKXpNY"#/^@>IYb<&%,Zk[%sr&Eh$UtJ;sKhcJ('6qdljP'"u%j6ukTAffTVD1B,'][5TkT/#`V^\mR9Ahj)>0f;>Q6ZH`%PVt[QaX]rAql<MiYsV?3,H1+46r<2N]gGUX"LUTn08ZA$G[1;2#&8pc%?5,Vp_CaQ:V]C(eNLk=[dgeP.d*iIfD&dleboAr1V@@ftYgfi@qX0']I3J,^q*NZ9HM9aT`@p;AZ[\U=Irg):b7@esMtO__0:k8,%?7l)$#<eO9[rZrh\u+58aKA;lY&4^HhNChQH:FW[?*9&j_M:-QBq`9qC8$(Os(YF1qaL=)q;3jJ*u<W"caugUET^M31*OTV&!.E5%m<Z2b+iHFIq0:R8Sp=aWQZ#[WSR()Yag=Ri+&7l8^7%E4\u$F=hdTOZQ<-qklc3-S@Q.:NQo4c#GLkVBnsf9QkIl[GIF%XFNGNK;%Xq^5o;]:,FTD5P_AP;DQO&AaO\OFED8+=jZ<+XnJ6_!8*C=c8[2M4RcFnZO.m/!^=jtP7[h/;B)B;!S#DERXJE+1_l_qk_up(YWf%Sm,?BI<P5]iq-geJ+;j"C"oD+^Yc0K7:"0,^s6Eb(`(:H:-Z4o=RI`+4,`4G@ejfF=<^oKS#&thbX2t(/*1h)k&jfU?W5\TSX"5.%V;*I>b(_BtG#lbP=8V?cPah<H\(aONp?^VI:GXd(DsW[Z]7>ljea([hIJe3cY->e#btOcn[,+'3%INf3eI7G0I5/L,StBBg]QQa,%B0X)E.=^5:JM`_Z(H$'EJVV1ilgX2F8EH0ohTsUT4*At-TBWL\j%c0;QtYrHT<:sc0>Ao_cKQ-6RQUK3lAL._?(IVEHuXT2p5?!;%j3(Z//NZ,E:=$;r1Q?1<_'8619flq8kAgT;^$bpq^X"Mrh:u&cWkVT_nC]Ho=MKaBoC?C_U8)N#@TneqcB'\C!^,sM%ME+\O+,$W%BT'%dFt6c\IQ0J>7.g=U3)\'N,:DfJ00Lq;nH/:1lui9sh]E3#Fe<fa0/diVgSA4,_T+G\A9PPBSaKsb]@]I+"`#SYGJT.F<+5-8%(H^Hlo;uW&]@c@#G.NTYEWN@2GB&(eLqa+JoptC0.H^+?$\DT]Hb#42@UiClY9]5"<G@V>+o*ek\7\33mm?SP@d9F$P!<IARi7Ii%8s7cOG2:qY13S+io?HgYXU=\PU1(Z1r6:pH]C[kjoJ2IjohD8oZSC[`P-On@PoENAG%kMo2_Ec*KCJdX\P"A-CB?.Gpo?q7oA0<(%[oYf_.U_&CVF`t>m6NPCT!7@:-f"$o2=1HtTC4Vf(J]=h^,@(AH1m.QA*UOs^OGJJhUIn)Z$>Kth7J`G2fR0J:Z'I8WV=G*0D(4<%`jPb+Gjbm-j/ZY+2ru$N9%CZ[8$J202GOb1<rHXt-%(2'b<Mi3H[]h2S$@jCcect;cJiH^^4nf<f<8TeMt7Q$cE+S&i%/5eZ##kZ%?"Vc\-=@KInCO??#Wkbr#'$>NHSkg[VS:L^Ckr5)dfaJ0;;>je2WGd#RXccQ^ePR4)04*KnJi'tSJ8GB;UE&Aj-,tmo=nS%c1&uS%YL`)po_lua3I+<EOlr>5(@)cKb^JLTd*&KYDU*,pDGpT0E[WdAqq:e8#lC=co.*#VHfn^a](ikLrdW0q9],R>*KBgFVh=g8puCV2%Y##)TVpihQ)=m$fq)73uf8r(*QTA\F;Q&lbcd.)^21t+"D(&S4GC=TgitYt&B4&G,(!<(_fqh#\,i.Ggd^[JRZF-)sSj[)ZpJ9C*%IQB+uAt.:^F6'8oPlY5`Y(pA*HA%j_E4$hb.f>+bXCB*GLh<_r6bS:fb^=J[L`.`@iO5-5/^X+V2!D"7j^oO.ZmGQi=N=1#]6ZIj%X3"Z9eZqW$>dXm,gmuB*Y?/K&R<C@7:1i3>Bk&MHD2.,VPF3J;k+g/-Smg9n9Nri"]cOAPS^b$G;UbKD!*^^+X^B:IB\K[\^D!&Z%6IS\CH<,%'^C$ZKc71_WB\Lqi.lPY@qrS5\s82*Hm8)?S1U,n7C>(GBl'5e2T,6b'WL*4!7,4u4-[$*rRrfPf)f`X9^%\65pY1Tr%G8UK@#Q_V#03f_:b5BR-c]:m$q8IqN=!*Guc>J+,cT)oBO#Oht.`>'+Sj,ti<Z08DI4t2h^GSgJ:N4"Uk_76n4e#.tm[;[:@o\"#%0e(l9G!G2'+b2YFm'Gqe2[*,s2d8AU9\cL/la[DUpp[ommGd0(lZ^AsVr+$bcf4hVf$CO#T6VV:=#2[^p;Qt-ISRE53EL(S]8Lt!%ehh6YJS2p)lgX0PMdt)[/5/:\-AAY3lQ>)oPa:4d$o_Tr>Q.4VJ1ksO9?V64L\7[)Z*1&BZJ>7$A,2$!E1EN5Y!;p__q!l5IFcr_%f^Y3\_1q>:QC$N3FpuQS@HltE*TPHtjB1hO[<P%VQWN1UqPs=oS\k-_+8:_?n@(:>2BUX8Ipg1jWS_<3m\fJ2F6^4\qrjqq2fn7?%Yie5X!dVKm(Wb91Nm/k[;QkNGC"VtKg!0DPdlH[[GI6_u;:CPk]`\SFWO-K]e2NYYc,QCq9?-BI<piN3Ng.4&.GGmqlE1KGAt6aP%@-B2prMQ.#(*3A>a\_OXlJ/O:'<stoqDBU(Gtl84Ft"n"$Pd"gQ`eo[J8[7WedKIs=nSs*=h@6&f8Kq[m5>hZD_/0hF8>Ig*=aK%%(iG&414R"'+`65^Ihf'.l\b2b,nAS'#I:h1;q]gI!IJ%@3oGio1XE^kYBM/bS+Dm-1EE[`5&IN(!-HMjQG:1l%'M`_Xd=OspUX3@%qo\e9]RnShH:A@s*D=#>KD0a:hnM7drmTQnbGYt1jXb>1J"1M=)m-V+MtNNU>iu'TWL4\D^KgW+:R<HdD@ooo"ZL-[0%AmghPEI*%maAGu-2i/;d_SSe.%j*3J['^>5/-siDFQDRc+2<t@Q??4EOr>ts$l;aBJE<$"7EN$^H1`_H;K$8If?C6..6o8G(+^tjd5]UKAW`h%aD\fjMcN(?na^P!49?W9O<=IFFnnbr!g=tt&bt;VVmFSG%r_I@Jc!5IIJ:q(O&tL_IX?&3p8?An?L08X3P54Pn(t"^QfZ!>s8;"X%q2\^,rMKC)I/ck8nNY2]ri:Qu?F[s](]W[uWl81Us6Z;h(phrB3A4hKIc'q>"iAKtEnXS;JF(!Jh>o%k3u9FMZ]+sCqa"B"35MfS%IaZk(m>#Kt[e0I5R/k%8+,r/a%/[m+7)5=?ipXd61'uZ([BFDpfJ]$EiV3B]/i1kmO?4S-OS3hq?CL#)j-$=FK#d[7V98Nr'@;Cf%/,2:W?/)7TPbQ"&VX/urAbiVJ#V<UIEpA2)J_ddije]Cs0%'bp$\0\G\lg1r#AubP`NqGEkQM!.ZFnnQ;ab"R+:TI"Y?d7[rP$`?%I^Ju)--Ilmol+*>*)I%L$Sp+3rb@\[n)M,?(5@mH6#\YYRC+r8J3I[N<8LD7&1hGm>jHg=W+@tH*HCf,PQk\G#W/.H6sF>=!*IOj%B^*<u[WL/95=ZBtXmm"s3iOlM?$is^eE(">l(B#^o<9kSm]CO<RT?d:gU_fKZ?2bHKc).CQ5WK`+B#sc#CLW9[LlQ0ap-8mldAdn%YZ3-[.p-t-hg9_h"e9Y,Z-"+Jf^)S?]?^SXmTg"S)dEf"i?P^T*#B]jD`c!<`)gUg_cl+9%dV,9BMpuShP9YM6<&4blt2!kpb;&^%``EjpSH,3Y0!?[jPSa:DAp?!Vg>VBS5(]$bcI4qun-E:mMuH1WHitejG;$iQ;#GUPV3rA*h,:f0R3$o"mXE0*j]p\<YR\^/YFJt@%K8S:^oP]^O4bYE*M7ED(F4/F;9Uaip@[&Feled02Xg"ZH&&Jt[G&X`M7R:G-,PJ*%l9I&RcrP*(!4=HBh;^_iQ;)s]F)>^db?gu5%LK%\bR:b"=D["S`Jua[8K%1GMF<2hq`r"s.G6%A:#6LCc?5>k.N9jRPPlR(N;Ln6XP2l#iSJ[k5]H+pt7+;39?5Se]VL/fg0C`VN%^(n@hYK+B@X\X^@X:WAh,5Rt0D(19UJse7'J9AqNgnKD$Z8[*bbQ<_m`TbAYA65@[T<pJ/;>;i-E$M[<VB3D3mo@&uGY,,V/-O_d%Mk]NjYd,]1g'5I@$T%ieS@#XUBt;J@0MhkV)/js,_>k+\IjG[u8C58$MF_ULbN#dW.]FP/Zo5;--@*iONtc8uc?f'P,EbJ[@YomD%'Na#X8OR%R8'DX'.%:6-73pbO<c!LET_*m]&HgDC"_s80Jg5'[kid*'VFZH9n1'BB4c^,4Q+*o*Bfu;K.2.dW2gc[/gEIijiI:-d%n/;D"TZJB:<s_JeDGQ#om>8n$'()W>.O"toH[=7oj?isplbb:i/s?U?%s;:/LomjbLO:Gtjkpr\)JoZc:+HjS;YsRWc3.SXO>@0j%!AStYH!f6OA6A=-\PQp8hM;d#`99X>U;Y#Q4WOI:n[*YkECY,GU)j"W\pJ>U\CrP%GVcqW@H?G;m_btJa%,U:fq(4"#=V?;(F_"U%i&BC0m5WSgRQDRV?9U-G4hlnW_Q,B[`e[B'Wf;p+biA5Vp)H"7.3HR<JBkeKq055S:04$ZY5hs%YH)n5=<>g<Z,'.r5h&FSe]Sqc%VC+\8+`riB=H]Z)J!>7/U$*dJTdWL(@7P[-4@AsMa:ua/KY2u,F^j,Sm2`?k!0>tVr:iaOq[_O"C&,7<\-0qImGb&0j0r[!7<I*5%s)+M1pD)[nr\loE#`DlNHP12K"l7-)*;oHKq(h%e&brma5NmWV5pj$F`WT9/i8W"n1AJ[O&S-AuAD)Br$MPO`(g.Yk*QgURMf?Dl%:Z_W!UJg3sPfiSNSS9/YZmdP0/CXCn\6g?)F:iK8f.dJ\d8jt"&s<!AdK4?p.=Dl#0:0]*L6Y]B_P$.TR*7AB;P"2E+W$G8Cq4O_%2EQK&Asd.eg*NH_d4pUgM2:4Xit6OW1ql*;Bj4O88SuY_<'5L:b`sKI0:X51:nD?/d0Nu0VIh"oR.7HY`\eq^3nU,;q-_+IV.2Eb%lpta2R6YNFL4pS0mpimQbjcj?a/HjZh@u`:(;aFs4Jq\\+Rhb<<6='u<,)h1g&?q87Nq@qnZ7+(<QKJ$12l*N*&<ppL(5WCU.83;%S.E[I(SECq"k=r).St6F`t"M@'P>i$9d`83*c7%/)!DDPT^lj@c-\r.!PKI.Yoo&t0q6<;1NGK@k_#!]M]`Red+dJQ*FC7kT=L'5%R$gou6R4hG>6/9Z+BgC>^:Xm25sRM,AYSe?V?):ULaie#&'B5G\'^tl?3kk!MT7@U-Fi,mVO*u#'6R*7.\*EaGlm"Z.feEJTgS+)%V./hoXWqJUrqHV-kE7.fO&&RXI6g)c#ea<)m4h;sb:=!Dj1I[#&!2'2'HMB2.CUbId^G-*C4^BF[Gf:P"fCiKaNiaY,*?N@X.F[T%7hBduGe,,V*e=mu,-PONr-WYGjq0J-6oY\6e6C)658iV0*UuWfq_Kr[GkXeaK!-<Ka&?/T,4h'i`#"\pcMJ1.nG86p-h$BeV3dWi%hEEU(-_4e!o(jSpY(?[r`?*;/+j"9u+nS'Nd0l_rk^7e>Lo.Hq=opl<GF+'9UiD32D?t>e^.1:7D,[=2,"@R9]i\"<$F)6uVA.jO%6Qu'KKaoXnh6LqH'KT:b^LBA-WSHI%8gk<X>.<^o8YXs&d%*R#ORHPQ;+[?e:We380@>"fnbafI7dtMpOhS,2ELPQ_H@S+1U4aXF%,gEM?c,-[t`%n'ID+cM>Z>Xa<*mbK9\Oa#gK0Hb]HBDj!2/^jNgbg,CE0Q4KA=OW$-pLm>^*93sYtCkl/rf__=?eH*WjR<0dK_j?%jFgXl\B1RC8.j)85"HnD/2KL9e/\];m'SseKHr"7iIR^q8g+sg:H9Sl1OAWY'+mYlTSOlSZUZ?68F;4XP*"cH8L5P<4ZZ5,lOh/M%#*9>;`-!-*,W8(C%A?]RSU-_S5%0rG"EGj>X!)ls!F<Xqh!fS5DJOk#;;LL,NE7<dOF)nNRWt8c0R>2UjiK8A15/o1PTpWL5k<%X%/F*lp.rTt/#$IX'Hc'L[j#D'TD7`s11F.BZ>>?L'D;dX_n+N\7#2O/T(8C1YE>tU2cakso9Uoo>*[e3H/e9=*b`9qjk?4.,cTmCP%QgRem6FFEaYZpLdG-"iYdDWsP2r+C`iIdJ+8H?Q0po-PdaP:8)FSIhuaqL))hQ!gCbb!7X*n]-=r!/7kTaKe>K.)3UV_g;XeE71V%h=+D$&eJ5g_S_QhUa!R9hlhjAQOPE:mA5V)S_GEMMQ2H?K%,--#&dgi;jdmZW$lpo4JL"]aA?jCD73AWMk5_B,r9j@XqT__.IZcN%T8MS'eL:Dc(B,l+OIdROQ)Lfu_1b&V:f"=bAA$6RQDKs;SZAKHZ=s%dkiKKgTTCqV-J,\NRU-->\Df,/f<,`mp.7p:;ud[H?U\$R%i:p7j,tUS'l@M\,'FG)=kp\%H%DO4XnM9(<6E#rB=_HsS0ajVX0,,J4IqL6g8GqmQ)bB1c4<'?E2jc$n`EYf:1?d*upPF!HFHiF%%'5URLSKVgjf+(V.0g']d6sgn7iF)d%]Un=&FhJLs^mmtT12(Dfi@KeL-^hcgAJY5R''Psn*nCd"&S4"k3:.;S>9/,qoXbDpQC?OQ%!tBGXp!og))M:^KDF^%$0$%4@3BB1tKX-I*p$OM(>JQ%Xq?mHlZ[rK=4V-ZGd'DJ>jM@.L3!!&2&oF/GQ03fmYAAu\LG6NU_LtDG%RA2]mE8\Orq^LjS/2J8(nZJIOD*o]-on)?XIL'dYd,(HVURN7ms$l&V=[c6q%P&=D1P;7^,_HbBg8pBYN,PF'Z>,ShCs'^Q9HpJO%C9ArI*V#`C<;CE"]Or])[j^6!F*;Ta,.<R`>@i-E9<Ki'A!V]%jN`Almi:lbniT`(7ffd,,#kqUZ+bR(W"MV-gc\EZ+HZ#d^#B7^%e-lbapn6rT+V#F$)SlU!ZoM0/e<WF7.h8U,$tnk4IDq;,%,4g+BTom\\-\%07muRnb.5o.G)2UthWkK2Vb?%@5S3-;L"K=ad>A`e%rLf-[9>&EeN?kZ*;"c/pSqrrEQ+,8jc2-cr&mLuA:QFa&(7O%kog+EDJ>5'lhYd?pDuP;km-iiG$&d^?DXm]*?3ZM'e5tih`P)]t%&RSu;?'2pb?U/5X-GFRs.mj1A*$s8"A-70^'Fr?C1J-"d>QR/U74_I4#2(VD9:q\'dM3CiJ\ak07qEdC:Bjrp&PNsR"PV'L.`HHY%0H\sTQ$ofgK7qk;8LHhE=V1u\M(Zfto<^@!$l^AH!9NU6Mj*AdG\-[8#"Lud=>T_dl[>BB#'L$YN.kimLg/"8';HZM4UiK(BODtA%X3?rbL'ORj&S@^Zj_4s;lN54mKtDKYMRp.<SCOIt:"j3G"goN]0]!?^7uL_`2P_NeL&<gF1>'2Klh?j==,c^Uf'"qPYLlBoQBqn5%5Jg5<(:1<N9YfSL59,LBgbNLe:HXc;!6?KP,K)En&f(d2.9APA66MDfU@CX/B9Z_Mnsre;TXA$WqB\`=8O`?mE&LeP>0+S0Mq55)%^I.:>:ePCcOP!9<Obi*P:qC@80>G-6TQDuH/GQ6FXV,ja6jBBc6SJk8$lE+F,1t_GCKn#UPd\R]!@CMb"AI0u?NWDf_r,4!f[65?%b_haF8]jGGpu90;hEV)hn^K#J$a1/B'1`P-b06;F&&='U/R3eaSML#IFA34S(J17#J1Hs@C<"=c$;Xc5n`#VI7Wa`a/.$Z?8ap[q%D*0Em`%pB.\5g=jnXS=1,4F[LoDgX+<2_cjS!iTYA+`;R.LFX:6tTJ)P$"&<:)k^E$t%kLB38,61G!/hQOS&!_Rku3'n"<`=7GWg%:#:aUjC4Xn!9AO0Fn/^&ijLr^]IW!tn_n1Z2)ltiLPM5]F!VP,G3+oMCN;/*@2T.mE<k%<:EZeG\a$>&@\?KHbq45dH55J0%S+=r%IK4+/+IUFcXZ7bl'N#E.JU@JJX_Gk^UIg8BaW7b90>'km>OH/FhE#h-XAfdMB24A9K&TLJi_=,)[3`KXU1fGceW9JdS,`p5(4*6f%2,dtOlMADRBucp$Gb9L0H^47brbeuBmP3WT!uC.<g_ir8PU"Sdi3/"1\kJgUg2^pD'Wm'%m^Z/3@6)^uS\Z[EYcjbpCuW/=AYS'h%][7=52s"d6%8;afrFqslm'?sKAO264K9HP$H8'Qm:l`eGFu9F<9Gs(3n,IY(RihY!jn6k0)tBC>'`6.-6i,dFU/=*[^0Q,6J,J8I%EIm'Ks%usJ;?$I4N"5%b2XGL3^SM25>NSeOlTI8Qhs*[<G%L4:p$q->Vk<3E?T<Bh\"cF-E"j+Iq23\EFr"-t(%.<+?f=UJ%SKiq%)(rNErP&@tg`ok2B_(1Lfch%Cg^su56OV<oVoiDlAp;UDQO>+t=?[2lZ6g#lk,hkI,'`Cj*4!e9S8adDNN:8#g!R#==f-X)ls#bn%&K%Jqch`GlB=OO)6WlQrX12Be/"VCD%-ENiB,p^]`oTWLZ>hPEA4rM&rQ^\Rb,=<NVl("$ZY8/)-V&5#lW8;UD8pZH$De]nfAE70%)0F]/T57er.FgRV1@:j%Q["fTO@e@>Up<Y0J/\tP14WL:d(R;l9G"3-cT4KZpZ)R!Dj_\9+Q'FMG9C`;kU-^#$efC_H!_<.d\.bE%MkJlZIoP><KMtJcEj-Vsh^DIT?3joZlltp6MN9>XiWkUT5UK&\0keJ,O^o-8Y^DnP<m0XeHCBOC)>*GNpWpj&.uBJl/!:68<5F=A%Bj`I,^ar"%Q33DoDLNiDKs@_<.+cI=YXY*@l6o!d`"r@0Yc%XlY?o($1\N$;WBQfW@]`&("7O_a(?5`(aQaGGO\"e'%W9'"J-V7M%KP]#[Z?lo5;"f:bXmGjo'!g]\P`tHZ>G,L(LjS!e"/TGZoX9%:Pu;1#qQ4r5aP^r1c6^T(O/J@Ucc78+3$gYs*sq*Pm,U&N=`(ct%UcsOH8Zm[0VC(!<i;qtV+0h9!4Mdt)K9BZ$HM%a?iXsWZ^gioH2.$W\EGASrYKsGc,^4+\MhF%<jN5[n\];A/Q1.5*QGu9`pdY2R%#STD#kU$P+nG-3K\K4<`lZeg15&E-ApK'!S+rDtJ'!sBT:N"flrN=oSTlcL^T2cM_0g<I_^u<DDm2-mhgUmP-[&kC27m!(hhi5[D%AX)`/$&cdE"X0*X.&C7J&OGDGBK&AXoqmbjGJMWsSJ_ssM+r5d/=H8bC<;1I5X,=?="ZUX>m)ZN''W0QUj2@i?aBFY#'VlEp-=+f%A2kVtNg4bZ1*ZjunY0ul'Za.Jp?4@ald2du%M*d<b$!<+_YY?[A>!"68Vo=m!^'iO<BD5T1\@E(GmFbV8-rpbD,@>Z>QrE7H??.F%4%jHeh=+9RaE&)DLM[<^[Y7/<iOB7m7N_@UL'_q?D>Lqa4UrhSAW"C1[^cllTIu0UN6.8haDr6>4WEfu]s!VAZSg4F?J=cc`;QO%%$bd,78V%fESje\`ZTjA3/#onJrk`!8>6`n36P]c'5c\oPNQp(,6W!k1-mfi@,:R#1/,u"2a_h:=kDE`#;]s+*E_R^t$J8uJJ>#O<%'kes]r_m?HcA@gj5#B_P\q2=oAdE1<!q>_(3`WuZE*<##KVf6u!>G\1&?E[l]F'q_nJ'_C3YtUr$CcRW@`4&)ZL4A0<>6GZIRH3H%X-"t_ScT(m#jH!R%G=ea)tB0/;i&:tHK;RJ?T/`.c]Z6a4C3WV\LV8hnLeqX%'GL%%`.QpdIMGIb3Ff#*I>t]]N$=XOPLr?Rq-``%eKro)EA*LAm^R=0G'Da),]3<UC]e1.iu-:Iok&7(h&XNNK^"-)jeh;&J\;Y3g`@C%UJR!=4W`F]A2;7.9*@j6:jeS4:mY8[T?'D)%?3hs6M`d4Yd_e)LJs:a%#<O;V3,`cF9I?s1mk<O^^H8P!IM#Ef]AccM&hJnhE4'aT-.>4O4d\6E%."s%R_&(1?HMg>-.0V04CrPk%5@:%S?9V\q"Pr03@'[pOH?:WVXp"(CTh*Bmi*2,RqBu1RRGpQk;Pq530[FJ'*!f_L^PF"`9*rJG7(Jr2WBT5r(%3C/"/f?Oa$.V2%+@&fllX6T,d5uqm:^C]Ajh@^SekJ6/CK#IF+g<#[S"fDaS1F\lU7K=QN+lK+ksL`7(SA8)`*&p-pnHVhZlSMhCF*Fo/!612&slbp%iru2%6rVP.*fqPO;%DeN!D2I7!HC/VK:r[8*@8A[fJ*df-a.R?>=<J7oj5!!KF:uM"%;T%*+nin^rt,D?j"X'*E/^,9(t6";\^4D%d>o&KksW9m"<Rq:TYOupY>7pa-)@QK0<^I3bV>oZ0*)Lq'^KFt=;]0a7\]?ts'1QBn`[%tp)Wol,n@@O@inKITnEe^CoXN6b6G5!%Km)Pkk(\Mdab&\4br(U1%8fX@DLcm*&fAE-ih8/ULisaS+/3J8$(`A*`$jKM]Gc0RG-Z(7M!aDNO2/G0]OU8FB!eM*@HTF0UR!Qa%:'o`l[2)sNSL7<"S+L[nBS?M28@G,X8]Gs^VoBm)#=eHS0B5,Jo).R?Apah4/G^<VkoG_l5NBL<BUiB9#+adU:+U+5gQu;aDbPS/%RO-D3&-0$)'&i5c\C[TcfJs'NfHUA)-J+D5U`p3=K4,"AMH8(37e/P2?BkdY&`M=o[2$?/VI5Jj.LHm1gWIT<FNNr2A;q>BMItV9%VC</q80%uQ*ngs97pr>LF!?=RNV$]?Kpug&bWf[43@T"PSl6W>iMsI0Sj\eL^e8+lI.64J"X2V\F-L3=:7@9UX9j]kqM+d*_q8C,%oBTq'64\C4-R'2nYa,G9c>h=@K7<k_oX9/L2^Bau,s+/t/@F;0UAaPMK(Dk&.OuPM0a(dC^SOXqOs.YDMWb/%<KQ^j?mI/#3EuSY%*&N$QB%kZ_DsETG$rl:LgL'u:oYK;@WC3I+ntqX>8Q)&n^V:]`mHR'hM&R3j+NTbTii_Dq#rCE/a!c!\Oct_R0HQdegR]Z";R%#:%BSq=:2=.W%?F#'l:iaBe'G["VcqG;'jqds"0^OV"AZ0VBg.CE0Q,S"\q%gf_2>4c*pfYsd&i!@L+TrChQ!#8b*G>G%YAtD!5rU+2%Tlu)8,3NV0KEt$-&makg<CCFS#[Po*KXJ`)"Mb75O`/*W1*mBH@-<4.9%Z;3S7\G@;-6Sjjh@i:SWZ(?:Ra`d*]SfqSsI2BadZZu%AH_A4YC&iaF?t8qS%t)Tc;V#5nUmcQ5B&gRSoe3Mh^AepbV?T]2dsDR7I@TA]$b,FX8ErCIhO3B+$C@D&29_I:J/0KUMR,Pi'-Ho%m24CIU-"C$?GH7;=72D/K`kROi'3qM8K>N.p#p!mq/8T!H#/?T:!tIE:J]&-K'4KS#,4[2#!mh0WT5fGO^dgCDW1o[kr`[<(gV['%qN-lOEKGZ"SKM',$)&N"6;ePrEtIW#j;ji)km/"1CP6CP60j69M=`a:SI0=r\MP[3%6+GK97b+p\6gYg?m[klC%_Z38QsbO.R3Vd%XpD1P2W3b,bd+c96j!pmi$"qS85A<qAAC\Dnrs9e\I/,<N!@ce%7h8@S2MOrYkuf>8E/:62Ed4gKC725L$"H2/j7X?e-QBpL\s>!%;GE_/Vaj@"e&V)OiYg!)f[K1X9W7jT8<Pq5@,dK#TBo*kUVn7'RN4t)^t3*engthhD0dII9q>fb3YXX4B1IhGkPOU:(";m0OfB47%T,jmljfcphFNB-0c]7(?-4JRiC<!)&4&T``%j%5]WHPL,4-F')Nk&WmQI@)SRPs-]l&d6]ThCFl7)%!-`%954FsPbP#A-J@q'Lj_%8<P0jc]7)?h@J;%A-VA+,DG+GCNcKl$IWKU&fTZh7Nr0sc&EuW/:DC],8@jbNT@-=qj89n*mVZ$,K["R;^4"IE-l>qRd?pVUJ+Q1%#q>=A,:uCtH.=YsoSJ\UA&=<D.9;u%R#kfaUdLjEgpZ?>>tU(*S@;^3Ub6.D9;I*r,9cs@l4.&Rr0i")ddJGgP*#J3q2u5Al9@+4%dR1A$*f@gY?$>!OJps=4=5rFUAB.u<9q`TKQlWX_;coY42qC70+Zlk%Eqe7,QfAA56;DU^9$8A8Y39UmkBZV>Au3ML.bl1)Y!g/i%1c=]pk^'kj\/]KKVT'q7,VuTJEqbuA6]FG"1?0uh.lc\14_/-__t)g<+P&8#Y-$Zl*6NA)?JO7#>a#s_Ln_@SN*C_`+-7?6nBCsC%=(5DNlIHE$ECJ8:-SoX__Ik7k>;P;oEUS_dWM.M-OVq6o^<;JI.PIrIrQX[(YGJnAMuG=B9?/3p95/D-h=PE$=(]FR$)r]]\FOCd%B>mU4ft.Rb]9F%3:rJG1GJH7&o=^A%GL7Y@Nh9ZNM/-l>Klnha=6*1kU;nN*DU"lZ4sd@R0M.*O]%e/PE=YLQHgd3/].=<$/.0!?%$G.hr].=<,h:Q:9fO[q4APorpMaAOb&k6]k_VhZEC'+PCkTo=op5\fQ*1;c5S^+O89Uk0R;TPp.odmUe:6nLWI59@K6#mX3No>X?%&(,%Jhc341EC'N3'4m)sOYjUe6&;jc'gXh7)dEnZ&GD[C=i5s]Hu)-4-t!MCZI4:`='G-[`Gbi(oY"i`KE,%FYNEWf-Z2D1\2D>i%(7517@!Z?k9XQKA;Lo"%/dg;G"$ql/cP8X%ioXG#S/f0!!Y;J#RQb.$hR^K'h`aJ#=fCFSA!dM-j]/:@5+O&p3jlIWT^sZ'jdC]7%Zlrk9J/D)=J1"#Pb:Lo6D7QpkfBXN8TG92EiqC/P-_!pqh(g9iJEUe"6'p>fXQ1o<W=dY4_+pA5-$.8^'"=$Sik>Y27^3APaT>8*%Kr7T[35"=rFSkb(H`r)D(Yi**<5d21LeSn!U+P\uF:IUjVk09I.oldSi!C?@&<@9;'4eHqqa]s05mW:LIL<Meg+oRBBQHo=XSYF4%0Dt4A!Qe2:P[Um*:ct0#[\=ril0/L"9BtQBXl8L?mSL_mh=1Mf)k]6^Lo>?TI/Q(=*o&4k31Vl6'e$Lk'=(t[X8&iETh/hq>Rlr&%!8n\&pZf+^T9-\kQG2M!-5/KJH^1<p7Y*CD9s[V=o)Q_,^_8#!UWF6NVU#i?A"%9BNkt(6noa)R*s<6=0tVeAQC*##XtSr]KZt$&%QIO-sN"\'1("%$@+S'GA[a@Io"07iWJt2\GT"**;8I1=.N[aKN,pCdPhHob._'F\Md>#<+P07)c\L18':dRoU+-39M0RX^':1G;_%a[/Pe<XU9Q)aQq\b+72X2.f&eh[n"q=Hc5ZaVWn#6^4uPE\GS@0i+Q'itc&m7ko\>Atm4Ph/q[#;l%Oa[d[tkJh'D@M^E"!G&Z:S%XGrW=pki0Cn5`\3Qti4<.92I+$u>7+);Dgo$:jUok56(PD,6=MSR.4Q,1.(-8uXq$eK/pK5=>#M7b4*HJ0]&f(YqBL9U+"c`gV/E%KQY8d+q@1:lQbcFR:a9oOoea1(7ZW(8#ph_)%21PWgJ1!GRFrN3I*Dq%lsmYb(Qpf0f2f!f3/AQF'<l^'H9Hfi&F:uPT,bGd\.61%UQWhGSFMf;JSL>Z*B9Zjc02u^/_9!l-`en3j&_j$\'M"REun`s",Te09RoDtd:fbr#\:ZD#DKF-P]mub5>5h7%`K;@0ZmWiDsXU]%^h',3Y2ggbrB$lbnSCsoY]t-Dd)4SC/lW,Y5)L223HV,-_(:p$-P3XI318I]_6%#:P_crQd2OS[f"PbD9p0kNO^D'J<3h;`,NTM6%PDP'$SbtI<g;*Z>_4(PRZ6>O#J:rC!-GU6Dkc$A9PsIR2#dZN@ra&:NJOgQE&&b@G&td3$\VMZ1P.@kl+8H(DPP/.,r1Z0^NN5:V%s$^modX]W;:j:$"eo`"<CPr(q%SE<dg?,P@3OH=[*o,U^\$<?q[<Ed?;F*6=">9jH+GnUc@LGa$RM%AWq$,<LETX)m&jkWn[VQ8t%?+#XR+4"hpi-IY[abi7O`$5;J$4-?qOr/_6,n,_A6&@BA\M4b[WEt?cYn*C0+U=VEA5.at>aQXW.cfMW+ttTBU2$F4>gpFoB`W0n%U0-RM<s[m&a!-hRgDYf0;HCHW4*?d:PBcmO^t3r"q@c9_U2%ZGaVd8B\"Q/6UR/3WFdbuUdF9:M&po+g9sa.hQ('_=^Ot;;lg@4-%FPV*-1]s+R^^!nWZj:U!!bJCG+k^UnY,[?>3^s2X.])J\[t3<M:pkl&)?;)B]Ok.Wk*JbNgB/THEe[*+6j>@9G>3I""-Jo1phbC(%ka4lT-DP,"Nu@]"B_@3VT^;TVnJNi4q)9%;B,bDGV%uP"hs8'P[1Ott8%^38c5>lA4Ia['aj$j1$M;b).f#U@>=":*Qtd&UG^^15%ar3t'KbM<2"hQ%,A#8/kLsL$"J=e%lH?Q9m;]N>$D'@rkm#DTomhf0HPk<W"g5Cq=QX$[N'b@ec?].0>BS8Vun_^*p++.;/4H)C.%H%QGT_.%79(de<uND<r"iH1rIn`BYQnc]CC1kEl27^>FPChD-c8C\EEZXT,O(2k.*CQ];dLaND6!&6bZH&F@L[(HPQ\f1YY$[=)X%\?*oa3KZ3)cs-d$[a`grp9h>R0kU*)E,2XoF1P[r]+bgCX7k#k8*59ukNU5&OSeoNBPkbf>]B67T4b*&#-fNE%g@\HaD7^lT.=k\%Sfbb;0JOX>QGGm[;+BGsQpcfhL!FaMOh_*IF?\<&\U^SS`i_Sc-A_(hY[jK$[$+c3O;\E/N.*G\7OgaDo:g,\oP5GYi1SbSPDb[-%n7`1k?/#s_n5jE7_0iV7roj-%0``ZMXtUN_kQ^/b9a'1:j?)9+o5Rm;CM[cfokLB\&E=U[".4@C93EQKciuq,!tSEJLi%p($*^^*%["uG5=Oh2ScJW[7Nkon%b(t?B@4OEY>;W:KP,+P0m=?h4gp5g0?jNj+1j,i[FjgYQ]njMB:3PR(juQPP3Ghs;7^aW8D<%Wkj)b?X%X7qN2'(kTeV<LHmi3qbfpU+OeP0F$P4#cO#&T_[_Bj8'H;`C7t=ND@BCh*cgCMncI]@/)blssBhh__M$1eoE;\9bo',LNj@9J9o]%XXhEh;(e;GDbs#:VUlD:=uqEqC$JdlkpN56iTH)"h&^ad]%V%p[P)Jmr=4#"n!g0hIAY-MLF`+U%@hO#+]ukUm[:7K1QnJoDptNt%JK,mcp36<6FA3>/TF3m`_U:k)f7BV8(]0]/?I;Q:>XL8XnO<=cN?lT%,;_Y9(Tc]t1!:,eM=87\jR,!m2uep1GMFX)kfZq'o;Fs<%B^f3?j`t>d).%d8;^17("kTY?AIo4d.s02OYX_'4&4h(QP@HTug_'B/?*J$q&q:E2J-pUg=&=G].bIX2!>qnaHBZmDAjs_5X=8g5%ZEU""C[s'rJ)(_-SZ]TE5BGEekn[bf@@r=ml2#6E3%c;]KGc/K)NHejZHF/\i@]Au3D'ktS3aGA_YqH,mf6CQ_\j,VOQTFNeD`A<%*?6hmUY&?(WNs>PCYNOW^uV2rP)*->Jo:\o+E\\M9'F`O7o2<,CatNg?&DN*)3?)N'P"T^XgL==;IjVBrc#/)!FcLRH6]EnJ6B'C%I<bkscN:D[/ar+9A$Vb@Jp".gZX?^tr%O#VoEptoP;8I..cT'44J^9'VB^[-r]N`U*D(IP`\DU'1JhmX*$s+Dopjuikd:Hgi>].n%BBup/cdLNC`-Z$kYb54'BD]sDc->MGjgRZ<pipk.%*eeNb6Lf:XM_oOK``9BfknsFAk=rWLMotLci8<=F+*cNdVe7uIs6?bEr+V6%nbLl":Og)BHi*i6r^,G/j`1=qmgiLO2f6L]o>/u-q:Oj#prE!T5CY_@Hht!?6[^%jkL98&l-3[UEH$<rc_$9%hbGp=h)?,^Vrs"D%cl,j,>?%FDN%?I":.!=1N]fe;-MTAi%P@Z/*VFhmr#6/=5M.#/5NR%I:piH@SI^,U7,Bs&XBB/sB:X,0;q?YTdZ;:c+6I2c/i'5D%"YG9:WA-E9=\?^<Co_2SN;UI-\VOK;2Eu)&@bsd*B96AjCoJE=8B+6NOjr8G^ouW^:)&],Hi'C488\6%^NktC/Q8l:[q&:Qg66b.%b2jMDc7ll];cO=T5Pn+&VtMBt0WsKGddjTh:DCq80!ue\PcMDh`'6(;;cIWn0%sTFo15PeQJ*m!3Zmd?IgETCD:Pn;67lpW=k>/2%s#fWaG;"0Oh[;XCM7T>meQH,0UB[[-?8Z@l&`m`h46(E?nM3d]N<*nZ._mn@0'O5fBW>g=Pc3<9a/2O.J4G!J3GV"\3qC&^;*%g#%>GW(ch6):>U=ME.HJ#-U0LnPP?aLo@$LBIA5bWC!eb;r?=hVdG;lOMt^dRVFfUA&cH0DMc24o(F5M@k*1E]9NQe$6/D3)fXUVB;N%>s6H$>2uWohY;;+VW<^)ct=,37qmmL$F<&-jrjiG">0$B5HS=&OQ8&\WL,i(cH6OoMd\0_LW)1(mk<t(V1F=+'XQq#$Rm%sWimL*%lG:/(`T/.5p"#edDt^?`Kjsq<_i)4o[9C,m>h@X%Y7t+k7:o"\Jn])a>\T%3d?%Fp_A,B*D`_\[^Vth#;rDWH%*X1]7GDr%E]5Vc%al,AmF,ogYgKTndGh8cjT[W!a#6lKQa)K4e1K_pj"29;=R`"*h3tGk.l>@MFQN4jPX1p&!%+G2t(Mr4N#BRr$&6h]^e?79`QTiND%gN@]LpX$0;MXi/r9Nhr$!66-&PNW/R%/M!CH;bJL\*n7S(WPIfJ`iZ.#U:8nh@d:B$sb,c%iYZr)0ghB5>h&5bm1QRJm:At8FRIH%gNr&'+9A2;F@7&A*;SLn,@eh*f\I$W!(WEXc74G=_Bt&hMZAd(plE9KkY):c!7_kYZ/oCC]OG9g0X[ha77i^r"u'fU]P0f8I!:/m%^[G8X.)X&SeE#V2_=q?J(Q#dsO<qb=_"IS/_0="R^YRAs1_t0-h;St&'q+L\Vo<Qb%_b%cq/l/oeI;k>h'8;"Oh,2'T.?qU]PRDo%e^)DVDSOmsQHpaX>"n3\?Fbh.2pAem0_7(77C5LZ>0cDt+e2633b=.0bb3u_5m&?<G#IHtb'X7>;\4R!3J_>-=sGElT5q%IVKFcB%]#:mHDpQ5)!b5Uqpj*:rl6?"%gs391Y[tZ,?HH'u_JbniAd?a*hY'N,'erCmeldVFbT6n.Q9`gVj707\E3$f(M>dV3J/BfTl(#R[%!uS(Hf(*g[8q!b5@i#^Bj24d89%4niS$B)ud:@:`pgHDp^+>;s@?!b7>M3G[5a<?+#3.NFXqG!%G\AKJOU?"dg^aL0Q3sn,qbrQd%A-PNuIUaGSHV=j""R#%t@"KWC3E+jT1sP?<iqB)"W!TS,<e[OX%9-VCKL0ZoMF8Q%rKYH%!!]9pW9mJmcbWWq0R*W%!W-GI?/a2R%Fn`OqOEr'PdRbE,HjqlCnF@jjYZ+^`028<JIM$kD/#Qe/'UNFgDsT6$SAbj!h-pEB1\I\U_7_ncI^.g,=4ao`S9D3So>h+tX4'fb%fPl+DB6EJ>40-iUlEmlYmAs&EX4&&h';c&.]Gb6h\e*OEkhI$fC;[mQ[,UuG1d+,Q),G=]km<_*Zf^#D1R5nlLZN5qi.Ln;r.Kg&%gp.V(L*m.Y1+($k$2?P[e;E_lEk\M"q!&8`%6U)Ii4:J!3ViYTnBUOqe.Uokl+<FUiFuqLg'O306$$[`H4mB'B6\_r_\;+s-(c:(%I#$_Z10>US)$s;@2=1fVT8nR._IR2dJ_BrXl!lRbNDd1`H9\aV2)o:UBNZ1nMjj<P_!s0ndZf`%Zo?s9_jXB7#EA`$i,kSG&+2S-%S/%@>Glli(;1/Tf",$8!#&k3%b0^@9AfLi`'jrH)@c[6a!jg9ed`2KZmt?jpAHG;1=/C[W/!4c(au(7Mq;34mdI%sU1*^O<:7\C/%/1he-7EaV<DNL!Cf=V_Wh.='Ao-Z?+'muo)n.^JiY=oH$p?\^O4$d7%#j_\FSKP-M"EoC4V@*G;?+Ve-!;#@'qqZKUEpOfg@/=(D%X21PrJM(P6(4,6B?4^51fs:teXtG1"0S"Y]CHhEB1:YYr#*oIaHCq;]oI6U;E8ZnsCsi;%31@)&2]R)0%QlH-%GEW.E6Y7VXBu_(%9!3])E_#M+$<DA'#I\qmc+PqV,7N!c5B,4S68l]mgVK(ZnLO?kTn?<qrb3O7-SUtAXl,a,n?gWZ5<eF%JXn3n'*WQR^ePTrM#nVL%$Fo6iNnKLI#&)0V;<M%AQU%t)4(s:`9bN<BP[je`Y$Nkr[Dp;<gH32+NMDc&Hb*;nDjH#;Qn^P9LD?L2C!Du.@SZ+@6W)DD\K$I3%Ak9(^l(:9VkRJKRb#M$K+F8_K`hAu9TOJm>E28`cGCeQW0\$+Yh3FYEKWCe6(Ho-bLWoN-8jP'HcS7>LY.L#)]"cc\'FZS@Ana:(%W%4N.`(A^u>JNTJ+;l^@2kA]?co\')E.$2iQ[2>>i*LhLYr$E@F*1WicJIRHlf60\:*1\h,s]"SWb`cUqA%ks=K&@PYljIR58.[,%[Y.B[@-/0q*@0/\qR&[A3,'cqIN?'&Oh,>27c2"+dic,KLhZ&sf#g>8?p0VCpGGL2HL%e>A/i/_%p/5KX`Qq.5R[g0SO-m9PkTA5%N]iR6#)/k;)L*AQ'$>\k('k9H`ELYkQOcR:_Wl`8+gp[*YJFl&KrK"PIE+NraOjUe2=!B$,fVeOId<*Ef:m2\%TXn7?7aG45V*C9%$K/d;n/jo#R$)P-`_k[L"^dY\0I*HFkpD(0@3!gBlX65XZpDi_nPh<PFpD`"h=>\si:OV!`dGQP^g_S;(U,R$4t@PPK1WW;%O1L^%h/s+l*u+mUO31%5@3n"QMlRdV^<[SZ=GBO>fabZM$^1<#8_:I$:mOs%:^\LW]pI;Y_IVW4/]3LI4$11&`n"jGqi4#[&XXD!`B%*+%XG>USFm?*HDNQICBc1@L52@GcW3?"8TkKO!"^b)d4b\$?@b7?FX6gP0YBrKbb1F+3WGG]%8N+3Cs6YD:92QqqY6hN+J:n<80@@bT%Kj))L4/`g^HK52Q=@'JGb2)l1L:UD^0<3rcHOkAjJ,rOIlV*fmUsIH+Qm._sd3=2IMbYoXSY!3@3<X?4?M_6[U(B:o-.+;DB"8bO%:r!(<ZLf"3MVBn8I2d;"4hTs#q`s;d4>(\T.#'%mQZ%8:-Q:t^6#qm8Tqm?M"'1_f6(k6LZ&??"9Qb[HB^cu2P#7`p3Qm7hA_CJQ%)aJh7S%3^t",20'O>bA7(TjNn#/:\8f"[MX.X24+GRD2rbGaC&@&!3o+@rT<*JKd`P=E!uaO1H:%`\<9#b-_T?2&Jt=T3IV@s$%j%%j!J_eGk@uaQX;HV=%B;IG\-Q6gQg7<c&"ub0BETYHeBkg)95$^q+uCDm4tm]<T-1G-FC83?"o-aBug72t_mo!$/<(.nk@74PeSX%XK$ap6&ZG?rTJ6=pO:%ud_E)*el67P@!cQj1Yf"#OJ\IV("d,(+\>=Ao[XtGH5^EjOE&hSX%\VQ(Wl@bAaAm9!BOUO`EGI89t0dB%X.&Is&rtY[>uBG:cZW0(r<N9+YA:o3Nf*L9e8_a\Y(13o%->3A@,g<O7h(#K0a`!CFUgYuP=;kf(E2o,A,T9)Vq>:%-oP\SoI[kk%I79G"]CE$f#fG!3@@bqt!<bK31VKF]*M5dtIX:%fRm)chW?,:\J3`+ilUh2TYmU0..2Z&(W4lp#5_o]l::Xf6=.C$/Ej).i@h^2n%^?*3t&R1,p!uZkh3c\78JJOW\;@<`pm!1?-1n`3t%K_58hL=]!$i,+'aiG3QT51AiP5NrJ%!`npa0\#lQr)!6kpBO0l^+oilGM/A%0g@l,fJ9[M#/l%(:fsIo,%\)K:s1Q78[Vat6+7L2#qEBO9kUX,HmZDk[\5tT$f5`"i&!.TUT_:H\L`%3'EhG[$#8I/NPa6ilM;M9%C%(b\JVSWp**!+*g0,_TA@c(d:^6A2D2u$AIPo;!5O>=CIgOl<(l8-dntNR9<%`>5136aS%Oa->h#ag(BAXlfX;0KQ\nrm#W$>n3%lInT#T=W_(CBN-D8_qe9*,C?.C6hqM\9^M[V_1mc=ujIYKqcK(P7(EoC6,W\`n&7UP[q=g`sAMr&sMGMJ.5otb'I7Q7d8FP3>V<!%fXQbh?)@nh0(8eL/>@*@g9<,VcOg[/0I#%:<DSa]$o/E-3=)^iHbi%OP1-Ml1H-kK_4%5kX1oaqC/b/"Xjg*]i6mkt<Z!Bs2!36\%[t6PG[*F^_;uc+W?WYil2cETMpH:2)"LT['W(O=*@4iB"C[R<r&ZRLZVFeQ'/0rmmNWGeiFVg=P"N2Lsid6?TOpbBSTl?(88o^\P%W9.h8""F$RPR@X3Ic$fUdL[BQ[+p/>'#mW<VkJ9[`7dUe9i50U:=Jr6n'YtfW`PLkC2Ac=`M-I3\^NqM\Tr#h<_@Jo*0J^'%s9_H%EaX\;&D.bY7Gr3FP>-YWEZPU8FrLc`+or%mp03SX=.u"&"6(r,H5gXDGK0heqhWJ%L?`X$p\Ou_&6QmKOH$nPeu<SFRe;mlB>8Oa%3bmIL#[CTI7$t7\N?J?-TFq,U'H!]hk"t)$7Ij."OI1e=-eSWlR2JVR>?`';XT3JPBEVM*P`Irl@H_SB"\>OfH;-qBqmPQK5VUR?%&.E>A"3^t39+/R,>-m[h8mKBi6e4's_T"[;"3h#*!u.l4Dcr#-3`VfPII.XT-%uUa^(Sh%V<J*kA")3BZ567CLjCeE@*;4Yjo_I#%i'+,`(6h(J#DU.FZOQ:V@NFq_L5(rHC?S-#.\ke&)c22[5#:kX^knWKA2hnaadDUS<nsLgeJIRqUVUSDrph2S@I:8h^NSQCSMsXP%%+X5hg3/_]q]Da!+/\.[T9c:+JkDcMn6dLX)+Xp7PGXDKTEQ-rkC]^nldO6G:\[rUPj9FMoi^pNCE4Z=+Le%@JiBC9?'L=*aBjPG%)2@S]mUcE@_C=5Cmut`lX.&0#NA?jMjdN2`VIUG>a1B^%K=WH/:sjW9(>Yc9XIK.YNh0'5b45[V@0d\57#Cr<XTi\r[+3(;=+i3!%oEJ</kK9.hcP*0#7Ur0^;!XigWb#@\!(<^rs4,M1\!<0]"f7uj]''S/$CB[umD'hGjfW:7AMC(FaHbH5N1cSD%K:t1&p=._?#\[g%h4.o\,%`U=mq1,OgDX,ZmR]"d$5GN%gCq^7ijX\30?=\3`OWD+A#<eO5dc3F:C3-u+<:U/5FY7!"=,3gY<d0iH$H&ae6Gh5SMnq4%8^+J/gSlHplcG4sQ`@)K+*D*_T=%:kVZJSR>TqUqjsYr#3gkEX9H:#sOG8Q]B`Y6&$41Khd_\8]j>jA1CV&gCm(mNJE8Qt*-F/2i%JTU&4?=i][2ANqu-'$*f_Wf"g,b-Bf2TVGGjN<0Q<.!'@'VWFn$IEXk#@`99Y?\2$/`=">I#tU0f0Q^#+_+<jbkn-!#Wc/C!iXfS%^qsH46mld9AMdCK!(B):B$hR`>LM\p3*'!E3^X6/3#CbFG=A-2!chRjfH2VY2N[-Mj@FdhPE_%bNnT59j!Ps>*\`@fVVo>\8CW#Q%Q[oM::;Juq[FH0ZXsb$@_%=p!q8tqF9B)`KM",#f\aDLXb;EJ'Ql#1C^$RL&,X"3K=Z)*JqLk9_<:b*>8H'Y6mO6>F<)ogU!c8Bl%;8R55`;<i%8dLiG(4@50BTcrQ&uE]/WWQio:[*DFaM^]l7G8!E@e>,RR1$/N+VVla^oeu`M$r$gR&bG8:3[EUbe,YODA`HqMZt"t%0[6KO",:"OIN3Ze>.;4$Qoqq[Bk&;!MR7l8D1[Ynj>L:*m9on^*OsA$FkSK_C&'-T++KO/Y(`e.`epr!j6GWGb0K6!A`nGKgC(Xr%WtS\U$;XQe"3OdTJNFKP:r0(Q\)NDhf7:8[3nP'ga!sT\URWlNPfe%OHO3Kd.#t/*gCPSpW,tg5<4QKcebo8U$MCMQ'SpoEn_._+%p:qRt[+HM%f8[4JLQ;4a][BYrprN^2%qm\td%_0[nK%bVq/0lt"(^0J-*DuS_mAXnO]*(3+f36aZu3lNl_T<jXehNe*eAhUM9_H9%L,`cM2CB6DlEUnF$fC1"f0;UDjmu:.9@\qR5N"WRpNV(YEj.)fR-GsI^ci?1hSWHe6KV)SBgG.YXdXs71o)C,#$hB)Y(mK8UCi:=%^u_Ft<ef*6!sFCT2Pg6t,$65C2=":C4']&?P8QhPCOaA61di3Bn.:0N5jTY)6IduEcI"7,TVgYi<"=A'A"dGF+oK([?7Un<I-QW_%3Fpm4nlFW<5P2],J,%dKc*sSu=4_B6'_-(eS'gkS++F$P5P"sVrpK(JK)W]TZ!>kh=$N;UnE"$J%qS)bh>D;BqEpalT_[03)AtK]%XP:[m%Ak\)1`bO,SjY<lYna>\K-W7oOO:XlU'?mg0I&r8fR<fe@<`>-kfsJO."fq\m>-1&"-FEp@=Z,R[\[eq-KTR>@!1@(K+2=6%i&8@$A[dhB]n]6B0[';4&il4,m2Qt#5eaO'V8;E5)bj,F!dh'6kFVTZ@[S5aUG(DO=H8\AY0]m^HNG?B7Z,[sbt%@P5m+Iur!Q]o%_V!uhGso9d`h!J3]?pAqYk(fH25b/@_/2['!EaR@nBCr&QB6K,C6u/Ser2\L^I_.X_0Tg/#1pd@\Ph3k#OD\6i,59kf=IQ^i57b0%#_92:D%k=lN`&<`O)W)1&qV,O;8F(L5[!_pLL@5T_[c2)_hq)m(n3CiffJJMj7WkjRqV,Q<`>?2fWTY1O#@Y3$*5]ukQF`s.9nXL%Tu$S7!`ih>+?@CEMU&6-'#]X#H+X03]G2FS`jQf(<tg<pHQ^YmjNRZ/nN8jh6g%c!86<-8XNj(],$"/L>MF%$Xk+;70Se"hG<:u=%W*)C(5l['_[WRo31pd8GP596Nf#__$9XDmLJuf%IkQsY',H]')#$sql.QDt7]>6n#C35K"VMY(uU!Er'iD8<hi3%;mm1`7eUe,=]%$VWC84Oq/[>>s/<deZ3&9L(%CSS)RYrZO)"/+p//Q9>_1FKB"=h9X%CX=7P9<nFXk,]]^^;c/[[Hj>n,6u1/r(:\gie(AF@FA;Y^%K*+NRqSgf3.%5/disZ&=B-Cu%]!cH]?*?nJn@<04VC2`#TKEncUJ=ennnpDpON*euobqjTJUe\A$!5'N7)hD*a_?@V*0K\R"%A1e%9H9N;KTKtaLT9%.5TX6RL][77F09p,;9EO@`o.(LRWG'8hmP/ElZ9B,cTM=?Tc9#-9Z[g:Vbs<#e75J?aTS`BEGX5-LV&HN<)FbD%WKWPR>^Y7E3NE;*F0W5!:emg&Pb#2+TL4R"?5ntQ:f"GbHPJ5YC'r-O!a7M`#)Y`A-JPrq(L)6Wm_EHK%WG6e69=msbg^;DaGpcU%8$F_0]!F(1/<_u*U1gdE8@9;U$j=k]j98Gq_Pkle,Qpus;t+JcgO^I'V)7o""*jstJUl.DD,"4+]qR63h%K#^.T!3Si]Yr%j^iS*%/oSPg'+9F!V3kB3O)_4FUcXAlGfMN#/^0#'63/SE.N%Ra/%pl!NS,2*2p13_#\JC%^MQ5%)JI88g?.[!ht>]R14tcL4W*sE5doP'%Bh%Jhoe<*H<8blfI^4CV\u`'`jW4-_(ZNW%A1Gn)*]=AFJ`;"C>Ym[lJ\08>Nm\%1:IEQ0U9D[Z^n/j`7K\B(MEY&,jAabl/b^*!%%-4UCZBHT=k=e:[emO/OO."6'&EcRRWD)YmCZ@V5-G_\h>..:I;A^g@_jpj$+<M4b*QaM-*&L9H@UOi\A1.WcL\?J+1-,/\qCjrT%"KcK1Apktp2?@F;Xp@:ZN+8MUOnG7\4KK$\1U<FaJ?u0u=H4)iLYNB6gm(BKEbgo)-RVoZUQ0Tij^^V(%AJq6!i*.;%iXMY!*GUX%?Y%guPtcZ,UJpt*iik*m:#H^C&U_h\AB?<*!<8P!.\,?CGB[/;VM$>B-PDF/?Qm;b=T6gEa)<,la[5ld.01XBmm2AkJ\3ZJ#;K^f%E+^bPcH0!QVugbfWXmM*NU`)Aj.A<4FP_\u6d;=*FXU.7>+]><NLK6`8+QH/2Q6"HOH28:VFRZMj]3hjm_!pkC$1!h\.S%W0-](7%22OBRQ`%LY&1ibZhkOF3,\n8bNk<elO(>\=A0a>!IVhE,4TI"p(nJ/h5[\^KR*t'5j2`D3K[Cj1h9/pJdK@NP.[J".$jYHq7h<cN%n><Kr#uWR!N#*g*,lo!0%!B$.1&3cfZN@)$GtHKoQGHG5"EZ76_*qNQP^krh#YYm,PW:#jJlS6nNMqfaZ@e>cGSo"_R*UlaEgHsi%s.\]\9M*q'EaDSS!4G3EGZEk+KZHXcg&mDLJ@N6KKfB=i?4b1O2U$kfXn_8*4f3%#Tu\E#5UVA2_,*4agktR."hRlsD?54A&5TF5%0GlqN#Ym"!2A@uH0%[b@!L%aVILbW41mT*h.mJ`\+qE:^OP#DOd+i?AN[0_K1]s<E4>c]'1O9CEUp2%51bXiJii)a,pD#!BWiKip%+jX?MT[huB\cbL=,l*ni1$]sBG2O\N09)N9$T?BPPeg@($Oh)%U8(4&pClaiC!22b.be<J8$*A#f^168L?KqCWY+rlJd')]OX+UW%X.Mm+(*m(@iW6p]kVEQ!Q--9f2\frmo&>f:AmNYT'RH!"O?AF.d'=<,!**Je7Uur=fiW)k@&7N:O!Wa:&T[u^C0:5?F9W7F7imVr%Hg$iJ`"r&V%m6&5AE5oKIVX2u(u;$=FTa8r=H5\c7/pqYO0MLoi(Y?/g4C<;"1b.VrturEJr4Xn'G-ZA9t[gjKV)=nD.4[dK]^J:%=hSah9<^Nn$Y0HJ,c&]ST_Y39E'YfhUL4/1pCP6Or#N:s(1nnV@S8^L?Sgk<Y1\pMCfh*HrG2mampgVE"Je>;Wq<qrpJ6NnQ?'-<%rXSRCa:c)fBbE;$p`rmmA0PecW5:A\L4J1_8ZqRpKqN:0HAMd':u)c#H%\^,,.Cg.'W[pX@qOa^gjk25C$5VnaW2jC1*i#MX'nAf%"UBn*ef/Un_ajr*>)Q'7$457>jr?44P[R)fEl]N*e[)#.J9=JC<\q]H,*72I_4/ek<Gh4J'ZW[:*$>NS`%?*,,RkY]<D]h:i9)qB%^F^JC6Ue4iOi+(8a8E[\/XIFiqipieB/Q]P'&oKGY<g*M.$9`a:hC$En0!d1fjq;>'A1L]6_$A/!!"BW5fuq.S45Ypa+3krq.g3<%`'P_A\IjrJ(4ZiDLoC6XOG*[Z7BcQ0e\ESkTggrW(PRp(lac$(g_([I1,jiQCZ_//3@K6OM@PTfT.>lVpMc^Y"gS1$&MJumL^44m%P(C91i$9YpF'a*\,l0L&,)\;'7Z"7bQ\.<.;*(b$?l`@aU4!Y="\6*S+^2[FoML.m"kJ\jhq5f98F_I%f@Z?K"Eq#H]E_1=r^o5#%8#d\OVCiYp;,NJ`oiS0p2,oYeM))F`HtoJ6:D?>BeteBQ6k+&V!OLD5(,\3r4,jU.l;'s3e37i6*<h3`0X3U"(3U/;KMVrkM)&je%!Y=F<*,&n@A.SiS3S=&JnJ!Nh9Lta5HI"pZD6PXLjsL9&l+rLoFCq2TEjj\#.a^BfD$l\oJO:Q_,D9"Z!&+e7))_u[?pS#&oWc`.%3Tb?;jjlg97.ZTC^KFBa5lHR#UE[,IoN`".@%D?.<db6g4AD6G_2V#c7WYG"7`7Rc=HL^+qL!JLIV83cR&7O.XJ1,?Ar#S%B-Sin%(*_C!\-eJM)]W.6r?+I!ne?7^L_&.5<4M_M%6P:CCG^jVQiR?**4=`[=VAQt<_bIWdu8=bOK5*%UDXZ8C#X6Vi+?Pf@6ro^$XEJ"%EVePW`nZXi"K;aM2?rbSM'B;d@4(4Q3M0(Jg;7@M\.d:C!#V7e#T*hs>1.-tN2$@Q(ca/bfT27)'H'oJ:$H1R=.[J>Ke,NjpA_t1%NUiMTGjCK.6H[-]&V(#J?ksV:[RDGO'Kh=d]H[.OQPgKGJNZEE7"3<c6ncELFVKN<q'$8><Y4s*no_B!OVkY"l\m_fnB6dqr7j'h%gJX-L7g"5I3ZaMKk)EZn#5Gi"#i@oo%rC:k:E_JXF1"KtF<h0.k.K*t7N&5L:i9nA>blH@'7'_]K5#*.Dmrjf*cN@?6cLBF[T\DK%O_?!u=K5CC4F)aKD:2Ti!&?;uel,+m[>u/6'J[Eb\+CBp#f1d#hLjU<+f1)4m04^RFsng")snnkMPHjH(^R,hKI)BhLh#r2=!Ll,%LH&fkEh$b$A-a<g;k.,%+S/5=o2*](JYP;`iNldf!JiNUTr^cr-Zb6(O^jf@7?_6fkc98E--!H&n"PE3TEAi=rR(^/R+]S&,R9-'%`0;MWd^=U`J1_7r2MJami_#>'FA>*b_-R-<*Dfa%,*sL&(AVn]?t[:&"8$l/Yn9m1\\oPN(8="n%>A&I!V3C<GicZH>4Jk;BR'ct%;.g:TnsHl)_Yc6ZR(Or>^q=(VM`>*nbQ?:NWSGi8++gmG3_A(hTt\@Zh"d[D`sF9;9fIMba)h95GnLQ^#$:'"RH^=Hs3uj^8bEi/%RcKh[8Ia4ci'?N%A19b\iq"-oO`^>%ge+k3m;OR@1e!3-?"Y0KL)!9M^knlZ^.S`M$FYk@kMHog8CQm.Fc3<VX]Y+qY<J,E"(r'#%'I*fji=r"o_00&(C*Ws_6-G?[&oo3+ksW@u*[<FG_8dB_dA8i1"ipH"\p;o/9H&o4`b*:LG/r2h0?X82E[r$VM;E=;KDQ.L6p9\R%L;e*(+/;#>aU@s-ZN3o+d>I"rl8`=0d#r?P$k_4k+#AWW4'Wjp'Z/L=(IPRS0grYCU!F/i1=$b#oJu^tGMtp$n=`>^+4@4-L\0s&%+oUEZ6i%k_6[Dc-d'*b9&jE,$%&a$%+[fL'RM/"uqA>f^$$Zk%d]5]jHj?\q7+E1K0ggbqdqK)MmpI`#8?W@D1=K!bf)I-A7#'#V%IajcL?49\9'gi[:`XmF'.Y`bLB-o?$"C-g-,4HF:7(l?*LuR\:UA0<p7#!k@ji85+oJAj%I/B7^LaGh<-&?4Q(fZ9?>sUl-AIsu2%'grbF.>TCT$6kYP%REM]%Qm>p&LZ&\P92PYj(4nH$R.?<BM3nBGuYDQ?6)Fu<s90Rae-#h5t"i`\Y($"d@e+6*]&V.lPXV2&.q\2%2$OYl4?J@tL@rds,)UF(B*8fd;R7O&.'3h#ij.3t*CRh(g.)Sr$Aj\YDJg"_Uqdo>J/Q7M]^MVOHk"4QX1m[DU3Lkr;49H1?"$.=%QZn/rXdS]3N+`=1La8;bFbLF,cOD*c+_>7&OkYR%mD=[&@76.g7RXh=8JmTQd%3F[87detRY29PcO;&8CG6&>d[qIJUfN0]WRYEF%Pb<4q(f=T[7O7e=2a30KehEi:OYp5A\,;)T,mO"[`U#jaiH#;O8h38cJH*D],+og[`g0^N/[7\eXSe6uM,Fd1dXGIadH#Y5.)O:^%7b7#0MOlSr8<Tl7E^5bRlCr\lOlj)>5Z.=3J>0P/TZF'3!C_!.5`laLScfbh<<5PQ*W\]UG!JoS#gXPgA?l=PV;($VYiroD5S8I_%_)]!F',?bTnO078-h86QUuKU<><Gd@GTsIT"q&Q?W"r1YKbLSV0h2mGcEQ`PhS+mpHA6)W;L_C#M:+QHM>XAu,/5V!aK:IMMQ>`n%loj?br3O?UnN_04M9Ntn'5<=NEY;+-QK!4hO:0#"kWD6He``Ob:H=`>*&ttO0s8>pU2jWU9=3]r<F`I>,0R5ZDUjLZ9123%_4<$p%+dV>Pa\F(;$Ei&N&j9tT&a:C/-'Cg&MBn)MrVB&/]df2dh]n:4F!T*Z71p(,s72:?]#N6%.GQ^IoD"TE6u\`u5/1_YdJC[tO!S!+%G#g0AD%kgG&j::e;-4i3'NW0cl1qSPC.0\9kHLWb`tF(BN[=7g)bUl5&`1J>%0uChYs]oT1e=l>*7X!p]I#5]KbBYNE,:Q_b9'A*%&QF&%;LM)&M9<6!:a.i:e/CoS3Ke'pB,!jhqn=%>FSB#dN$p;(N6(A&Lc-fCLqRo]KFu1seY@d00caL47V'P?].fsd72XF]hgMsp%HK[pMKdA:1NFW<07:iWEeUbO?Vj:C:=,iV^V35E.lEZBiORBjG5hE_a>4/`5A9bB&#T1fD;P0A0B@Das"Xns):UOum/[]`4]RDj8%ebJt;^E3@604,ILr7dFAl]Zo>bn%QnI"@!M'HkWj`t%d)?%C'=OJj>1?D0D_MR`g21"b\NPn6>;;p)E)8bqXLPKD&q6(tV7DA@J0%fu[Ku//s8qKo#J"f'ohhV)b#>iLcsPFTn*4J?S-]JM0glHHTI6!4tXr3t"eF@L&=&pMfd`*)Wh+\/a3Tm17.mONZ%U5DAj[QFNSC%;,YJfgu^"+'Jr$OQA<aQU^ZuHf&\V'XqtL),OrY#J^JS56WVER#qljGOH*G_jlmhh?H(<%PWUMW67m!2D@;#Grrk&("FG1hgTCm!%hjkfqT=c7bgF&"4HRe(\mOX3p3Yr:?4<[%/#&Pom-5@6uaJGKX!c[s,81A@S@GDhc8`(L_bG2H:dQA734QlH?m^[SM.rcbAIj\V=%SJ=qE2?kNY<A*5URaY'po$e]Q$5gQ]a&PHaS0HAhH4uANQJdY9Ft<W&3dO,i[QZne7#H5.cJ^EUa;;X\"Xm0T$\G5A`Sa*;/0rQ_%ApJ=@n^cS`+")R7bn$HA^Mj9?Yb$7J$9,WoFQF%*EPC)EWY;6oI)[$k#:iT<rpX(RN0@Igde&=@39sfB)L;TSq%#SP4P8Qhd#RgN%7g]M9I5_5WlI8+['HJ3jrY"Yb&arm8#b__ddROh)qMsj(\Y(]KcWEs7Q6G\o_`PfiZDrBSBDprRe`EMrG)8YMh`i7k",Yl54@Zl^%khdO1CGC;%k4TCcE]!n->kU>Q=Je3efmn5k$ILW)QUaE"ZP7cE"'<JH6O=+'Uo5D!"7R[8q+C8dn]aK%[:Vda@IlGu#$Z"Z"h'%(%Z>2J?DN7H7`D35CLerM&Jg]1_&DWJmbc5F/;@mhV0A+GP"+,Vh4s#Te>B'e1.c^WYJk4:2nG$uCrDL5'pJt$$;$ZNibB^A`%(\.?%p.+%:iJS*+.NHTV!i<NoS`=D5,(PO84Gn+fPt-VREu@#2#Xd!C+qb5<@k#B#.2S!:SFLioO5cu!$C5\K.jYN7c!YH[947<i-_'fl%)9oS)9i0j4kp<fI,'>o:RAEO6G564`7b5\M8\&UDk!q$,?;B+XHTTlt4aUr^CW*?S4DVM7;!;528^*nLb';j5a[%3V+,M4)W*:"/%DAeD]Fb!5KFrCd_)9^]K?s/]U2o?47J2#p+ciU"*0S-"$[?"N+QLuLcQFBDLV*F;-CN6l\[bP/N(YjqbQ-&*TlBVbHrCe9^K3$_l%H!^r)E*RZ:&@r1+L[sh:aFrCi?SD*gJ%e,GA\s9r!:r?mF(W#M_9;+q)+,u<#)[XqDgDPNcm:YBBkpA%JG>WL7.H2F78<i%o:8WS%?CQ%!TR::\`U7Aq8T*o^eTDCn`_;]qE=-[0$+9Ku*S3.rYlWoC!;FG4KGdb)%cee[1BjC:V)PFF$DdnB-]32DIhTg.0sH/%$:@W:%-T*;j(5,\4&nTc^@BJ*Q;,,PJ:oWJ\L9P?i<tDQY5eNgAGI:(\!&?:],;.WB*DccRUG't=L/ML3Jo_UdMO#h!:6(u>p(l9a-XK]E%i:4D?+_,5DZ8/=%D`Oci36Kd(Y@)4kC'a=@2o\pH,OD$hs&Q*"m]DCh88-36NX__sj`@ZF6Sd&o@?TiKTi^lQf+NO:Vgo+I\u"51%1&?Vt$[.G$)G;jNkuIdAMe9P=3FX!'A<4QT#q<o6*lGN/9p.>H9;rLUGUt5g!j%\M0radTXu<Wg-@+emEl=$**s4nNg=5Sk-QA73%R[2()[YoFZ?R53mN=#@"bL<V8)qV;$1,BG.O2Zo@U@O[j6td4Ji:Bnpn`%qd8<2Ac<BOt&$oqeU;o62i\TkDBJM@<+$Gj#Vfq*mu%.)XFB38C4khD:G%LB_dQ_2]6V,:t#<H$*(?.nN.L&b@3#gWjn>YX."iQ-&`H`"I1.!d^hS'Re`_/Hh@X!S9o9g0RW(h2GcpJt`fJ%n;=R]?/"A747qu,bY=+"pN6uXXE*75&sXuNEIoGDp'?AS=R8$OqJ&iRK+/24Fs)rTGRr]:V?T.*^;"mpZ&fPRLM&:HL"2g4AlE/_%#S-q\f"oI\7m35$.TjZa<5ZdR]!0enY@L^6@i!SRjQbaBeYgU"Mi[=f5Fa>YY25anSA<sLqTnR-F4mOZk'C(h-N!F;4AUD/VT7"n%HC!8JJEbJXZah,O`lkGL*<N<51f1CsOuXBrQBF6GXD02P621Zk@$0#n)ZJ56F*a?U:.tL[bd)pI_\;]8Ni.InMrff46EK?pr0)(^%mTplo*N&]VL*s1eGk,s?J`SV$kt(6ao>Cn*4E`'t'-GHifLOqH<j=XL0j#FoX=TC&cf.2,p3kS`n/,u%=iog)-Y%559pZ]W4HJGl%Q-B>*4CgG,/1sFO0'<7f*m>Vr'f%fDB0"74rcniUa1%sb++`PCL#NrqmlTq6L_3/dAXe_`@Ub^/&!Oq>!m&eWhc]*V$81>1'^*T/%p5O=`^9\01&K:_Wf^RZ%Ag>9D!2<GUe:[l>!,&:$=cJgVLI.S^cr7/B8AMnmU%9FX`J7Y``F[eBbHQ2Ge'4E%jCjM`g11HT(AQ[c%Jg?3!d2?j$j@+^d[algm++'AX0*X<o?k/GJohMa,5=)Ja]>uWVlbnfEV"ZUt#N0b,0KU+MK^,*OE@"^FC?A-TXf4S>kB^g!eCk='%ZKLctNf4W:H)Z$n:<[u6a-]f`'/M,g"2jnTguQ=`qKcO;B;+o^/ehHF_2h(P:5;UqaXgX0Z=EGgcfE@pTI^Bsl$'VVekt1YDR5Y7%?J>8&!YB^3TS\VR73MVJUKX+O2+\edl!mJN^h_tG#Wb'n8hGMo<T5D7`D?WMr'\R+#[C2S'?9eWbWm2$!)iugfE()a@o/]\:.6LM%Gj_*S.+H<BZ7pj1Xk*/h].(XH6sP/iZ<q`1&,Vp2LH_W@3]eV^P"6.9#gj3I_2WdP("!S0X&&eK7m9X0#UsB%":R7dIZV&N4IVqY%Or0%PQmD*B4or7u<o[`,#)Y,`^eTE(\[*4RTg?^/Ik'ag#DX?!gYop!N;q6*`Go8gFEPt5Z]q@3f?[-!pZ8RkZ_eutPs?]JEfh9=%CC'GP'VYja^T6n.ekr)UL4!$b;,^,Rg<paj2cAdG<]KGFDL'N1!"t@0)=Y-J/-M`!Zi$eTon](;&ThB%"!N=@CG]3_W1uab!9ok!%(p6LjM&nB(YR_6Kch.)ASMi5Ym.FX:ja[c_9if%@mWn:kKg6(=O]p`QXkPL5$J@?\5q`cW?_g#l8J#s#0+I+O0^#&5Rj'kTUIR:'%^I"A'b\afJ;p5k\E(a(E(fi+Bo>!'kAr[1h$J$S"UmH.mmlJ0L&/nF("fne.fWQ^-0[Pqeb9/(c>&e+`&$;WUgD"'Bi6oaI=-Jse%$M4N.Q]"eH7\62mh\aM]"i<K9TAXOr7Sl_`S>6BgOIq=10IBQ$P;mVXe<Kk@1IGQaT05r&6038u=Y\H#)MQ.<YQo*1,6f[hSAEdB%<Ass>E[1QU;7M[%\b1n$)m"$)7_E4R=KKq1-!kt`$j_\paH@:KUQCn7T,e-3d;0r7RV%/M_(.uGT-E8$'JWR`BI:2;-BtA>9$/66%?uXm6E6R[m<\UU_(/3M-48nMqhl<o#!KHhFBuj@U7(.\?1V0cTh,o!@^qg/TBa_q/9PB!+#Z0d-6b$XfmN<McV$qk_Kb3=!,sa6R%_g^$AA6SY?KX>T`ou%'OL#kH\FOYrRUH3@b$QOGJ'f*BkXN-!pZ_$\BNKoa0m"GdSc4,Ima1>6p\M+W:\nQP@P4kUFFl@`aSl]u@%K)hO9Gut.*H/V^_!aq,5&3raZMMir8g<t]06a*Z`[M*2NJ?/s`@)#,j]-MB#i$!mPH73q:[LLHQ?iVk#"luo(_Q))2,4!qj:L.iB%jA(8FUBca$0P<5`.2A\FNe_^/:O'cXS.CiCEE0BOHq/^K:dI9LdsX@A`OY)b=G&QN)orHj&lbN?Ul]=i5ouet4RXGdO!6Oc6TE:r%@0!rpf4>:iB6aU-20.\#i"ND+Uf=j@#i()d.M,pslI0G"<uTjKF/77e#>kr@T#s8G!-dP'OSD=crd2lRHn]bD^h9YCQ%tHV4#9\(%HXFJRhiE7<qg(mUX*^g_NT]Zj(no2'.AGd/Ab=s2OMUI#!Y1I9"Fu?HT#$8IZMR(+U`mX;bAlX<.<;KUm!ISeL=5L:GdQ83%FbK*%;V8#\@di7j*3EJtXk,P]2:bo_JU!;C?'$:s;j\c>)WbWW=js'J'ZTh:?]`>"ZHRt:>RH4bnWiSq=>PIeXSLG!UTi-UFQG[+4h1O%%^q,Miob25K-gT6#9jm9kC4+6eGVfH1g-6Xq`?Oo4Lnf\D+[AF^mJ7*Uc4lG=;<"_3"WXnVD3^#?+AWFC2.>`IXM-0fi<_'-g$Q.1%;q*N+*@m(7\c(e\Fsjcm#1A=f`Q)AO[J+"T^5_md5(ap3HVge/"(mPge=NZgNO7P]4X$&50)3;k92tj83iJqn+hHI)-cI?YdlYLP%aW4h=S[P6ic/&,5"/KKKW!=5u*hkaW]?)-H/SC%h)(GhXoalp`a81=?QJQY9J-'5j0b@B$QB%eg@Z\tZOplHa8>AEMdd<KA*>A]4%\\CWF)#<+h,:<o2[65H_*a6MB\X4MNf\MT>3S,+Z7k$\p&;NC(&QuX3*^LtV(Fka*SkE/$Rc8[n>IRCST!h`>8e%8q]W$[IGtTk8%=^$;T2!#Dm0<)B&5FAic"7\rkH;3igoYEnL`Y>0$K_8X^&)g:.j)Lu2-$O+K9%$Dk$#):J82E//,0cfsfgp0@M^?f1/Z5C)Ur=h3%XB0G?BeFV@#M/UEd4:=lK4kO[\=H+X3RHN+6rcMHC`'?@>CUJ2jL_T/q!jc[?PaRt7EdIeaF2)mGf\OQi[XG-S+*EE&68'n/6*OE%NK&%;El0GSXq:5h(qM(7V!$)g*Mp!WaB3ac'95bbV3IPr]@pOR@iB0(ob]1"(#<<1mtnFfjN7St5b=3F4iF^E$&pO4.FdJ==Ho0V%pLN("2-@8ZAK?03S(;(eWS>fM&-.F*c)j6,[R4pEii=GOeU`@T?2M#1j-[,N]R%o/%j!Jak2cT,lt;_'ka_9;OXmOL\^Dsi/$0Gp%68(_aOj!H8S&f/BM-SPR,'$\Z4GmBXV9$%Qh0-HFHtJEmEfCouA=/J@Lg7E<\R+?#2sBWQf54kY5id56GN.TE%tD4&r9!kBo&f<0%VnG4p,L=g<iQ^7D^g@`QjdYj;jo9i/j+!Vkgq9>NCQ!i2:ESIIrd&s;r6snQiG[SE?N9H]^FeZ1LWAT@BBAVI]K\L:Q@HZ\3r_S+%P<Rdg0>@G;EV]?Ldt1q"(O^X[BD__$]g#jt+33rliV*Pd#80@RYh96):,!Nk-6[pCZ4Ol^QE\@oFk?Q]]Co<hG@MRZpeLM+1L4:c%`0QIENc[0N+%`@Y,/MKMgOnTTW;I=aFK-sO8EbF42>U^q/Dh"$ZMt*ld"c2G\"0Hgk9iE1Y`]q38g+g.7@WYY[s!)of+\MGS7iRu%kcIttBOYJpX_'+l/AV!?(aQ+&5P)rN&.BC!8tj$bTp4L80oZ,Kr?Z9.1?8)(b2qT;W[?Xg+>O9se`)(Sg5r2R+n1QF@)Y?CYEp%_%e-8lh`#]MME;WL5.`iN.MPCOW+DM8R6H9$j]hscNU\<oV69_:OkijAN9@S(%@aH_g9"k]^DC:$ZnK00YTH/js%hOo14B6J-*&U_3%6GjUjl*L!%Qr-sE,8!6:Tq.GDK#\nl;%`rL0Xsgd!p_QH*(0E1AdX?0bUV47O+K@k7Qd5`@gc>(X+)_K+2DM>cfPPjK=9E\[NGaD%qHp=+,a]D+&'T,*RKl%Y"(f'No*+oeHit/uM?"R*hI\g1^Yf9R'Yp;IED)VPGYibK:P:Lbq0[sZTIVYA>H\'3]F7%c<aa:VTbD6;%[r]Kufn$@1J+A?M%HG/C!er&hkR2ac#&<CB>=`5<[>f$A0KZ;Br,=OlKL!;u+#ot\!To#^0qhD0<p+=QYUrDP,C@jVZb$r_N!,ef%97F8gm\X3@AsdrORqF?2ZNa(4hWG>PpkrEA%#9pQ,d^oO5pBb\"-ZdIk3R,5HF&4eqdUQfF"Vr[aLWs*pbt:e5o.fTo^/7(F'S0P%HYLGns(f$t!j26:7puDgiAn4bpciot5BS_q'lW]5>]70(Vec=L-R`Y1o*:FL[c3X*s$j.7/cYm<]1%1VT(3*m8=s]&]fB;d0)<Ob%agE[#J$GhfIB+t0kRUaQl$otT;n;7Q=>h^0[g!Gd$93"tpZuQ'r-qr>iN%h_#>_j=]2-5[p%W^gi[_rfWQXo<5`4b7L2#Mp=`2#I%FfQq=m$M9c*JuKs'OR(=/a14S'&-RmP$0>PX*B0-_R)4uMtL=1XiE!3n0c-FFi]4jER%Y['R8S5H-d$T[#>kU00q^30@!Z!65(.7%k6_.6'E!'$!dP(>\H84(XW*J\E:pD"DlW7.P[@X:!YEU%fW<W72h69K&,Pl<Z>8GS2#[5J:KHs1;`Lh8!4R]tnGaJJQDpgiP&SHo%3@>YO`6NW)p\OnAb?CMjBD*>B(H_Y(T<1T^@((AF&Nu(B)g2T:4skUXinqRRLAIqHgmVKb;YW)@/l;$`WUFN,<GLjoEbeZ<r];[2%b"@a@3YM^(8ju.CUs_k#X=Os@n>@E;k:iKD1(N!t5ADR%5@GoJ=oWt-1cU7?s#5r:j2Nbpk/%h5a!p%R\FL)+=*P"R>Jj0F&14-$%q9eGQ^fra0pL!sn\,EJ=RJk#!1G#bJ:o;h1)_Rs`:SrmHJ"2-Un!O&<p[_00+A=W08G<CBD"FHEi.(CO[M6CF\]b"!ec4em:QHIp%@!6gaMhF[4>o_P<-g[kZ/LErMK,jTp)7$aQS.qUo`H#0+8*4BpmS-R,lrTLAXLS:.B$u;@2_Ye+!HH-KcoX"9cE?,[%f_ug0'eLY%am728O9+n2D0Z0af1\I-^MZ[$_:.7Y^?q<6W#hiq:Y%1pTe(CNDD:[><ose5TtE"-E,iYLS$Uj$Ml^I&Djac&]CKe"NX']2qnHt$%kI16F3/P1MPNeAJ^9`3N%i>Da5A=nka$]>]:fTC4#>`;YIj?6<#mi8#<UpkP,OgFs'nc(DYO!6(#P&t#7$J,#e_.B%8+dUc?5GeW%-t@K^K3TW2&(HE9^W!$fo7-MQ:LgX@$+FE^F8TuT=0-dn#bU8A4&MXR)<\27L]R$S+l//TIX9TbKD;MqHk!:7`T'(,(*8J:INbFR%(p\aUd4kD#*ijgMRW'I:Zr%!h9]PZ)]pOQ,WH:*Dob[Cf7/_gpd:n2_3$I]?NJGn3l(BVQXti%a.uZj:4&6XKO]5!f0gIWbC55)3%N\4RiI2\$$*JO+&-l`9[i/*1$[jn]A;)'*31h>RM!>'%"YS$APYQu*imAdu)cU3@s`(`9PP(H(;Ef5RBJ1`1t-.&&hTl;P&KB-K=%4G6.&FN&=Aa>eZC8:V!)+j^l(h$@O-h#X(,`'q8rLqH6EV\6jVkSQ)Z>rXit?GZZ`#FgQl#q4U@&oU;\%'^X_-;Pp%O!6&A82[2P%JoG3s_8E7Oii(0gLF];m0[RZ6E't.fK)uG"</Ml+/J8eP9CR^T$R73]5p=$,b@sj"$P-L"W&,eAO(+glifG'E^bGi2MBe)<L!5a?%TIu/]J8-nl.O#afTgQTbBET@bLFNQ1.6n.Wm!R4*8)^0"![5Kf(j6K?FqJBt;QEVB%*oiCP)Q,t7?A?(5s#qB??RGZp^DorVBcA,%bXb5lD2JB0N@<$WBKXXC<QF$,2bS#LomeD.$;4+4EJ\K??K;H,`3C0=&RKJm&c.3;nk>5E.A5Uc4XM<R/r`AqU<SWeOZ%isY3K5Z%7<iZCQoFgQF:;jll;U0E)<OFMjH1QQeVlpA+XFN&6&$TgL+s5LLX<FgJS5=2:diDN*eI)*@Ud*jnIW\ZN_#PhQr#a`k!]U++)SoJ%VnAe%`!JO=Q+L>[P6?!FW9n#b:#8)G,QSFoL1<//+H![NE4i,$+eGF$/P'$;-,MB1)V+&aEb'`?5o8SZTI/UqEM0FW`C@ZLDj:G_%_4XPUc@VRCSK*Y[,)?KNEmSu#$&D4C'0n;4.[)3JbR!*+UA@;I"-84+o`HNMP!b4d&f;N23/3FoJn$*%U3"Mn90aC/LCLnK\!Vn%%N_;88O28`lcuaH$i([\i?3Q"u1ZWe-+cB,WOqAQN6BkgsgPZ`>#lXoe!t/md8+o$W!='?te)unK$)(ZKE7)]=&9*QQ@N^c-J7kCN%@Z.0EAk;o]!:Yp-*ogp=a,mStiWF?gN3j:\k-#nXODRCL7)sX?$KrqE2du\b?;Z[.j$KOH<9L2jBDGXS!lTh&$.&jg8cgdc8%q6/%NM:J".:"/\;A-K/fZu:/BJdRr;'Zps&Q-n$0glEEI2#D0,a0YK'#@dnSnJP<MNjQg8CBmbfKhFBh.MftaTmG0TS4op!"&HgeId[6%K!#(Z+@7:.&T)CkO2TFd82uXMGe5%!NY.8MGV"mFV]54?#kO?P3qlaL91%ISOoL:N,$C'7nOaB&@u+qPN5>B%:ePcWfqSKRM;DKV%4\Ga.gm;P'6QjZAh$$Tc5sbS2KNAVu;'&"i#`C&b'B5Cre_LC!.Z+Y18-\]`#^m(oo:cDG^kZtr-kP>DeQ)7HJsO8(,UCdWT`fVV%MK00D9+R/#!R?Yb2)C+7>pY'=,;BfTYL;s?(iPU`W^s99A;YZ';P+@jf\MP;BPU*]^\q_)?GZib,8ALs4Oj<r+:[Nh]ch1KY3^Q(%@89C"<i2QPVeJ[j>?[o![g0s8N2Eh^Y[I6E7sh`-<lsWU!f=N.5J%uWDX>kn49sQ'M?s7.]7OM4^>A`TE*Y^HO9#^i57l9S!=8\a%\-T:e0k`>uFm?^:E*oii@Xd)S[c`@_oA@"T2e&-]`\#V+0H(6]=<i+'Ts2SYC(]q\7?j4&E^`CGW$:JcTVG@>MQ<KE=?%@#-^>ra%6]>*G&/b@d7C[>3\>H8[aPKb3NIe$]%&jk7;-\LCK1%-:#n_nl8?\&u]_Tn\\j.\q+TriOF-0Z1WH9-C"c\^*+7.p*PdtOY&c=,c%!:\ouZkV8WnM'E8pqu>f@#:#Q,N@\+o"RN,%O8mtoHb*s1R!qt'ZC=iGQUR.%uJXM""o:?/0se]rIlU;791,bD,JF>!Omnp_[$as%\/cSV&OjVD%)KjW0T?$5)198mcm=O_"2o.ejFX(0Le!]E@*scA_hi2DIh;r"aOd+R)#P)g$NYW%C1\=>-\K&9E-;(d"gMQ:L`]0!%,f5<GOcVU:!I6kLM$1IqM2u#=A42\V7RbV0^BfLfI#*D!`2MlX5^Yg@(3(0m8'ruPOEuL(-N,HR&hJuN3p;+1:GJl-Kd/!'`^#TZ%;$V-?.&kLB7F&9TLg_<Ynm+5R#rt9VOYB"H5XbC79E%@(/@]lrJ&SK2KqMl,l/8I!-Md0?ghW9R=V'0oMH<GBfi;8pE0DFo]cs7;%*]S(3,s.4)7+Bd:/4O#E0tnm.3ulU<iWEd,N/;%M2DSAcKR+XEN=9O`^'l>O+q`X&%uENbgZ,O8#rP#1QUR$UE+PK\'8-SjV*fS<%*k<"Tk)Vb04t:^d!DGrcNCtIQUFS!:S;`WrE1RTIKYaXXOF]nu8g>&5C"@@RUoZQMH48<'2Vi27;q5J!K;I*aeK23u*P&&_NP.np%`5*mq1%ctNONdaNjt<bO&:mnlkA0RZ>]2E.&`Xup)GE7Ih"hCt"X>Vn;kjAOm,gQJn3WW/Gd:=5TND.s.fZZV,Lu\S[IUL@L^!h/%j+b]hb_d&T4`Ghgq)6rrqnO$&m:p@UFe1&.`S!>mEUVs.Td"rC(,UM#B$gjf^SD+7&,8X<FF,d3:=e:lUV9u9K9tbtDVTTUBVSX]%h#\!.]!q&m:ql]`_W.[4F5YsC]A!3uaQgK5g>2d8ba77q^UN$>e,F58?Cr(q8)8Y"M)3L[PT!5mo-).,e^mBMDrHbZFH`NtHF`;>%e`/PZ`QdAaU4;iDht(F<o8Q$r#RM76LU)gAIK/?(ZWo(b$\FeM^^)#cOc3DjpWp:K5@"a"UUZ#dJ\f`A\+cg5LYJ^XIAZH4V'L"Y%8Q]a-'],p+A`+Zsec/3uT(pL7Wl(S2n;)hD)sfK;e`*4/A:JJ:-8n#sfFNBO:bf#gnW2u>i8m1ZQ2_:s\f(J45M-qT_eQED:C$pK%D)'+'@j,j(P>O[p/4q$9oWMBfT=)J#)YL;u&8aKmfI!<M5MII_C6SfpqR7acr5Y9>$ce)k:&3O9;uZcoRj.6?1hoL0"Z"m;9WoPJ%.EE:,ZtfW1rrACHCgCPYis'<0mb0g^g&%D4OB(S",.$8E4X8.KPi$.8B2&c7L4HT%5<H_:S[ZabD0t'*h1B;F:5j#3[$B50J+Glg%43%gKK&u8-*c@*Ic/DM/LLm86ruZ.?<pT,e*j9!dg-JU2+3r=T%/QS"m9L^^GDlKgSi\n_fgVMRQLjo5[t6NY9'c17q%"R;CMl#l%fZe%)Q_iiDMZ;_MB-&<aGQP8Qmb!\$;3q2o)b(n>.R1Q%I(H^""%l#^"+m>$&]&tO1kaT%rmTX.-6E7/r_n'qN;iKGZ`miH]jYj6%q^io[?h3.m$>W[CoM&1"IJeQ7%]?pmrJB@3juWV',*ASA3,Y(K`'E5Kf'(3./IU01lbLlQ>J!!d&$Hn4#d'fCEI3c$p/aCpBHKKX%C<,^iM/15@TdiI-m'Geg0O*qQp+a&1X\F^K!Q2T&$YZhZ"[_EP);bWY\77H2qbqF>AN=0!.pC)F&L$'iKn`87p+]a!ZrWJ+j.[*^%io=IV?%Z1GF$_9'UI3S_4YTD2Ifg1X6i0>4!6kQ]ZBu0rLn\kob=[c3<BYqg!V[DR+(&:j::Iq9<&X$/6umc.eU#F/XuBt[p!m74%DQPDs8[-*TD`H5TM$5qF5kSfs?>VQ\J;Y#p85tiDE'4["O2RgR5V"id9rP@gg20nhL[C/V\:"esf*1!9fZeb`-VE3dS$VGm:'8/M%\r%Ga=*W';HjO@P@HDjZ^NuB(`.]-@#I"3*d*ik4Ap3dVpq[?]D4n#fEr-c.fgh2,"%A\TQ`PTC3c;]FPpH\,ko)5_<t5-<`k`Kg%(F:OA):]NCP+;P*(7oDVn+YtXja^?(*(iN$-En5GHmiC+nHTbrZ*P4$h!-PY>JkU^NVNfg9/d+g^!Rp9l56;4c:bi&&8>u=kfof`%gS":enVC-[[#=%g['HLuFVCo0^fgn1(<9$e^&epn@b86f`aC'c9d#=eUjee#P>6k9S#`sVh-R]NJ'7f>?s<8%o<)[Ah7gS-mL?tq%![DMC"_,jtY5JmR$_ZC$]eu%K8kTXo;-9p/J*5M\Huo&rZ'+6ulD.Lo\>k,X!$^%r9E"[XEpeG)Ug%dV\YPT7a3A?I0*h+)&68i)%d6\4c'WZ9&aKu,s)`HSeB[t4$QL]JPr=P^%9An[`^8pS.28<>pNOBQf0>/@je'rbtE5oQ3mE`u?^NCKp/9Jqm\P:8SVT[r`?h0*(%?AYZ0'59HPe<4U_3Dp.KAn;=M-$31,=P5nm/0kYuA%rBZho1WRN]=;XLu*A<n<qYNnKY*OL"O5qB4*ts?7^B3[-liS6_DtSHXkYL%Xlf+0GtZuJq[7]f_o>+:-#heCO?/+\oT<#Ope_c7\q3-8;-;..+8SMJFkBPuiVI'W^fR?$eSuSK:9#hE*I#N:Ut7p)D@He"bW+Z:%EpNo?&Yh;Z'Fr<G.XseI<'=D"$'W:8+t52kVqA!n.`8DRijBMr:LlO=0Z'I6`.si0BU$:Wq[Q$aO^]Y:a$XSL!_:hrReU8nH`>8]%$V;8!2@t^#Ro$cLe6D_BHGtFiYd-nS;sVb;F:6r(6:`_0'3(LXToleWBFbj&\:(oN6W<l(M*gCUAh$F8E8"%=5mh(aC+BBl<#2kb%01>#"7M.[2asT'_(Hs\%.78/VqTP9A2d+m^THj5Z>*HFqEaAYhM#)__6m&,8;#?B?R>4,B@9!MZ@:LJIQ[KECJqc$,:s+YKAm&5`%nRJE7Is"ju#6pf6X+TuUBlLcJ!rP5?[J"@Y%/Cq;Jq(V5[=)mP`C>_ugp!#`$]1?b8"aE\HiJ"Gc%1s\\c/?%:nFQ$oOnal//T1$%EhFcr<!^aPBP5t^V7p#Z2,!ggk$2<!)O`G+%0J+u*&-JW-mNPU<#btC/VO[g(MOm@pQl3LW6fiSptL%(n7;gINL;%XR4S]K`Q:'p%;)hn+!ZU[R,*Od1R&D&S1Z2;LA!TX.D.#>)Fbt"(c)r_..\p.p-8:da+EVn^"Su&qMP`h.m'sNietEKZ%7!sKG(uKNRH"C6bj=!n%9tANE#JpjL[WoB[i2"GWh.R7hZIHY@!S)j_T!1Ku3%8C^3%2"7%oroBCeU:X$4M-Er.X8pF3Wg$*0A'U3A<5hW).EC>Y.lU!Yic5%@f+!.l&]0SmoCRGA<$@$XQK#0$,EO_BC2t1g!3#2Muj2<U!]bF9+/`"<gj_.&"uJ:Q^1cV%hI(K]o#c#Nu9q['G(@`)JuUAgktA;%M20>KEjC[[-cqaAj`b5UoIVS8SEW?.U+*Mu9'A6hlt/:bp@bEX[09Dtp4XMiAe\*.`JV?C\_a2Jh(F"#apF!sAN3DW@H?['Tn8%%%_V'&F<aeQKnEm!Gb4t[#NVphSKAi!=e=a8.#Zr&9i'B2BW`og!g&"^HHaNnrkIpOsa"3H2EMgf3YtI'_CT9A,"%/M%GG@`,cp_/`%TVG>)J;EELE`a#h/du=Ad?-VfCS26fjiG@kULKbQCqE%u)5_i\*k*j9V<m,kp*f9YKu0!EYY^Wa"b)5!/'S-0=FANVAfEVZ((*]>%>:?Q1g-TL"f=DR-Wf=V"$^,&-#%415I,MBo7]X55lFh.JYt!J`9SWcW7G+_'c9P6bSqlL9"ped?H6pU49GIt/GY=l:e1rJn0*rX)%(0(.4)d2\cKoiBR2T@Tb('/FNC9[J[An(DnJh-g+oE2qPTk"ZFP_3K?F.a+qTa]#/HWuT,ICL5uL\ceHrYJuWcTm4!5"O#!JMJo9%R>MplP0tO/S-bn-Jp)DOm+Cu>>Zi*ong8.&BJMn5e&RD>25P;6Gf%M>"jc@eZ:ekgH*">$\]ns%#+fpN1/_L7%\tZ2L0\fII/"la%`!,@WBs:]9_5n4b0]\M]s3uI(=nTtRnL/]id?AqgBK?b^S?lqtkr,&RdgVgjDlH:eV"qa]?gJd=F/S=a9;s3KbY?'jVAf8N3>S;S%Ih1N.\BaU2_tCW#eOmH:]sb*W\pj/3Z<VB(8W8uP($<BrG3,X8^ugN%/epoI,5YWhgkBY[[1CkpQJ2kC9S'^33Uq(@JRKMoRi_I2%X).>_E0F#lesl$'8d'"VCpJ6#M1mG6gpluYbGN-m,<nn8#';!G)Xg[+)npq#U,:n(7,Nl+qR_q!^\N<-@TD05k&)R'%-cD!FSMl$%qjtE'2CCZ).XbT3=4-dkqXXF\5rJ7b(ZS,QjV",#C;tA$M+qC:V1$W0j":g32CB+Qo@89AdA'GeR[[sQmDLD3g#a[02d@YhYA8H7%f7($)>??`\"'FF@5KBBHnD!UH>oo:bErO_c("Me8Q95]FhJd+K`kU?d6"(=MFQY%1DDFX@6eC2M^$j.6c+BR84M/5I]Mol7jC$?(%_;D-H_PfBOCW<Ve0?R"m^(So@atPbuhR`WTpL?_D)V738Inqt*R=oBO1ATA?;TjW,iD&2UK@.Y.H5_bI2kpr'%Ec2)QG=f("1kd`%!FgtufOudg%273<YQt"@^Iu3;4uP?\ee`]A?>Ii&^795N$GLaq"8\kl:-(/Xr9Db#H5XFELq]X:aC^`5d%Cemj+(G+::A6a-'V=T%2tN,[@;*@`CDboJgsNrElC,9Q^2^@m'#+-/<)=0r'C0"k_ru;_L.M]dV-8R&?Tdd-I.>.2=/$+XDB&1Z1'Jachi?.eSQ7e:*.Hdp%U7RSd#4rsW&YTt:-s)NJkf=1jmdq/D`.l[Ga@2-W,#QhUju,oIOl$8@8Ul*O;6]mqkk/1^3O8\_Qn$M>%+UjV[T*3?E(;dB&EnNl%g3IgkDh`1ap=J\,&eR?C<Q"HM-52<^"'eFaYh'UQC(uCnSq(Y'j39QH/\Zu_AXg$Q`P!q8E4`tt3H"C-:>E6p;%LVi;iV!OGN8;W%<q/tf.+Jc.b$C5Fhm&9-c'e4$GA`/,j#O1R8UqmOCs(5KOSr0;g"]n3c,t4=01nr7.c`4*I%.`uc^MY0r<0!^<_g9)36Sh8f:Mnn%I!R=8Z.'6-Eh!YMlfk4`#VQZZ(ptR<Xl*m"V>O[/eC85`/q6B<]^GA3)Jf7%Wmnq!mZ,DM.PV@8p4l=j\9LH^;l:.`\N-'qagB0,%/cCtc2'$B?%lPfnJpj;M1FER1H;$U4'>d4qenUg]D7K]Bc*o:-0Dk:L2]9?]80h=BZ$(T-R?Gp#qVUUla&+J2X\,mUlNPYr-P%2'%GM[H'XWge,rW%*m"Pu1T2oTWX\=aaI'fn<K],@3UaAjF`k1sdBI;,!o9Hj,^[Q.8mXRIBi@pST+mKr$E9XI*Xn)B&;m,qQR!%H"%%`uF1,G?56@a0^bNR]gXojW8ap@/aEikgST>5ZM/19:Jjg_Su9*CbpD9OK\U>EL"_W\Y_l]lVlmISf"?j\X9%%!1UT2JP&B-R^YWP%_tPsPVbqhi".X%E<U_jNBctC8(/XAkPrFmR6g-,Pn7@s^l1As$Rs"gj2!Jb_jC_AEL^1VID&M4^q;TZ2X>;f=?ien]n$7C3A%0pV%E;$+MN7LXG:O)p2R0m5,>SROjeRopVk%e,p>6YLU4H6WE`%CCukAR20)4OS'%:9`2K7E$V;9YdGd@XsE7QePsC%Sf45or55nYE+J%T8?&8oFoW#>8L\0'X5]`3.*ta<TRV^H^P@N$`m,u+tGC?OhOA\,*89T@L;Q)g&gJ74=dY(I"NS@:c_>G/;]2)[3-)c&OD`U.Rego%&q^l;C13iTP41&<`iUda^+a)XQf<%UI$@%G5k:.S8L`@;G@&:rCFsa`VAj>H9h4^15[hdA;)=<(eDa#o<loh8;Gtb.R0T3[h3T"m%+_TLT4NlqIWE">Bnt5gsdiB8@L'9,5P?K7C(%%CMgL;S41uD3,3MJL]EgpLr#<ebq1tC`Q7$uO^;j'^=:#]3u9j[f7^"$(3oS]ep%M@lWKeVlV*;.1jZ8k2mE&r1VOGjp?MD[V3YLr`a7[=SY4nUa.=H6::,U7K[fJ>d1FC*#;B;2=WR91]j@*hULjmWh(4n`#m=)C8_l%,@J=%6\=3R;bQCi1p2G7ZF\UH%'',$>r#P&T@o`'B<_hT&oj+mfOXa?9JP@?o-TsFl5/<o9=lI\1B3U`S5;TWg+5fu%ZFqc)"?Jl%E5>jLC50bp_G\X@/eIl)h@6fjB_&:F:ncQB"m#dM#'j't?us=g'eEPXqaP#*HM\@Vero@)eC1_n9Js9?7DW19]%(`^9K)<DMb1mO%7o$en$Hhh^+6k#AX2>cDLoqLC_12q.7UbSJ.Y<XnEq&up76`7tFG7@&dN_"G8t@_;D*<J1=lAZ"3@etg=AB/#C1Igam>ld^3s<cK%#P6.?7MfP%!/X.>cQ0GdNug6>i3`In_WJ^2Sr^?J`9"UV11ZaZfpp2q804J/BmbZkVB-TN]@G/%^WBl(ZuD$kI!^JJR:O%+dAPq1%1?Y"a,9`"_bW@R/0TlTKs-kbOnj]&YaO"G3kE`=00pMJ8J_G`,5OlJMK@<LT+nV%':9%Q0#)7PVOV;/2a-;!K0-Tk<8ja(JGu3PA%]J);[N#3iUf,9%-b6h'!bs>qba8bGg?bpE'``D](5sm<se]l%sibNW=dd[Bi&]O71QL*Xck<kH/n7/OB<r;P\O.O$R@&Fm2n-f];%#,4d+qLCPD\3<jC1F'Sj17t*V#?+am^'JA!&JKITjgtl6a.e2i-21NfK!r<EmY(dnpZeOqmi*ngm2:d7jMARA`hKeF^Q-jErO&.?%CZc[n[i+Crr8cl^iQW(K?#aCt!h]c#e_KN:$UXae8ClGsS8%fCc%u"Gr'HhX^_4Q(*.q#I*_Q<(T'ZLqT2+5*Y*k?8mZjfa%Qo&U%?[=qG"jL^==adsdl/Uhk:&BKV'SkS=?d]pVID1N45!V8mG4,\P%_30t!USJ+A@"Xo*.J)\("Dg-"!j>)6?eF`ZcQi]5VYi"7-9iX%dB<IC24o6!TRt*%@m71A^eMp(=_I+)L<UU.1TQYcLr#pN9i68&`%5YA83*GYY.kf>;V-"TbVfrGYC[@b]jiaZ),G[PAE_)RiQ]#Y%DY>M_aRU'VCC9IRe[cD>:XCa4ZEg5-:IBUiEW81c>Z?p"A<qLLC(Le;s8$@cV1\/G<g9M?%8PR%0.>/+^g*!s$Pp+7N^,O!j;&7D%i5JZHa*frAYRA,F;*Sn)hA^L2n6#7kK0tL.Er<k]M:U!03@a^BfgM<,P2\&OT=`/@2CJ(J.GlXY6F7KA>:>?=6(Ye2JGsmgdd6h(%L;F8F;%#JD1P2bfmk3_eUG)4B'0*SXX$RV,G3Dee*nd%ehs,)L7C(Ei@8NSC1uXTO1HBX(J3f0%7Q80\(TLW]68a`!pR+gfZ^a7o%UZtXk:1F&;)hB&Kh10rOKK$P*8dE1gWSN()jl;cn-7;)rV*sHY!BPLROo;g2Yjr1S=$%n_?]P;6l,>#4"'l>pZ0'StT5h'o*mH4J%?RldF$-BqKQLFd_q#VLdnM5G91Ppn=CiUQ:pR<LoKDbjD7UqL[)oG"@87FRFs6LPIo@$h>c,JaHE^hqN*hJkA*&3EArCjPSLW;F?%0SP56)b"Fg,!BVS"/V^[W2F8$B7F_W2Yh(`DNddKc5q7([YstYr6)2V*Kl#(M5I/&GIfn]Woq5N@_:7^T8j<;4Kq>q?+I)V9-;AY%#_Ib*%"Nn0-'Qk0C.++'ST$Ej%cfo81qf#CTr8J7)mLnQkh]70.q]ZYmSol%Hs<WrDk=:;oD5K'F</sBcp$ngiU_CX5]`%angnYd%rS3Cek"OQU6gn!\H$uA)/@T2ICe^:n&r&i72o=RH*sMhCjC%OX#D@odEZ<Xcg=M9SF+ufdnJP>?;UP9g3$/(A/O1P%QsgTj#^S1)%o(\QcVA,VQ/?JYf43OKVlPAuTo-JR^6\<S->h_k'r-J0D8q2M"Q<GbkGq(<3^^$rP<k\h'7q&7D4#4F"hQR(E3^Ig3+U:OMhVp;I%"<P1bB0<Bj/QI5<LPe^Qeb^LQ>f;'52%.3f)d)okfiY\t]FeIu9d0p=Pu]P_KBp3XIFFs9APVu<VTsGRMb>eSI!LRG6T*m-oKHO&%9AJ]_+*=oZ$M'l/n_!=e"aoBC'%GC,fV'lUYl)`gR:`BkNc_EKFLa>Smb+4Xh#h3:H%NI]5Zc-qH!i5S$C(,KlE<ksgNGlT0Diu4%N=Q7ClnePd:&rNFI/u4<N@Dr'DVQ9s\VrGATAnR)eu;u('82HXguS\ST7#EU(qP1J@%?O:0J4r#S.4T:_Qkd$@1`3.%^=:u*YiNO%neCl.PYLrU*o1"-U$Enm/H,X'$DDkgF3LSe483!!Du(Jf88t]8Y`8)\o`.fns/TQ[NEVA3N1.='E*$TV;s#R;RQT@R1FFtQ7DiHU%pe1q,2#7-2<WQT8&Tk3Rr$XUaSJW1sZ^mi[[`3DSmq8h#."^"u@@U#'n*%R),c)?c):H!'DEL)qKL'#o80tQ_[+LaVj+A.V$'))L%.pK$DK"*+oV!h2Vi:k6YdVZ1C,K="@`g**R`p2T>"2:.$NW+7BB8Zn<3R03/A)E/7.9g!ULfu8)(K=$XPj1]$Nt6B5Z$Rhk*D2![%bDYTh\?4NfE&]55Y<-CP3!+=qUn3+TmY3TSIWp])74c.[%LW/7aa]sgo=EI$oY/J7\V9c]iLn.EVMIERn(XM5Vi#VD%5ERnmBmWh%PYi6=@d3"[K\Y[9d3Bn-q9?J(bk5kuk/+_MaE0\EXiSU]ObGk$/81\1c[C;pZZLKf\>:]n2ZoC4bP\p`2=E+nBN3VjQS6:G.m"<%%mg$$R]a.XE@l_R@N]S?UGgcg;Ej3?Ek.%_O@cd>n8tun`><m]oBI<.3q`Es+P?>UT(6TH^hipJWc/o`&+6kj>#:DEV#L9%1VFT6R%#J$sSdnFs,#c_X-Ieq'W2`<VB`2C'Ff7U`iIL1:c+V53<HW8YZ>/g#42+Y]DRk<DR!!9`PYFXKog6ZohdeTTieE<[`@4::<$3M)-%=p+Bd&L8%gLMNqt_f+QX\LNl3m^D.gZ7`Sb?Ap+kU@8pf9FU4%2.ulO(oYb^/AB)l+,,0-C=2(_oi,G7,f:q^/BLQVG"Ut]!pU/_%'.lN4-h"#VL8nn<M7_#MV4JSNaWEYE6kAk%)1=:M%\fq!JM"NoaouL*&f#*\NGgMt2ta,:5B$ql6Aij#+c4b,U<Tl>OJ-k4>*aO=%&VnP*1J@!Cps5fb2bU%G6@bf(3!KSiZ"jj2N>oMf'SnqZjrtin#jg1t6&uc3;L%)@#Z;FKpIm`PC0tN6a"pYkbYZ;>=/o<jF`JV^%-]*O>3K&OoI.,)i81a@R;ka)*p'GD:VGqs1Y.p'XPgm`=nl"WVo7Ugc_#94Ej;pt'+S<2J-G'&;6S+)#UVrpS$cc2'I'+!45Z=;'%N"^Df]_V*>7oq<4R'HmCiAFBEr/<&b&f>75RaBEI$A1(Q>ec8boOueFU8]Bnq.mgrk@/CR\67Sjet5q7bnH:f+)V*u'aD:nce(T6%e;T01PpFiO]d,FOOm"V0.ui:ae+q.I-]AG9HH/u99*EgVO]q^"JoGqS"5TBZ3g?\qZ2mKqH7sJ_qc.A&,D^j<(g#,,PSR/#";7N]%<Ih5s*>)l-oBfOdd.\"./qOjY.m.*B?Ghfl_K[Z/Rd'6.ZcQ#CNb[^O?''1=6&$EPpS\hG1,<o5Q&qJ-As8eK>]a+dicJhg+[Ed!%QtM$q0jl["6_JqX'PO^#'J2#j`S+MPNYK"5Nk^ZdAND0-rms*'E8f+H-d,re.R%`iJCbDri$4$?V\eeSTJ,/k_%2N2q3T197kX?k%362CAQQY(5mMFj+W=og@Ii2sA*W`b3fcSdaS)_L`UXQ:UVBQr!Pe6OOV%a0^:r?;*[F]+^!,'/ClRT]:(=&qU+N%UtD6_UH$OjKH%Ji^LLE")3PiK(=s672C!5Dl)iXd6$(KNg$1q>9H!\USjfqI>Eg3LSD+0<<4<];Qg:kMPNArt[hH5e%I3n4[iVJ$$4`m_DS:.nAM7%Hq1sZKbGZX@3CZ^qJ&27SA],?g^P@6e0PIlaF0et4]UR.mhU0Ec>kH)D2u.>CD@A`U'BDQhqQ_.J$U>^JKXSM-H^e%`t!^.;uP6R%(90d?en>>V=/m/.g00R'PpaOR2PtetDQ7la>NqOQC,n\dSFR55cu_)ZpF)4qa@RE\(.Pq+JQ6.-[_bmT/Dqa<La#.\J1KJE*ZUK!%U?rMbTN+,Yl<J+p/=^m-g^pI,a?:2K%?sZ1ZnBSPqMAYWkRfU\^44p'Gn/%8KJW_hd\V!8JXZiP+9==0hKgcI6VMcBm.sPsX6'$]%G*!#48c1n97nt`L&Mou/WnIUHD^^[J1Y8k$'"VXV<#EVL`Nb)O/Y08Bs0)d$2_9Oe1_jtMGB3gB`XZaiD^VVl^o,mFio*r<R]oH^%L-IMk\$X$_p;#"m?A8R0hV5hiEhFVJ*uR=6O_dl()t]PUm,+k7I18Z=*U"%BD&9,Q1;VEZpSLU\FGW2f.gD<c%]Yf.?\4;j(FTAH%"4fY)#D)O6o,dbpDg9DN(cLSO)5sO(h-^;p/MCgk*gLI0p%#MA;6g9DY=:9+duAdbS1VS(%iF%F,\0/b^eNDr!u7c!]e/!/lk]P2%D`TfZpo+I5dgW%UhusB$2-joE9ZJ80&1t?j11gJsQ'E`IH#8;#Go`B3(n3l2VX'Jj3.GDXG7_Q&0f[O<8W<_CieL6G\q"q1%\.tk%"[9`.PpIR:;,5nMOK6t=o9Su7"g5lQ:Q"[`cq"P,*l?,g)9Ko%RTi_?)11N<^lZa=dH4KIEZ)#nhX2a4RJXJ$323\FJRjnL0LWnM%,N:QkoT\KO4TcbBW2BauWqBb)@8REFmEPCVr1UDp<^$WnI)<p'H-'Dtasu4Y"$6et^jNHt!$aM`IZ-]B'H>,+Z&;/^noA>t(QU%2%DTVkRPL<13lJ"fP$3!t'Li3safoUHC:NQVPB`Fed8N@VBSk"CTro?9!iS0-k%,-9"A/!67q@i77@_QS=(N\P`a#),T[kI\&S0Eed%:JI^S9rpEqqpFEJk!V`N6k%S3gq\bq2mr"52o7Lm_7ePP3&iP>>8HBThu2?^h'5Aa<fFN7b$VT0-0hU)Q,q]Be%?.!Zb^Kn"/f3U%E2Q7SHTTo8CsL*jhX_T@&=Ybge0_QaG//c0O,7MHJ9+f!YP7X?:`D77j`Ugr?*-Osb86/jdk6-jd#m'5W_"e7i>;0'ZMD!<"?2H@%ADT!;cu2UR"N4T',b4M/GOh@&\gJEDCA-3`rZ(\jr!;)2I8B@A>^Xg*52p,#1B920Pu>=ts(sY_<l\1Gl"n34RW,e_>j-1r:=(Z)%e`L32oZ`*NNKuiCkpLKa#h@o`W\I_:$A6ps!#@3Ja-4.prln`]o6WPF.d.9.U\>gaT+TpRn`&9b'SZ2m"3lc>M;@K!+8kBn@)M;3%>3MK[<L2[.Rl8mgd!$>ps%]6\n\(QAb-U#!mp#RM8DK;fm#;f>pHbt3k2\SL,V<)uWAO/_RW1f^IW:pNmB]*Tq*+W(o+S'#^@rAm%Egp/=2la5!N]X5.I\j$el](4F[FVAmZt8tH\8q>ISj)f#l:hjJUR%&Qa334c7).1>lPmk)a9PZn=s?nQoof-2>qJFc\mD3M1E)Jd%/%m:HY6DU36!HU^6`aDN?M+KGr&bYgB&<nEp%u,UmC3o<U!gNqV<QG?pCa!h8o7?$L?]T)^&$#ska+?31qDMEiD+V:GkUH)\h7"T%.^_96[H'K:FJ*Ak.NNK#0taVql$_O1nO)a4oIAZVei<q7$E`Dr>>)HD&qAB62!fM\-Ki_LHBj)5PkNmC>;n]>V4\U<=6#!nJUg>4%<TAd+)H?Re_3e!^8[kO_bU2SE"^`0+h-S'X^>6J2V(Qq]IF,/SFV3[mlhV?t1aQ4<Es_ttA8Z:[faB39bce.U(<sN"Q+m+NRS([k%D>(hJ>54I>Wg:A1Z.aOJ!k7p(WYO5kqUn8LN^m!Vd^pH9C051nf$.-^8jP$q[I50<O^L-EPudi*eKO85l;lX&hBi[^^&KK\El]Kk%[Il\D]sucNrCUjc?";Y3`cN_ZWSo@%V5P0'g?2qL3&dkEMS6)Y=bB=b4YNG001r_%entEkBVeR1]3T1+18sgiN--21*rS_"+3*2T%3cuZK$G;a2D.af41otdrpKk=g.V5jPj%i:^dYBBXA)'/Ram6CCnEhS4.ZK]G>5)-YYI&Ma/ZP)uQJ8h(_m%Rr&AooudXre/q:mR5%TMdPDXn:rAkt7mr(;E^H)OXi?GCl_9>T%`W?"j;GAM^JK@(!K@#,2mCpi)<'W&0P%q:(I*S?MS9?1;RHHU0@s0##cZ2Go$39PFj+%]ua0`!\:,@:#RnrO4LJK6)D&D[Sh!hlObU@49j:e"nC5dc?YsIeV7t6CGf*r*UfIgruHBRgqM0s?XL7NO(INRpT-/@op=!2B./Jj%mWi?'bJd_icaAgkmao)-71(PpGddlq>oC;aWB2qT7;I1j0YRp-mYZbfFj+$=8Of*u*55/9^R_IJV2Ga"]NoP9BCqlrMAX"`DI[qR%/ZSiZI!q-*BGDQthJSP-ElG:LDfoNV.b:SE]oelbf2],'T?Z_-#&gQ;H6W4Ff=[CHbP`CJESnKSi;:a4V8BC2^>'h#2=gUSpKkoX%]M5qRcBipYPr3fY]4kPje""8/P-:?&RihKFmjR<[m0S'b>9/RV5>AjNh1A`.lhgDM,.%Xh#&b;B/,tQfC#2Hlm'TcYU?DKY4#cWV%kh^gDrHT!WU!DD!)am<_94*q2J'YRlRI0)<X8d?rFXF9[ntkbYBBsR4ikDq;eX%,nV7Ve^m%`;Ehe2]@'"RSN@r;>)mMR1.l7Ot2%*>^<Bc)a(-[877<8o(ruDSp^*3HoJt>q_T[1W6\(E$i8AlD8nX01ONla.)"b@%mkT2*G,iE!2nuXJPQrg@f=d:r1$p`Griil2oW7%r.VluJ%b>G^74U^!'XmFI.U>Yrb1OBKf"-TGbobH9FZRs\.\Fb="]6!q(J0(p*5N"ORh9?(KA)tX;AO=d']D%PNhOb\^:(`RG]pX%pRpkQn-6CdPDh@n212_\#jH-XS:iCucbO:dI's3!_mjBiY8>]Grk.f6*$H-@`2VtT4G<8X_#,V"b5lfU52hgp;"-*GFMYj(`r$5G%aM7XF?YRS&aMl/[HL.Vu"'O=KHN%g'*'>bTYm3$@$gb]'%@9SN+`ec=]5Pd7_2TK?ls8Y:mbj2n5TZh2%bhP93/aK4'`.c]G9^+W%VcH%.T)F\ZkZAt9ECI&k4]3]:PWA?J=s2s%,o9@4p^4bc8:bI0L`"-2;t\&HX>CR>_Q93N_o-j:Lge7ma4k$ZJH3q%Z,6HdnSh;#%X@]KiG\6SI"o!S`N4aNIh\FuP5=>EGf`:AVdQu,j?mJtP0U0V<Y7JRa#tbg$>Q3!==D\GY!Jd\3&\IB4DBD9s1D'=H(C'OZ.F)=]%GD3j`gP-ZAiDX_/XbokInRe0E>d7X=I/=%rbJS#+%,Jj\aknE`W,nbrFQ:X@$9lFi]`0<sF!eVM.PYAC0QcsnT0A)MT5mlXc\hco%\0L89,[+BHrG.gGl094*CEt_+i]E,/?+g;oa!9Kp;"b?EWGB!$fp^P)X$iIQ#YtU'JK<W7*ssHYi7T0I(=4c,B@JN+PqC&kS;JDm%"b?W!!q?e6'O_CEiqJ'I5j\=P'dC,)>f_B`X!,a.pRo6*E5L$upqoD-DQttpXK7pWjlIVl'^o><8hf-]CTI,ome)j>V)GTHWnu1t%Q)^ZBM_.@^Se,tkr0Rt@[s5<(@Rk+!j(GMIce&gHgZq%=Qr@OC.e\76X3B9\g^*.!i_9!+M(`bq#9l]bXieqdOIf%q(10n7A#S2n%hAMNBg`sr]5ms:M=R#/*M3YZa)a2kGD%X@&Kble>ijm'7n`'j/B60ZcSq]8>_i0rrFT2X?qO?MV-`t-#RBXOu-=^H#4q%67bi-t`%YK]BA$?2XQ9oQ;=1lKn"JQLC#KJj^.bJM<;<[3IB3Z,%N-.1PZ5fe-3PE_qXTJW8EU9i$Cj[LH/YMW%G6Vn[X&Z_Z`Koaj/6d1+!%!kht;nm#\$?CTLf5d,Wl<r&umB3n+(Y'JRHBqNYlGN6D?3)9$RdqHK;9B'3K7Ab<q7]rBW;(P:FClbRRYN7%6P]4C2hDYiVEc,;^%V=0#1N\ut(rT@Au\[QfP:OQWb%n9T=ZLXk]=!j?qI`NbC'ICACkoDkKe?^CUJ5G]-W\M9HQpU-gW3!@%./^Yi/IfX<fV.r)I1s&e%),U&J#p9!eZiI4Pl1A!EZ>2lfKHEH8+EJjBF_$%de7BCW9K!%h_r_$&*9@:k^S<2N1-?t;dogK=#H*H%A7QR9:h#,G0nn/.B,95-%&Zh,LcGDj%-iJ9[m2+=spWReXa)(c&*h1,"`+'8dF.cm!feX!Pj]G#r:kkcR>IM!U'4UiaJltb,HNkIu<+.A>lj,,(VoYCQH'gbX%nK"<3Nc0h4M!Ksd!K(Ht4=jt.2uA2qCNH(9/NEYTpWX\8a/g18d#8e-bTg7!5^t@NjS+32pW_a%"K:j'aB.fKgZARenRp/prbS(W%fIRG0MuINt1<^O;O/rf4%I(Zef5f^k;3CVH#^"9hK]<8IY5NEQ0n7mNYBl0:>pZPZ,OuX<3k$ce]AnSkYDEX/oWh\bg_L@+4Z+_j%!B-5^2$:S@/="WmLOm+M((>_&BW?)-ocQIOO#7P,2Sq+S[1Vb>,3j42QH84DcSgb,@F2ae8GHSa%bKfBX#uR?A'Jf@?*X41*as<]%A'EtNV3MY,F#oeq2FfUj@bFi>`H>C(lRlE^D1o9B-'.-Uno<doM8N^bWiV&,KK7[`XZU9r'm"0>:7)p*B6h'^:4U:4>.KeEo]k#n%3d)"OYYXL8Z@U'A>8h^=g#Nq>a@EO[r8a16]OfboFCC.hfIqb<$bkp4g$MLO*O*Y4m-.2]Ks'FA]YW[[U4O`$1qg(WmrN_oX("9'%-"TXQ-Wrc;$2;u,P?W>nntMkHhYPLX(17VrfppVkGdGLD?khDYP;WaU@leH/]($T#>Jb-_d(&i]EK6G4^lj"aMmpeUbd]s)_H'eP%BAec;17p)EZc&lC.-2F"jG^IeRD\SPa_dcd7FNN$jaD%^YGsBQEj,]OCE&u%B<U>H,<>;(k:lQunps24d7E2IX-O['=C8Xt)oS%m%]`X.(D+q.6.#>?C/MX[T\2K3rX*W4t)S&MGjWV`Qlt>tA=]3IL5c.l>B,M*oRaB>r2;sXep0quhQ;eHt5n"5`1RsF_O29o`>T&TZ%1&0qc,^TbZD06"R'uLkJffWqe5T=1'cqTTT\/X_ke@*oW)nI0J70q_7&IW#'Ch`b()OK)SS(#$Pqt]sm"#A3+=ImF"Zl=>-12<Gc%#QC[94P*aLlpf<MC3GK=+P6VkRB,@1UfLrO+gR6KN,is0&/id!\deDY!&'W"p?%T7?YjR<c/"jM:0'A7KALMtXiE:C4g_]=BX.\:%1g^@5j`"#Bnm%e4lHRO_-u*,s'%UlgnbTu*))"$t,>K,uJ1kMU3)[%G"J-'X!0?4rNc>J3\j'&+dSe^5j0gis/l8"kUmDh/Uu`SS%mVpNt%E"^L=mL]gRFGNY2`KZ@GpVZDSI'u`Kr)EPY$Q?7B&t%1gf%Wb4iRt1e?bIVe(be@E8`%V5&;gQmN;QSWOW?dBAa;Br%GM&%kk>#!M.qiU95VtLPh<(6*tH2SWb:9#N6BiGM(6.sD[D2Yml.e7WdStsIsq?m.."p)$<t]mOKbf;2B'dmkY(9\70CFR".KrN/6fH6%jl>P!KLM*-..YMCi9*ZjBKOd7If*m-(&benEl'TK01-KpJ`V0+f[@L=hO1iP]rMgRofNNg@-PsLGrLtuWjE0J(/=Z9n*>U9m-'*k%IhiN;U]3F_$PXAZ)%ghr8%!7@A%0cM@>sHOS;-%[I&[Z>C&aPX-&*n^1K36bVl.BELA/cGrB,%Un#!8ZiDJIN@rodKI"m4R'L-eB%.I,;ZS>m`0lsH896>n+3DRpMP3;;:k%%Y#H^5G>[>[!W.'r*>ON":jabDtFiffY<,Ft`!i;300L85D`+O/8eM6er,+*U7S$5,DUI%6:E\Nm@is(Qfft2NVS!['@RPC]N41KZ\,f\R1<s)p9\2Q)^>#88;E42Y;C.blfGOn38).a&&@&l3i(EaU$da8I5Sdd+eY*NUA;s'%AK?qV+.[UN76=Y</h_+sn/A6J-b4.n[3o90cEE+chFCH>NHo5KKA0Y5^jW)lkpAR2o=88*76B-oK>.":RPFi]oa^n#"Sr0l](/Pl%K,M[A'R#OT[G][-<TdG;6.\,kbZD9&`S;"BJo>_oi\Et.*gsWlYB(f0OZqc&E6B`h/0&.4F>e;lq]qXA6g3mVna\0I4,n3mYu2p2%It*aX_\b^Q4`+u=j2:t'YB4XmG&qkh4jn<bII_Iij*EpHbeZsDFCE5UO9O<G7E=/h"m0Vr=1KCiMsNG>kQWSTV6To&6W'h9^=8ml%gQPf=O-I6M+1"`JM+&c\P_Ze0?gqSP65dTX&0i4bbbpL(NP&fAfKm6E`15e5qWf9/:"TNPlP_i&*gG;g&PH4;^[kl[f/q&Tc"01M%YnB0PXF$%2q-&8!!i%,QOG.@Q24etY$Qnebp>B<f5?">KeK8*]Ub@b3O5"ei:5+PMOI^/p/RLul*DZoDIa[b-d3o'7#B/=D$hO+>%nB\78UcQQk1>H(^08^n(.:a4Zki55>,bfJ_TaE&C^Kqc%/OC/L-'3oqk\rYOfR*n[)!Yc89^Iig>#@+o9T2&jQoVbOHLkp2K0jDO%!M(CFej;o/G?NQtb.#lD\.>\!L_#:Np:c>gjgU!efU/8u].JSs73IBM%TVhiD.O4<:`rXfZ*uq8@p-"BR5h<-UT/t*\?Q=S%dq[8%Su)oY*nbX!<H/e*J_9U2euN_'A?uVhqmCP<`KJJ,%R&&%M\1j>>j,Ss?$jR#Q?qb'0ZHkT0g6@9XN8BSE3\Rn%pRm&nLO79p"d'k%5n@c%I/uQK,,^XO_^>3Y):??bj]CDrNPo8Mi:I=-cr3#IFd2W3XA5\GXEe1";Y(o:.e1Zs$),7Yc;]?/9t/cC;q,#nL?Dfi?3FZG%T/G9A4tKksB?#=)8@]*H<7NliB&[cCX$UgK/(bs_s#%_hBBEG(QZNAOe.VaUkn&j+_uVSks!ftU>"^7?qicNY&Va[WjUD&!m-W'5%RmU2$$Y+qb[=IX+#\&t`fIWo+$M9g-Vju<SA!k_DM5&j]j55i,K`*u=J4BFV+PQR;fMm<2A8fH_=97]g@k:_B:U`?l.)9*boAH#s%etR/0$,[H_.ha^l<q\m,$e^:%!7]IqkLA6GqI/#:_E+t2*W@;!@3_;PBNOjsi:cm@R#KU(:G878%ie$YLrtjjfP`I]%\t`_k\/QO%O6=MjA`TXf)='21g5/S_pcH!ig+?CUq26<&aA$_FR;1F?gmZJ+R*k99']#Qd9hM[CW,1!jr',cI2JB(5*i9>H06cRlRg<-%B_fmc%I%ms8*)Kn0F'hpr#81(<MXbsahdpRhKN5:"3V*OM33bo4[kMI1#9VfBB4[BK;6d\Mhe'SuX)dDLe)TFuTQ5BSemS?lJdPR9.f9\0%CEi+/#Q![#YO(sqZ;9*p=$c.*Q?E6LKK`I\L4eHprVVoo\)?`$>sP8<i8H5)/u]+<LlOp1*85f_\nu>!NOm91C94HOFt?cpf6(*B%6bbm+*hf_Acg1^.c1Pjp<T.9YII8QLHMa6+S7C+gU/[1O=(<dWoj$bh=Fu@Y1I.q>k3@6q2?BLs:K(?N4]bWNE8cZ=.a2,68KF-P%\?PVe5(Ebpcd%gIQE[C&_hq7/VWu+A-TG6HTP@nhaC]^W#e&61J"5UX$ddK'3;Fh]>-I7S'j%!k4V^#)@i:bT(h`b.@)"OnLiC@\%dIF3QZ@qAE\sF'c^Gj2A-o(&.E?Hg6i@Yu@S(4W?Mg;cm-OR]0H&J&6*bTJ#*ie&'IYNGp?E7P:02:bedX\'`TS;%H7+@]o"l!X3%GK5!&_2&!g3M=3dXmmD>%5pBnjIFS)bu2U(=ctd%ppe!-<+rMmNem9oK=tlD8BqDKf$I@>_4D;YCjLD[[C$9BPneXa@<VspJ=^7;%6/$;`h!H!R_n_RQB9m[a&QhB3*Y[k,ll\XIe?d@KjO%*hqM4@.cp"4,kP-i5+I`&W=NB>n'a3S\gXLft0ahb=8&mY45:.n;#\eRe%SM?cejFD`0RMH$/[S=#[8$4)G>N\/!%&%sm"75J^Z<-3KYmpB5l'=6nqo<p]mV0K94VT7Hbb!oG$\VR3\]a,7@3+4V`qrAd/f7Kn%k(5J_%c([u)>+lY?pO)S?o#NiV.R[M-eq4BeDq&O-79i[gj<Z#(lCBH#V5d(/a$b[:Qe`X@UYl/`#2dMIRItTLE$07,:QWj1^!F]%+'!"5S8cPN5[u&4npLmm3OKPq@K2.Tc"TpMB6S$[aL,A(K-derlT'02)l&!RnXb?k[>kU&L91D,.Td2pHq%Y[J-nIZZJH91Hp"_6%'ND;ce9>e0YhmZlPEGNmW*kDf:?u&M1SB?KX"Q,_:r.IF@.>;po:^d/0YrN^q`Pu8lnuKDpKXY)4\W*%D8.HmK(YM;3R<Zlf#%XF%SEE?FlX>CahEN)3=HA^6m&4;T9^od7IZ"Qa_ZZH%lkEF'Tu>66$J*)t.jN^<TRui#6T5gR'c!g*$+;k?N=+6n4e<?jd[<qJHM\IR%NQ7'k@b:`+ogi'O!CZ4@:r.IF@-osU^IJJ-@a3m<<3T\%2)jTf!>V\k#r]cnS:h7#':V]D')in$=H>JUSWLTR"n1\Un`/frSWF(R%_+3mG4;em8-T8lm"=U]^pqsDi%^([1M_73-LNnXrLFtb3>HD,l3V@9!o<f:eRI2C[T+aWkEe_2_c*>5K-W-CU2mGA9HFeUKh8JI.%ia8>-C'e*lbT*_;h8JII;9Dn1hqUqB^4LAb]%BLh+$[04=PpTH/j:=\XM5^s$5Q`2dBpgLhO\6)`Q)JH:V$!oZ&@K`[TFHi8"bd$%LFDTJ/pA.<Hp"k4d-Yk"k[Ih,#L;`s*aO.U[b/sqS"P[8`/5Um/j:=\XHt59^BiF@[TMa[UX6u7@Ci-ee';-$5o1W(/O"QckV5"&%)o5TO7&(i\/J_B4N^=O(O"Ie#O%1!.O"FCW1!Ae?j0?RMk9jJ!(E\\i[]lh(d'^e-Yf6N'n&M,[O2i%%k$eSB`Q*%p3kN9R](gMd%Z2P0R@62G;MiA>(<j^U2[MZ.n*K)O.*/fRIXu_';QLQ#W;*HtkG8?.C?nG*/SHGY2l\cOTr$tR<K2L2?a_/XB>Jl<t(8ItNM=9n5%3"JL3jKt+,@[+:`obj1thdMcDET2al3^4[\I+3Fi-=Y`%r%U@<cTKN8$L=e.Mr<AmB6ck7/h66^=D&N9D#*_6'<ob0cWhKEFZtK;%4V-+HL/._gpRitdGouqW-a:mBR.p2^S]sq44r;dQe?F)Gdd7Gj@\*17s4g^h=^@#*0)e#b=_8.IQp6:I4rM7bU:P*QfK$4^HKXsl%+6tJaFR[#??XTFI,Gh_VSRnV'c2$P,cH>sf5DOA>nm^e$3a5srq@2"YMb<k&=Q`%19UuFSC^%rRH`XR/M4jVC(tRBY^RPo%/FW/l%rViG*3m3cqf]k\QFdD4/N-kU!=D+bMr#)TBN-)KgruBTm7XL`kljd=&Z]<rC"'B2]`=_LFr^0e#j^.7;LNPd@90*FGHm#UT'@p;U%3hHYBVMfRtb\SCY`ui/ZC[U?[6WiMM<^r+i3m2rJ4h]gE=D&N9C^n@/)V/&/WF@aDlr[n'lh'Z)4V-+HhP,(_Ru7fr3lg#\I!Vlh%3eKsFl[7Ka`>XTl<b<%qKlr\%YjtiJF(:bjJ!QN<XL%8Di@]^HKlo<-D0oTjZc+r$?XfSVqih$oelfW-o4P;Q^V)El+7!b00]cST%kJoWa`n2BN3m/##hpqO8Yg,!eahmrVXRlFKeXsW<lhQn=A"E;e>H/Y?H`XQt*7FdMKQZ.pp\tNM=f/*X'0d#Y=WNM%.BKj<5!^gp%a0<j92YiDASRhhjSoaQtXRk:PdN?:dS)4-c2QX6tMoRePr]Sh8Rou6dl^ZWM$j+l1k1%:0+-14"=6PW?br4a1E6Wb^7`\i(o/sNp%F&_`P,5"?/ZT5$gcB3U3CGn[?K9:Ns>dHGjg#RnCUN"J*$]Ip,2Wo@)c/ts:oprstj-n4ibpKnR+,+Jgj""093R<=n2FfW?,^(rG%g&*Xqo/sNpF&]Jj$hJ:Vc/ts:S+AbPAogp-ZnU[Y24O()6Kc4V!S;-OT>BD6r-M\T3N@An"Pj`2bpVk/569AP*k]T#mbcul<A!#o%2':JCC`1i@^)pH3Vt;KEZh\:`+Lk4e2=!"F+WE_CF;A-Q\I]>7\7Y=reVV:A_DRg=XVUmi`P2ZkZa(/Va>9#7a>uNnBAD25=ZFmU%Y/5I.G(Cg@B*qDkfi:#`c7[Hs+3%5C8*oSokh7i[lmeN>B,>+C9KTinBA;*n:rq4ki74GK;QdduSd]u"M-c":(`eS@d(^F98)W^e%6#g#_flbdWa2'3l*i$1^b@$sji<;h5B5^qcC?2/+j;t+14>C8Q*n[=uJlS"]9s68_I29/0R#L,tWH]i,PUrT[]5+mj6%eS[VZQ&Z%o%$%`#cr]!R^:J&M4#G]PLZ/=1rI!J#[+9PKZ)Z2,rCD=N\H1aaRdMDTTH:oXX_R]oDHTN=t:Dc>%fNQUKH%;?,&`MX,c<:ogk*_%qs+U#\0UAgA1Mmp4TXj9;_%'L_#')kiN>rIj*C>4jN2KIj]TpN8p5$?Z'(2P9%(-cm:dXi,#\0$9[$Ab])>O4##T3rr/UrtE-lr>%O%VMSU0'1(-ltjRW_q?V0?q,h;:b%!'at,DagKerd"%"]F%?eh3@^@Rb$Q9^@r>R0V?6.Gob0Y#kucSZUr?E(6(6%W/Ek:h(nR?.%<2IZNpGo9M)L4Lf*=YeZ4oGk'X6=4)k?V18Aql=(=@]fELU0tkBS<XrG)*D(FL5p4I^7Ub_Bf:GG!KlaU8-+0n&]c5>D;l>M4K*N%o=jq`USE<Y9#)&&kX/Gno/iJEMG6EW*lLPV'&*p&F97kr-BM)M0aJUZdrn9T*f>osGb<FCI;b%$"]1`^1PeA!M1E"Y&-fb;1jc>@%Q*]h1XD"]N05d#7s&]Jgfpq2fLL>edYNHjA:<8[iNpi_IKAdU.UXA;qT04J`]WoZlQNT>'$R`%BHdbnp(b#augGYY[JUl/*W2j+r%'9?cdl#L(;FQ9:L>VgL!*-GDTK=.pHEEt`V4c._\J1O"`S2t9oSL40-eCEX:2ontn4G2Ttpe&VjnNKc$B&rGV:`uj7eJ4,*K3Kqd%(9OC[<m-5OUO6pE[p"B`!iIZ=B_M&L(KR*."eC@Z"0J1#CE_Ph/PR1:8<6oY!\N6SpJ8E?$s)IR(HD@ekE,2"2]k03f4IJ5&>\!,%6aHAhAKfr3ObaeHEAuqr_o!*Kl?%YseucDa8(]hLE0&@c4,9<ghDs@n*]cO=i3[bs>R.'<ePN:0*PB9"3%L%E[.8rD*40RKn#umo%r<`b0\1?tB][4ffQ(6SL>ckF7XTU45?Y:)Bqj&A>^PHi.BL)o<4qk<oL._<fP?/r!Z__.W%^5=G!:he\*"an.Kk3HmGoWmgd?A_Z%l/-,^JYHJPA%9@15?Hh*4;Sfi#gos/n=GGaHTeSL6PJcVZTUe*%WJl^<6dh3UUl$T/@QFgQ>0m"dh/R5&)-S?4Q`sWBNUd5X,h3)%pN`nq5_*I[=QbpTDP43bS5*jKEf3t-LY#$,`]E\7Pm"5-0>5@XppBu`7Q<U0nn^!^i.)?q/8<c@J,C.TjKu[Kd)tSWpuQM;Zgh0W%XYZO/"9Hd,M:6*fCu6,&;fUUW%BU:>Emd=O5lgIY:3(s'3cq.5OiU9gd:e`HFf_MoZI@l4$ZrSUi.)QSTMK^HTW34bPFN[8q7CFE%+>H<BHhUA7&hE6>pJ%oef(1[]L2!:Q\s-ZjdnDupG[r=L8"KN%N$;@Kc_+n=2ona*%&81"_f(X-J=b$m+_TI!g:bk&@@-]]5d]jf%p8LEX[H]ShSU=di8qQO$7*)FSU:\Nq8_,;]FUpSGi)(jJRX8*qT:?F^nO.n/4Vt0*Nbl.CUGVZ>5gZO'(!fW6mYCsbZI1j=\``qa%i/[NK'Qm4)@CIT\`o0t2"/fo'92td87B<RL-WF3'nWI"O38'_#l[d#q0i!I!1ZW&%H<Om,\TtQn89lrd;k:<^g:e$VH0*i#D0N[(%;To^8X"&$g,Nc&8"4BcEV79`L)0So'!gU&N)YeZudg@-PABmbJF'g)f6[UP@edn]pHF3D(<3rmdaj4curb8e-fn'_b4$)jb8T>`T%R/jiXX+7@a^JYB=)G#nN`A*Q+>S8$C-?>O;cE$iZ\Vu7r>R?A"\61[108N$VcC:=OEhIhc(:<263cSS^qfN0Sie8r'F?1_LkhA7/%[:ntKX1c7WYe-B!!,Eic&ZjBnc!erUr?:mo>#);g)ZGB&X=I@SlaBT!SVL>_lYHZ?XBYBOZ*0WE-h`i%o[oZRGOK`q)lc8GS(2YL%gEj;s)ojuu$A<0a1u2[-%>;C.\/DL8):EYIpRH:;;0U@*ef?D^c-4_$$Sp=%\9m]@C*[8Tc-!ijD)-68jtXi<:pLlKpDWDU6F;'f%Rh#:!OENIMm!R+CMVASI]KTeYQY;`?N%5C/ZN66d)SL>&]$2[r%?Pt<FlV!0ENR>slLZ4H)\rWbKf\;WeXK2,'=oqg;?V$O`kLlr%O0X:d`/I+F9b,$j"Ep9NQtD8mMN1]-gVd:5NU(>e`X'V$<4MKX!o350@cpsNn%SjDYn^QTH,%Mt@kDr;GM.J^9fkW^p&(&AIeqbt%_q/3l:Wn2%']SEC$ksP/ok,X:Si"'i3D63fBN64HKYC=u0<Q&Rg0A[*87#/S2mFa1q>C0t`p-&Z8LO8setK3/P9E:So/lf.@GA/!%\1?W%`MYVM0(/>KbA;-eWapaO@?QI/B(\J@)u9]n[*06I0C9:M6sfKdD;lq4\o!4rb.U'o-$k6XB&F#($NBa_><HF?+=P@O@,V:<%o1*EgM>,6qHbXa?M,11=fjqKRo$T_bNcCE.Ab%;h+3!QkFrm$B7k[d`mN@A'AN%qZ:SD=>d(N`(@ak3l.5UnCB9SSuBNhgT7G/Uq%,$oi70Q\SGb`C29H@?Lpdcd0bDb%;-GM.25s68'm9J\o0r8`:19<uff$]$Q!Ke8,D*pW'*(6"mOAG,51!(ad8Jf>u=>R^QoqC2nk%i/Q1C60Oc?<ldbHJ)PkmrsV%FmOI@pbMPMfn_"iu-$ae\&-LI8Soh.+[@cW__LV8HEd(kDj4o%Ho$b/'b;0q)/0.]RI_Gl,X?:EF%)>ED(Vapa\#=.f0%.nGIL"<e//PA#e'(`ZhXS0mn?[(+!DrINuU8k?H.Q8FZ4]M$Lm@h_b-R)m#pa]%smNokXptW%MZkpZ+AGm%&%+*H#UB?0VH6YE!_IZm&_U:&GpJJ"aVRNJ0Pf>`u'L0(kA5a74cY29/2jkda"W0hKdbtgR9K_XmcR8&f&*bqs[D*WO:)^#XW#+-Hm%>:agTTI\o[+!eg=/!T<JX.O</TK>**QJB\aA3aA!3#JN1V`_U)p\@KQE7NBlGkH1f>3_V6KqAkgFUld^b*!f'3>)b`Mp(mS.^6IO%-fgJY]7=b_<&sJ7CWkd[(RJ9B3q.s\[URoJjp?in?;H8`0b<.VqSD$2DP!DSYi3!narb=AN3TioaUrJeR4hXL"5@j_G#40(1CRN-%KEd]b*SJBN^Ok:4bpHNZ"kC79<9;D^^A'AM@"[HP8KL"+pnf,$P97@*gZ+2CN3q@.q]]B_cZ)bh(eQZ3[,NhH[4f:H07\@#13p[g%aA_:e/K.;1<1&:]OF&;pq1gS./RNlk/+B!%q-CD`j#b@o)u8b4YZ%,Ke3Ah0A_\T-0+s+BHpj%/eXfO4WPTe,ER;q;YK_H?&i=G"%K0]<N4_8Ln^-HSuITdor&tMbsO_cTV!HRoKBAn+P9_T,5MW'XQL_BUKUd+;=BndOb#J%mqL\lHIh9;O3J@Z[:S8k$?i)hLSf9jD'%'O&4UGaEd$hkcZbhQGe;+(43!odCM(%CEEBWB=gW\%AbQd<>?-Y2%/qe!U>Wa+9,oZH:+p%Lgsu2`D8+DlEM?<.fQUa>\/7<d5Qa%!"WTf;t/?>0V')ko@$D@8%G7$`C`.K/im/!%@k%XD)H\89r4dqPgu4(8nO[4pCrqID9uAg,Pd<d+X2XG*Li;f3Q^e[J;J<A0;:+\%mnK9-qD,5h7;L?F!8F*(;%K;L6I)32f9.c3o0^gt`nXf`PR<&r:RlpSY/5fXG<Pj.c+&^'-6lP.7)0AE+"*sOB4E/oq,9`;/Q`.j%HV6N_(6$V^@)0c_PsS"?1[X$2Cp)90I)91n5%h.oJJYe4?r6G&hOjoR\:]N-@;4-#R,V,B0W6p%.(b`mf%u!2^GgY8(OH=GpLtkd%V)ZIXMX@^K:`TQD2hg\pHO:&&4[:Q:E/*G6"cUCsYUtRm4+,E"Xp0R]Ld2WG_OnI;1prc7gk\G;\&fubMfH-`-kr5k%M!;C@%oEY%XW@$+nsZGArSA@]Q#?fi8@0=iJM6*i:4;;*#e5rO?KWB<T=;+[;&di,Ie4PLjhA3^WGWM:(@Hpm_J%i90uka=KGY"A`lm.INc[%C%\bk^41CAo!`6K)/,ruPeGG1;6X5lBa%\?WgQ?!-[!(QP<J>ae&=EaL*%i.<_o&kd-rG$;,N&mRF"5a:!JDU2C.*\e[g8dJJ=&etd%XemR.hIV2B]9I8tPMe45T_E(rCA%2b&YJl)oS@P<@:\pQ7P</](e:\haIRjKs/G8]U+;i.$6"Pk=L&#qQg*-'>30d];-9?MT$>]T%Q?Sd.5O/sg:\fPbE2quD.L&05o$INL5pO0U5Ms$,_p7@5kD_up^mDM-fo9Y'005NJ'G1FW3q.lX>)<e-0a!^Pmc(;*Lh^bX4/BPT%)2=J#U:e1&6BM^a<Opo!U.<&T*!G0,'uGo79MdX,Ki7=m'c@dZZTk5T''7hdj(eY>VrPbB^`*V2R0)c4-:an?'?-HP]:e]Ve.$ZA%-J?>TjTLNQItGDoSV$JYZZ`YkJAfn_n?hO@'cugOi-9U6?#RkY(q2XYZO"\0@@OH9HB@_(IOO!"InKOnkRXVW516J;N,P=d/]N4p%R25XYl;$[r0d$B3?B*nm6=n-BelN'_l>k"ba^T(LYLS@l\U#<Hb7dt'n&UapM2Cb]K4_lADbP@:R:d1lZffS$?V:-t=mcpVO::UF%hoP<m4mH!dR4htDaXBO&I2S8qo,_@Fh56V.4Euu_'Ts$N'2M[-37,MNeFOERFM)+^7D]:^"#uu0L/I?uAYJkkHj.aEU6;"\&(\&K%`7@+]PFKrP@)m0&::chlkiEkV"ZHe@l&i"\!YTQUW=L7^A4TM?^_DR]iUQ=Q8>P9YW)E>AH5]L_dS5#XX*JUa(iA)ZOkfFn/\.[O%c0-FqKhBg!m;:AhD3ABRL8;!Lr-*#p!>-k@oOaKH4RJ^fV]^p;?Y"X77i(OZndUBDi%$^T>iV/)s5s*F6cmFbG]Ad$?BM;Xl2OcB%1BIaqc%4[/%Fd<V5>%_\aOFYbAL&\MO,YjWo_\m]%65V>X32t0jSA8]gOR7&/lcbfq6"Ds],nnjd]D):Y"h2e!\7R^DE%%1JF4sq%nu$2!E8nh=1N?*3,CB*[^D'U6)O[On1!)P%D[LMXi@<0&>7#NO2'gI8R((RpGGq?V6q+?o;R`bp9>dt+K.S*K)n&_nqg:3Rm5e6H%3,!/W`2:?mh^<4uX$$LNm^Vh_9^sSs+Wk$iL1B74ENATgZ48Doa<I3'd'.pin&rpV@MNM1ERIeTq](MlqBPVtGS[h<7P$0CH_\?H%Kmp?H<@5&dOr*PAWA1$?!rl<j$bgrhS_9ieV=u,R#`p"2h>7MRH%Y&I@HgLOkjBI9;>)<@gX-059&b4X8Ba</_Ouqjb<N"&5[(dX%_\F\.S`pShn_Q6Gi>)H2brnNR2Tl<'5.KY;aJUS$8C%b_ZUu0I+SR!H?8TYqIdiSW1JStCIis]^?O_7T%c>,X-G5,33Q;@:FQ^<0%XhIRRjmiuR'1%7LFaB^4V->aAdKF"cc<D@+Pk=\B.$d+M,#_WSVRW.oC*G$7LRYU![Q.-I'6P!^^qq)/e7gJqOL6q3]PPZ24FNU&%oHpmI@S7`=h#4:OR1<0k'3TqYa[\%-$qmtO'$uuONi/?s4dMbTLeNNZkBK[UWPYi5J^&K&n\jXr"@hrboZisQc0;)4VM]"C"_t/%%h.4CHTa8aup%1jj@E@8'W21YaPAT.J')1%kCG^i3rr9rckuJb:ZM#%.*Ztal&hkp1TPbkT%hK?rJV8:U@"o6TBqMa3S88/i.B+WH%QHAXeY&E^8pEo"1=t5ePHrSBLDmoCTbAS_Nl=k<]D0B:;;H#!R=T.U:pHO#82uG]H&)6]PHIskYF'I+/-`bGIY`f`e?R%T*jg"X?%5omS(P(p6FNC:-q4Zi;83$=!bFl+OMU?Z!=ilg'?QeB'ClY?q4iaHJ8buWFhjlnN2$:"@H_+"t4KAD$Eh<BB&Fk#jYBb0N.p(*H6%`toF9A^ftSo^1JPkI/;.gqLEk>PS##6FGPk;O)et&h:P9pG[c*6_mQ9?QC6S,ueq)rRYO84b]n#\_eG:#ut.!qQadYs,VhJC$4Ub%Tk`G61QpH=;PbEjqqG&JP-HBgC84.p8s.gli'@tDs,Ac4KhuoJ<7gR4&h;E%QTg+W8j;r5WMel."2!)"5?E1=<BRrW1t5a.hD]>U%6UE(gDAnWNWGY;a^5EO%>Z3efVqg_7'WSb]4bYASCOS>R$!#Z>HG8@qZg`b+gpui9m-I>mq2&Nm04eh"k#X?f6a-J&Xf?gKhpJK*%X7#qs<qYI=5<Aq]X]9T6%i;UN'K"CeBWB1gr2*e[:A1Q[^XT9KJ`#"YJ#ZN#Y+/$[,lX9Zoq,pJNp&@!=24dq&?!"0r0QrlZoE=#%iF@X6H#)+1-UK]GfK.aPWE&3LpC\r1ZDX_9rP*p*rr(a)WW>]j>G4*-m&?mr/^L/jT%6gU4m32PC]Cs*k'rtXWBD8$n=X;Bs4s?"%7>aqFV,2TmX,cffWaD-.lu"I>"\F0urpl:MdJa?(C@fJo:SI'7eX(>);PA>bF8Hi-$5P)a/m:dF?;TVLrZ;HsP<hW6:\hO/<Z6Ie%WE<^7p!hd\/G[EfE_sRrKoG$[C9#P!hYuE]`XfSnIj_1.rV4u"=7UefUo1l]T1^6*X-96a,F@s#8>nR;b3]+K$J","gUA1Ijfdd<%#Z^ojk0A!C4b^Q1<#UOGlL;jM?OBeg8;/>b088\eePf7(8Udg525I/*bsu->69`rg7]N.A[4MX\Q]Z#5C\1;LP`ksrOm;C\<4F%>%P<@L8YnLLqQhS!0-0q&[,=<74kDQ)GdhA?sen8/>ZWA(2pgl+J1.XrArrq1V_p0+oH#eohg/mh<>eQ09I-pLB`qst8AAt:B:R<A^%L8^S[qHJq$gN?_`?b_uas8M-2i%p+B1K48k\SV@/$&@sNE/']Xc'+E(i,6$\F<Fm?"-\Mn`"fLs-POP(ZR&#"g\B'lR=kIK/&j^0%TDA+iepdoednY=j3V9VqO::%#;WLX-NL<=)()_tGd"TBjbrseZqSMA5/`Zb;FuoK,W\GOjT<FaM[;W2!Ns=>A>4'4Q65%&9oO(pI%S<:^p[^*@<Q3;7&D$O$`o#&Gr-MHPIDR?io1iX5HaYl@iXKJutU1OVq8U<6VEu7WM'#HDEO5d$k4AAV3Xri!M='ur.*s:5+/,OTg%>906(U?u:adQNUl.K7mQKEdkt*\>(XGZ%15l\d\Dq9AOI+#^_8jN.4&T6<6eH?Q6pA$Mf@e_0*5esMM_M`,LC+"uNb!#IRkf.GdY%=>YTo4KaV,b:bft"qGUX=BNM^!/emNqYmgjj4a(@"s&6X*#MYp3mQ$Xdd):X73^Xeq!n;4D:AH>_msenXEN4n34njXSF'jP@GUp7%>.4SUDI2^iR`W;c51O-4AKb9\I6BU("%EL(EH^s,mghJi(H"da@"G&Jk3V$qE]m]4I_bJWl`TnUh9NZ]Z[POSIcIKbS4,J&40S1,%>9=_X`RpIhBY&4tR5)kR;W?@"G5lb!-1SANH)a)R2`L>CoZ)7l:OF*l4RL)/itB/mo:MI])p>5aHZVPbbO`46h;!L"6NDhMs'bJ1%kb.gLDpE"PSo$VmT^A1,p.ff'cjhg7dpUe`q3`tsf]hVH@4fe>aj0%kL^"O8LPZqe>phhd>O/Wamlr?(W`IR[1S>Y%haUs)HGEV8%>.=fNG.$2<HJHsLXfKpAGiisj6Xr[LX4dAdj$R>=C\$E$37g[ORjZDRhkB=:B4o0=X6.L>/`sQ#g)N2A*#q2VHG)rB8r&kUp[8at%E9U.*kc)NLQ4"50hac8;oo7I4+.-'&Zc^H<$gS!mg)pRmG;&(!_LLsV?TQs:U#sVEA<PK-Uht8Y2dqS[p"akF1s!U!56@Y#3kk+j%VfH0VV/^g-hd:+3"(TmF8H15YY@u/<jG3+5ZepPIkF(JjY!1L'?Jdk/]AEN@n6q*SfZHnQ#1ERTNJ!]X$XN_^4Pgp8m6C@2kOMon%^*5b+c+Sk[-V[hDqNcN0h-j?_^ol#-%NW=AAPHt;.CkM"IW!IO*2LPQnPNWY]j.(34.j7aE-]k/1q^<QXF>"XrMb2?rJ#Kr^L[gC%Z$=/ZUT"d\l8omp2rhh2#$I4ETrH04rk2=#Pe?..^8l\]1-I]Us.Re3K)r8:_^eZ&f&1U=3cO2(ApF"J8"47A+#0E.8:(Ff?O7o^%H%/oHB#l0'%6$V_$[?_>&%C,=^ce(pD)!S^i,dHSA-`D*l#:gn3'P(Q!Dq!$XR?ZTeMf-S:d5g8%7%P)<SPh`+E[0oVR?*b:?2/b%2Er6WhH;Q%a4WpFNqkRV4",K>eO41_[,X0+O=GaYn0:0<&BWXmk[orSL;pjH*\ZP@!-_H\`R]$SLX\gLjSY:bdJ_a6]nq!Z"*r11%%Hf:u*pr:Dq9I4Ci#C+1n=P4u>E3K+DMMGT.#!\OCS'n+3;5\9I"Q"oe'B1Hb]RG#HX(.p-`%B6N0P5J&'=Z^HK+dE&:'Z=c(WkC%MjlX0FhUor`N.;:@KYN!705=E!_C-IV&k/gC<'`5:CYX>)Hj[&&YY)u=H-d(E:Tg5db$Wu_iAotqu+We^c!;bWugn^-lYF5"HpSD%f6.C;hW[?D5>9nql@!06GCTF*Rif35.U,.;N+f$D?X",Ca7WsnHDJ6eIT)hjf0aY!?TsRTF*cm?W^t0f_rgL8:Zo)(#6TuUp4]H/%;0k24=ArMPWL\:4XXnqc0.pj@3toZ8_e8Ynm>F&II'VIaqN&t[>4o3tMi7(%lci4hf23e3"1L'Vj&;:\G"G-K-oWff0=ukc.og'O%B`I9^#o9osd`:a7'#d*5KB9ClT2m&A"(lPP*b9Y,DL'44*FJRn7LrTQYRc5*W"r)[cU5!UAk#fr`b+oSc8TaQL1t"\:l2d`^T!)g%L$2GqrQj-Ja,Aui06_',B30L+Q&3Xcm@t5n=%ClKGK7`Sa8c%`]P]l=*a_)&NVAF_^,8*'bXlZ\Y)eV-EJA>FR_Bm#GX7HZlbm5a%3SJ&Wkf!#d^f:UrhVC9ei:8%d[$=p7OUAtn)XqH!E=Wk)L]lu7hL&u$p<mJ7V@Kam>cdldXR@epf4lO3@X$hF=N_R-he^O(m$<6D%e(OVq1@Q5]q1FO:404FsI/Yrc?eeH=F-Gq?g$>bNNQg26c;rHMRb_5:I91dI$I,K]407mNrN(Ko34Su5/tsYDS'$*NH@53c-8Xu\%gU6:NLH!Je7<1@gT943DHsL.VA9I!TD(aTCr3f/R]q6l_I6D?3IX4"5Fo1HEThCLm,_Bfd.sN$T?!P'n,P#+jkgdB"K5Bgbqm0pJ%5g*5PlKe-7_;*m3C.J%p9T6;QFo#4!S=WK\N"n^%=O/=`oCJ0LgZ--SdW(TuA5gDZro^M-#Bgh2Yb>PT3e2n=<ORPIqK[-716sk6%mTRtUA,DWE:@X'7Qp-mR+-QTM>rEM3n]#n5Fp.io?HRAsnTciIeoq'*[o-6R?SY0$2kBn2<BFk)./A=@5E?J8,u#YqFhR"L%<?RS%ZFn+Q@SOt0\0]UCf;eCQ]a*+e/fM)Hp'T2kou$4Cd!4UGgX<)Ba'PS;<PV]SGWKA_Sq%E>8Y6>-T-n$B;u'tFpcJR%P"nf,N6`.k%![dkFaS7juA,FftmZ?sa!_,4(:POhS'/2aW4r#h::V[81j/J.1GlgH]bFc_PIi0q,`h!MTT-n"l%J+,OpcJR%SBn*"`odXFO[+7C%A:0u!&Q\7tOR[St`Z?:sh;k..U[(RjG%tV7^TZ(g/YC^>L+D>F+!i]JG?_9HasoEQjV<mm(KsQRYO$bh*.+ud8rnEN%tjhuPFn'<%dBV<aO.j$TZi=#]T/9hSVU")ZUJLh5[l7[`!WB>?+8([GDTqdg\UA`nB7Fp1/VDp%?5C)nqSc2ac;JA*eD<X!\o5dal1C![;c;*U%Irmio;/C7PSr@#4DS&bk2oukR8r5On-S+oeC2fRf-+6ORqoe`[-M@@HId!nL9-JdcDfpY95;uKRe=gBIokh>tS8900*cU>aeV2-G%b/OfFLXi/0N_0$r4Ih^a'>WJ,_;fk5Z8l9qpJWJ!2-ksQ6\?rL;hNuIce_E6?L)>kGr9X@&\cdCDG,L&H>bD#^;u/CFIUa7[B''#%f?KB2fh6Dn)V16:rF#9@L,nE=k(iV*)9J#QIW4Z/7DNd-[;Au)I1bo=i;'7`MV53C&dQUoYb^2SQJjcHhY+!'r7I%Jmc"af8+;i<%Fs3'QmuJc\:,_@ul#uZCB&baga#.X7^Ed1c3h@D-J+9:_2EuVnpI`/GEBcOtF>c>^\c0*&ZZS+/l"F1W\H+]YY*u/)+"U[IJ*\iV%eB_kkqddi-XZi*kD9,fIp7'UQq[GTc/!"7@*0&HKAd6RTGD4Xi1%$G>fAQe"IqFXu?N'@V,*,/4c+2Q;Om/pdg"H5\oZGe`gMCs+%BN[5`\)3?Rf(Q!hk8I@LB*2dDkDkj`*mB&8*ueS#mLj1G6/&V-=+G`8`2D2t1Kq)+bhYh@_;Lfcn7h+MPT7RlR[uYAZ@e)2@pM]X%po,peh0=n\*gaWZE0H"GKq6hRds$j)V&Qqu%k%i*]L6ITfE=RRa!WaP].rd1O47IAg+N6XDj$4.*pKOX7tW%Y_jBm3$X[O9G!D%-%dcK))$Kp9[q_iN6pZs@3]l)OUH^3HcY@>4Ze6Y7c'pHplA*#E?]aK_d^V0Tb"iZV1RF(UpZ=7)U']4;:-?HT<-gqbPrq8t]hec]Z%Vd#`rlgJ0!]RMXt44&&Fk))S,@!Y!5>?<Q@j3(e9`B5)S9,#NNZ2:uDX*ZG#%*\<5r'=EM!WD7`1%Y+^CIuq5pg=uYYC)B9-aq"4%C&bupRF^N7XC$>nqoQZ(4=*%^@qR%H;uH%Ip#U`@q#&QFK:H,9C&d+hMfS4:"@Z&j+49+W9Ae=U]g)FP3qk?t"EVUCqm)NN>Olp&%*Q!YsOh:SFg9r-kI9b\$qoF&u"fTI+J36m;rk5?X(@o+oaPq+=*Xjml3@.OF;r[H6mnRWto+QrOHM6G,+;7?CC"*5,20.4L$B`#L%7EY1B:EW%^4$U:*"('V!o^Q-VU?eBe&HDGJ`_I&A?@32:[CdRR)c3+;;t8>2^Ob$k[f!W(-#Q<TR.6ujVu+4uI"Dl)?I%K+?@N;,%IQtR=n4-D4)Wl5koiF*,eukW-qp1"5rhHg7qmXXYIJn?X)6\+.f-Tf57t0f3]n=/5gU@!mmpM(b4b7GK2-dlNrTChGJc<[V,1S9e%cXK^3G$"-]:SBiK#B9KE2^gZJgSo[[_@PPAqa["4GC'eR$(CM"$aQ3k@o!QG\_V&RPGdTdC\_0ck&2>CIZ&]j-%<W"n@=<WhRn7$%\7RCfNc.9]FPWUk(N+Kh8M-%;*(W7PpJ#+2Fl9k)D6*]10)$03Z>J0heBa,Z4k>qfDo^tufGWC^*hWY?CD,jYKQ9LS=3ND$5sDAk%l^gZTAl!T>a*2_[=MG%,89\#1q6G/E.)'P`jAI[CPHboM5]Z(`r'#<]&rF;g"6;`9k-L'$j$?laX#5Kt`1,&<U%7^SNCiSF*o5@:%o8Cq$[=Q!j[G(:rF[6hJ>jS[ZHMUHM-e;I'MZR/T"p'fR9_o7Hl,!#19d+=[e:"]I0gNoj9>-i8SmM3S@2b7fXInC1&(Hq]YHiKF%n92EFqp3M`h$_gs;>FCC)fKe:_NSp(fkH$=1dtS7LURlf\`DU_LY]?gjIYMs'Rf^eeW%u]@e=-Ej3d8^$J>VXC%UEtf8/3WF/29h%^D)-TcMHQZ7;C;(4s4q+<,S;Zk>nd(9lBWDF-IGcoYScTD.Pr@9hg-(eTZo#cJRC.&#6?eNjRg#:o?CWa!A@,I`4N!iT=6,?i2rS%Ej0TibX-r%.*[tPHEJuu';%0!J6mZa-[oEO5G*u%@m<\)j&B=5>T5?pbgjZ0eq\$Zo![sX>I(rD>Ga0U2XZ'W,LtL)),-&^q_q;b%)<t/le,K=(m,ZC&h2Vju^tN+5?B>KMTV,DGIObNlRq9:JqN:X50eD4n.3<>TLrqli(rNn<A(4%-"19ERkVW.SVqZC`S=\OuI^Rl,%Gk(L6md4^D#bC(\*HO&-()[Zi[f\JQkHarM$WuK-FCH;P?JX5J/03!"`A:]/*P4CQGeV'!XNA#HpG3n+]=[ALSNi5uK[9[8o[P#M%o\3I'bsQ,Me?3`HI<26dZ4OH3o6NFmP#H2ie(2K]]lcKN'Zp*U95'3.e!9*7CVJKQ3E'73)jhKlLA.PmU:"'MjBP2NK5$^$]U1f@%3B>YnH*,K*ZE7F@G>g^#='jVV6],6oQOZ4/^-02Ve_Q)Slm@-_H?K-oG:Pns,A/j0V<G&GReh/THMhAn\8:Z1b>P\_Y'>2(&VVpA%"5$A!9\U!kYY9,fS+4DM8n7OiIZ_ChXZh!G.9Z(S>I!:gg!0@^3q0EPkN+o%XYVjZ)]PSm5&N:!?48?(\F=LjoG=(5s&<?1:RBe/%"Qk>jdB0P8ag9#(qF?;[bgu!ubD3FdnXH^8l;Cq>C#1UM/=F"QWLo*.X0QoV4b<<RMJ0*s#hh6EBm"sR/,Gl&cPMnecPhcJ3;uii%Z[':S[6sQOU=[]D7a7Rcgu728iH=e(;mgcm$`cMD4).in:<*:Y2SM?2f&H:&?b6mPH?5,3(IsMsjC/NL"ZH01oI9).>[/I#UWpb;%S@:'O(HVJQm^#]T<6T:;c+Y&65,7L]XLmV`Hk_YagBAe<7mBa*5ITFN[6Mc9cb/sgjIA:>DL!YP(RrMj.L2la)g(#@N6*FX+F!Q=%E2@5]BQ!2'`R:C_jF!SHq=WQsFWE)?iMO65jn`I=Mg*H]l&e(c)3X*PQYdJ3jbWWlc0Mu3=%7d5gaA;15$YjM41M6pRt#p?<:]]A%qNK6n\q6tX*M%YJH$_b3f_D]bO49o'8(@Xbe9T4Q.?_#Q@fONE7OX@U<WHs-0[c(^mUKlK%olos3?&icMaG:'D.W[rS!j6AVIceo%JR8`-?<%2kikP0FQ)=O;BRe"$;7bK97l,o&7u*XpU$EYec1:$*>RthiUs;Io]N[U79I!.r^]39+K@APsg<0B<f($Xc#rt!hD_:p5%#334/pSp]?UgGrBYKpHnLLZsbHEaJ*NUkU)R`Om[.=1sPK$<caj'd@]i9$##?jB<0a?C$AcpJI+O,YKqlVs)6flsr8B/%!A)L(E-%,p0%79UoAChWo3]ku:eqhf>ks`F'@V12fd:j(1MjjaeF+>A<Yc^hmro:/6Q[(b9cARj0FsJB=h5[K9GBXb.qUl<[P@CB$4mR37^i%;2FZs=%>I:Yqe!uP]+SQO#M;+rE_]P4hFlWq![`Y7J,jE7._T!Y:BC%bkkq>dQ^W+(Chr_r+quBmT[3$%"'.th*!U@=q>8t<sNsL%m2H:E@rYrMA$^*d:I"`ISt5'aU=hrll"U!-(dQ:5U2R,^I=6ZB^<NhTc2@%Tp"`!-*e*MCrp9.6\8UK?YOV#7YFkQ]UQp>47"$rh%n&GCSU2'Jl%K5Tc-*!t%P-hZ4VMZpcq2\'=8UhG:a:_f@IIEgA)+Mt;r_*:d7">+[df8qcI>`O.]2@Gt`rB5aUSr)fU]7m+Qp2?9%bUWUfr."=S#u0Ng,)`N@7=!`K.WYGe`:W0$MmhPWYpHsLL1oFf:YHkL5gK>[=ISt&.AH5bK1,1_reo2al$AJgq<Q-Sbo8H,oY,`_%2O3uVPi9>5$[P[A(6\]&W!n(qmX%<>d6M*`Tl2b`ki;4Y*`nXLRt%h1'$J@FSc3I*d(G\lARCD2bE%poYK!4%hea#pLk/H<29Q\g%M"qR-UF>?0/9S<'Nu"YiNs5:.!6KZ\Up<hKLRaAeT9I[M?Q=BK6]V=Fs6#qudMMJ`%_R8[s5.O?jSqX9]I182$:Vus9(F6cYu$U]%.#RObWeben',"Jb<CSJ,)d97i?MX/;VGG-N</`/PNFCtm`rH%H6:`k3`K(qbae@0S102cA[M+@RZ9BT]0dpbD+LP`.Bq\*j`C4./%P,)5</HcPm/uqPpl'k7N/IG%O<3iMZ+do.#N+>k!U+3K3_cL>J/Rf\$R3gB7,5%8?;,p"6_,lJXA3P]ZQARNbCK2@:$sQ^;&^q[%%%>GV96<9"t`1EkBVpZg;=0n9k:?o]C:.<\m-A`oZEF1IMV-tTt6!B8C=CJr9S<*oGMeM8\>)pY4K#Z'`2H%ZS(3DoDj@'hm-ZbR7%&q:2H:#<>=.aOgS,n:4J5<[r5>cNf):P_HMMO:B#*fcnk'1Kqr8auS8R#f^f?lg/7<2PBK7RFGXLLQ<4X<E!:dk#EaNjb*0LfbpY%i@4:YNQaRA1E%!&M[TJcOj^Be8ZGmV<1_/@'(%UPiXli%G![UG/M3XRWKD'5MGt:5,:[pZ,mbM.Q#F(VOd'EL'`Md+jPJTcb[W2g%"dESa()A3X`LtGP!q0%`X*cDF\=,o6PG4T.a9eFaBu.tJ.K&?O:dRae=+ukM]WOD7)!OW?":d_f`<hH"OXM-/V2+i26a-\b)#hV?%oVB>P%Jgk9$\?3rO$20,#`Bmm`8jY_S.^tK_^fauFD+FC\Hc.Pj@"f6?#0sj5G2-\qBr):^dCOX(#Tq"o/p+R_6\WqR^K.SO6Lq:%!qX(b"EpDl9;[h>-fl>SN)*ZH#X--`UViM\i*!5T'_=/ti]rEc9IgV$DG!-ZaeI92,4-M<qToi=<B7DkoK\OjIo'1FLfH+)7RoV"%TarCE$Z(C.+Q(&780t,'oS"UMnE.Z%iR(O(]ckTmo7Am<OZ[dM&P9E/_-\L&9A/0`0h>e#K";0@87k0-WP<.m0%.,r.BtE:+^(Qe%Yt4^n_o$K0;<VWNAYg3D!uo[rDe'9Dds-g.3]O7A\R_tk8J^>Sq)YT&dCt`rkZ='GAOSK$drK1`E@YjJ_o=]E_)j5GaC5>>=t`b;%'WHW@K`i+E7K_h0@-FG,<YWC!Q_e3mH+0MIRmLp5]a3BDbM4O`gRt\`e.>>>V8DH'<6!m&lT15\K,]uh/s@,/Rj%AA0Z*p$h9,e[%'WW&T5YAp=<TKQ'#!`EOMHE;[Nqf!*$,@.0P8)D9Dt\<hqg_BHMdX#mG):9Bkdq?qi!B#&O<$D%f`!Q,="?_scu@m^3r.ZOa9Ab>%$?6Wj'iC!j'T0C:Yl_DQ30K^2AA[tYM^,m%c35UN!ch1fJp&>H[3fDN9fV,6&X04g,3aTF8?l(h"`[^j'K_@V`R+haaeY=ZQlqZp%RI1^riZ@\[(d4-V3]U)'!(BS]O$k+UJn.Sb05,B_,jD+KfO\1E6H-*.$IZj<;gf^ZBG;%+mA(G4L5$!'o7D5eAecjm;`\SqMWhrW%O\^5d&KS376k477/Q.grpjc>>Wh%i(n0a$_g6bT&78AAF2L3b^7>O>a7cAFCP3bm7G_SaA"hX&g'e-8`K1KHEhA;!I[ZkKrdps[%%ZGa"uK[BNc1[mK&F'-e/CfTgg/8_*?ek>?WB#q@*@hku#7+.e"87WekCh1l(S#,%eRa;1;B(dQPA1YQ2;@>3TYp?4=^,Y/:.!#`o%o#)op`",bh4DRG\X&A$2,Wcp=\<N^In#[lB>br`<Og[CXX/pt=RR_C:F[S;Q2k"#>pKCd%j>-KJ12/u1N_"=f*upB"9FD<%eVqe7%N8sWl9tiK1)G/d4EO=uk[j\5P<>6_V5)IQ0`A\ipN!SfW&bC5RacY-V\[JDM!KKR%nYoE&4F:Q^p.3+@;SFluJ+#B1d$Wj(1/K^$%g_+XbBLl_*:6ma-eV1e!VNE-?"iX.=/A:+'Z=S#$qBf?*3^Ch4@f@ii,sq`s7&2rXF_3Ui9(4knd4)2V%\n<+:P?lS7[(e:jYUG(%J6=BX)::14+H?NA/8eBsDSnS*<c0EZ$jdZf#bF0:UF:")OnMOi3#a$O\_uO^ZU/O9WR2FX8oqM1aJMhA5a%he[3;D$UPca:N-#.W%D&t-]G:WmcUa;2Q5U&ZZ8Y[Hl_t(p`3F8_+.6S<rMF7JX4A$eW9`la!?lk0C5\-kI&4<5'V0&rs=De/q$Zu\),#4498"7Im][Q&(%B_=AV.AA;icU$!Biu]p8^GP>PrHQ/gA9m/`FHBId$;[?WP,HYiU=7rNfgI)+6kUO]6C.I1PN9jHXRSo2:,,6rcF&P=qV3[@;s8,8%<hXlQ.M]NbEXFtF;[=FY>*>3rBiF45)-c,XQ,JW'X=0g];je]KWE,X)<3S;bWMmM>3e^=X,ooZ;IeGdB<&29`YbQIhpJsekZZDnP%20>tN;s<:aMi@TtRP3iCL_4U(M^\1p6mTb+Q]PERJDH5PB/L:JL5tD5*fdOt;4'ncN:]&bmb7bG6#J]"]h_#F6q;bQR$;Md#UZ6m%!",8fEp"HsAuC;?$LT>Hs&'TGjW\WPLdgGH#(4l4aZ@L6nIeCMk+uVi/Q5MLfb!oek;(6'A3`]fQPAFfs02\b,Nb?@B/sdZ--:`u%:=0-Wl%gC=i"q6G2plX$qg+'#DIbi6gi"B*#YI4Q8B?5fR<la!#YEO"-Z4h.)V8n"2hT&.Qm<@i'2-QT'Q,oZREe-G>>1hdX'Oj?%CH_5u[/=P`&fcnQKB/7&2N!G7#,;JR,egLX3QrX+/lV/7AiX*p0!^S.?6jW]Z[tlC9!`[s@DrLuL(>4X%!k-1$E`)>e/U3T=JRp#%.CoE6$@I7<4rju1*j$rNK&3+s=I(3P6BkY3,O6#@g?+L*V/Qm]OcfecSBrfdL`82D6>2!Oj>9HViahR>92$]5Yr\:`KXOMM)0m:`%3%L@*OlUgc8OblD"YWj_`hhjmckCMCU@r_,e6F:M+PPC8dA0Mc1.U>_C`3$qUqPen^Gh0E^(`[9;&I?DF'b4@D+T<!Lg^pa-q,M;%]e!>9#D#ui/7YFXkRg#MjT"HjcrQ5XNPRTN'Blgr8fqj<1+>3S#2'cs<Yoil;g'+CKG>!HKe1rrZqHpKC0fqinA\<O1I8=neLE1T%kt2]MjWpPaV)nO-s.?#6R#j'^nN<dg"j\KGX\QDfM`m"j;6<hh6KsS$fJAQ<.<LI[m3e<A4r$9:XH4&>P99V=Kh;bpQt_R)SgIem%M3-6Hck3m[V)c;D$q_FL*YFUXoQbR)H3Mu=O+cS7<0j:M)?^]+A<fgN\6SKP6VOuq,oF5">Fg9-rua6f$V`CB>WRRr]OC;pp8Ed,%M3LSPi+__+/n-U;:IQEu\S3O4gA*"$,qb;T'.1!b$X&FMXsnBThB`IW.AU"sEn]]<(Gj>E]q;js80lI@cK&4]Z:'R`-mV95gC^-0%$HR<U&hO`]C,%[#0bV2oqP4n)eO5kFD9l(PO_;Z6.\q&_180gCjscGYT\9t]EktB<<-!5Ig1gp[@2\WX67Z)i&jg!2`7RTr*XPL@%haQNhQc!n'PYh11,`dql+@Ac[M#Jm0Er)aDd1qgA9$+McB":cEr]=gU'5]AgF0tnVcHATP7>[e$e<=?6R;J7UVcnLYW&Wn/,4-.[%c&DB\@V/^TdVq#K99"?.C.3,ua(_qDj]/05iTPhdQ=N)>&S[2k!<sU)Ca&!)OddkLBJL,&=,:65F:-NZF<N<rR,1#m63:+pZo_k;%3$A_EO\q33*(t@tWE^phM9R#h5iNA17K+JINPSC`O@=b,Q"G#jR);&f?gLlMLC-COdD"(mYRkM8<VmUWVbD#)3LD%:0=A`=C?890%p>)e9V7W9F6C=XX2t?XL!kZ;2(<.Z`+9G0"nLKp6^bcX=#pn,bMO\g+0(`51<g`nq?(5eB:#sApP0=89\s29Q7*'h>VCnXOP(`Zp%`DQjM<ta2!/QDNc*FD]]>n^h7NAa3R,&402J7%BM)N$a].?Fn7a&9uVPah:Oa1l.JTJATbj>Fij,cQfS\NlMpM.BdYYt&P/@[*d3%Onm>bE$9:`6:QoEL*D$*4%+Z;&0n:&piqpo-d]ge5Roi5L&qGeH%WgLRE@ohMeS>(@dgfPrJ)pJ&h(<_LudHTqFsZeSWgsEV39cu%m$epI!\^/[CoM7om0WU5&Sa2A3AMe#g.C:cnR2l(Eju]jqa-).@t`#]!a>d?kU?+a$BdQtH<k\*E>k3rdKEJc&"lLN+[M2.'f#s2%nr1=S*`c%6<$9F+A*j?m%uM?o'^(Xf?EbeO$`:*O9;dk!&/!rkq?6@h>TaX\P"MXr-Xi>TW&TioQkjQn?:?1MF/'#/k)FZ%'i-t"%I1s49i$GtT,a+#r?3(lO5VdprYRK&V)IMb*#u-am`T\*7&Wmq(Gt]GI2D3'A"IT'>TiEeeUgPf"BT+5kC04H2,%`8EKq+GO&;D?L%`N1FFj[;F]'KX0qLbn+pd57*f*(g9$A4U]4mY=>P9(WLafHU[,-;$X9n-"phEtBTX9^S'$b%#m78L+sCXrkc.9J01n;b`-8+q`"f%+cpn!.G.*\Hfi^X_D4LlFsK`N?e@iD3Laq:,Y3/OjSnf`=+OHt1W1PM8QX:*L*Xl%HU:e3[*XrO<W6JZ9N()6;CUjm^kP#`<2KKE%lLRal%j*<j&e5CI.7omaaKWTOGY5fOG:tYgLCh'!9FWaATMrEZ:I%5E.mTB80t:bgMW(]'3<E!9PEod6SthTiqI[UF"#jUPBm!+n%9'o:1L42n4JJC`rGE>Esk_P%kYmF5.'N=0a;ZSKb<bV,q@)YBWO2BOOlO">S=Z^3q4a=Q4,iRC=.E`+`5=_sk![PEVP,3@*V["56%BS`nnE%Fn@YlNkJKb_gQTMu!J]<(YaEaUQ3pC(/Y_@S_$A3T.W8Vj1J7!d#!P+W=bQ,+U"@k$SLoN5"g@9_L(,^8#1:(%cC<8H]<%LQHTb;b5sNUA5cOQ(D"d3!?@^:_^hE[67o?Q:TPAe%3h7i6[3q>eh+u>KiaO%9_V,45ER.s&5R_R"Z\p+#"!E+m]upDK-.XIGf4#%c;5&MfX8Cu1(\&*&?$d.<Zh)tWg'G(?+(>*,u#%(!OtNaSV[cT5]dQ/UC`,VLadimLaF]nJV^:3JG3V!abZc!?=s[Dn47.@Xbn@c%E!-Oi%>>l,F<6:t$M4D\LFIJA_2(67]I/T'(pFATbTB]DQJfUH$4LXBimnD]OFdRIR?:,_.!lZD=>JG;h0a=tIK:EJ$\=7Z`V.`X%Pq47SP-HU$"\TUZR:&D@E>V,-.?\ia"59,Vj[:(:i(sFMT()GU%XTHW&Nu^/!gJFmaT?NQ-:QWSUei](#GJ23h4W+4UfA3:"t;#J%&&oI),"H@(]cF_DP."2,M_0J%-FMkN_?G=W!(TV'&ZZLO-.gJ*J*'+W*Jo^d(HSsAC%uSk+9c-lbps5()+bhb3Ee_oA.1qn!u8b=%4NAYhf9I&S0a6LJm4!q=;aa`*,YN.GF#5[%4-6"WfBQVs;?F1dX1%'Sd854`>ldB*X<^>!(b5k)C%6B"U6A%f"034c>9F]$/G,9o%TP=9Kg/>T7-_]hL)*!1PBbVMg_<H"A"J^ds.l,Q(I0+p!OXQ9DI437e@%U@1=K"V@QBNF4$%B/?A>r'e`YSgfUB.q]MI[-@?2Vtl%JtlXM0O#6g+S>B,!eE@MIA(_ChD13@Q<Zh$7&Q/D<_20BH_ao99.6bJ:cEr(PCYk("W0!rTO_GjePU4VXH%>5M,dteG/nYbX<[rj%!B:+7<H_#-M*)B3:]1kG4fS2pS'ZH4_BY50,0<m*Xsj'3*iZ5iJcD#A*t*?EN5dR]b9Rm*n^\nHKh&uq+@E)MTHQp4`(?0J)pKU9%f8ElfUF_O>QOBT_gh:j?h.pj4T)d<'#nGpbZM',E>;JjW;_)Y'!l[abEM*Xj]Boi\N_uC6[M6k&Uc^49:KdQ?X/nIYe'$BHnd4:c%,.q<,n4IOL!NR#nFP7WI(,r.mh(kM+[VII;[E">+=o0JFXTQe#cq,C]=XGn2?#)uEiR&K`R\ih9H3C944do6RDP0l>]@T&cN=).I%:qX54&Si]fAI#LDpGPYoB2joN-Jc3h:KPFe99@KE!D:FQ3rlW)-l+`PU6%0&C4`e1WU_LF=O,cJ,e$FO[7UH<2G2rFmt1;q0Mt):%Ou@)#P#<qY%>7Vq.\o(ud(qK7H,a"L-oA[u0i_6J'T*9<RoMe09>m5Go_>:0dYWeoak(!Q->&Uj'(K!t\`ir;OEBRJ)ZQV/J5N+3%$<?k^ajO=&mi7.*T+l;0!T17@O%Y9SUKmF6HAo>j%asu5[ZTog9@V+[0+\chI-&;D&J-8OD1W3X6'S*+_al,)V6Y]:_Bi(!epU=k%k+qg"H^g+;N`hieY&]C[0s3?X:Z3(Q;XIFnLWDEop&[i:p`9s"bIG@'H^#38BupdYiCgj(hiMbF,h2[4FC5Q/-U:KUOth<N9#7P4%pCitV]F)Ag_J5+VIc@KHdqV%k7ZK/AC+Y9EVK-uIC[4l\P",OPN6-og\R:^K\a]quEM:cXA0X+,.SsaB""kiS+^JU_9*&_P9'65j%',iF@/WWfT&;d0>_^f_57gaUt[NKT0A^MZ.)LAG@0.86HD97H&,%LI<7,]Cu=3NZ,_Y(W6:BGE=b42U,F[/,=OqT$<HBG5cBd!;K%9bJ)+MDmOm1s*]&BRs&2"aG,[3HGljhGl9P)(WZM,PB`KQ+>f^al65+1"+@N-`<Npr+F@h!?<mn(N?$F@&D&V_-X!XWcE?11^2CA%i]&g-LUtQ1V20X7O=%7[)9X6<gQHWu$.mEoQBg348.1\F1GKL84\(CC5]G%2N3`YS3=S`5.9;3MXXNAs-ksQKhNX1Tr%FC5$8sSl%b]W?H!%uqWn@sNCs&10L4>"R,&3"Q#fm4eJ;5?5hPj#YmO"?Ds#Rbn)S#/)UNgenIOaO]qo1t(gB*mf:SSTc)3aot'5kbu`8dV+>%3\<n@GSCjK'-2*SU.f[NA"emLkn5B)1Pld=,ru57+3?(o9pMLi-bZ6R[6H$h+d.RJ)M@Wm-F"e8)(s*+A]G?lF1#G-a.n-Q+C5,4%/GOld-48bu!-H*#P[$esdaHPuGL+)@-N5M\MGa**W>(4E*?7Y9H1$?u4ImtM::M;QQ<ohg[!X=*#6Ac04bp]e,1CJOak(>R8UW3p%'oto"=q5'^&mF(EKXZoVDHsnL;X'<IS?UJ2b!(Q4T_F"l`Fi;ONhLE4ZS^2pE^WfUWT5%U,6Hd,"UdNTMG6kL3*F8%0,*lEU2+RU%MNmiLnod?e#a8-ZJb)au80Db]a.u!$?#gR^%$D$]pIqK^!P-<nT-DOcoKNMR=6([`-j"WYP`FSS8s1g>Q281A:&l0U)(Re;,O+rJ%s"7sF#-u_G?JZb+873L]U,@H'*.es#9Z*1'"jjVC&F>$7EsnJC0Xp`T"6D"1[`'/2S+IF%DA";M'B.@?e.^N#_BYbGN[q9dQl.)0%U^?KRP8JucR'/l=E5!*cOX'R!Yee0#0"C^B>i6e;9p#NZ*Q"Odb%@K&7Nqt>_DR*8l*M`*@L79W&m?#T1JQlYOVDF]1.Tuu!$NQF%YSBtiF<"8;9)qGWfg;`-B4c:k&bsaC"kP@qmaDa$a(9[_.K?@IPa&H)=OIO%p%'quPY#1$\O0M'GdIW*300klNZ!DjkQM-D`4(/W%%n"?/3G(1\q&9Nq:tuN4o;Pg_OZ\Ik[,F+IS1T9UeOb4<k?'L6`MNN!;(@X]J0)Mc(WquaF]"InYl^T`MRUC6V0%YIcm(=8eJNkM%6ZCt<W_t603>0T'ZOK+HK99CfP$/Xc!OR4eZXP]/AkVZV*ptaPH:.r>R,ap$X*F_S)'].TO<1o?TL<"P9esXJ0DYb:2'jo]AkC,a%:_k<%?bXeE2M;8e/MZ\/eVA)S2ieU5eWDE)7qfEq:mK02"#8ju`NFM5\LN[dD$UTm.7%IO2=pqq=d4Un7uChka@i8SpQcdg"9(98%-Ec?<8Noba4_O:$DD[F8hV(GXV9D)m"tpCo!lEAt+U'"J&qn.CJ8s@K_b,lapb30OR)M*W^/?On?XQqEaIkY:m3frp>"GGrJbO<K%2k6B`;0dEAi;:-!)-T^Ic/"<bnh4s^]?bps8*GhKJtVtI&eIGQ,Jf"F_T7&CkgY2g`>#0TW'QtP?bH(u'!/Z`6,StYq$a,mFHB*H%iXqHqNOl\Z+7^%We>3LEN!(sAl#u#o,bS4JJV'.MXd8$X,i!GFrt(NRo9/$G&5.UY6k)Fl,l$@.Pc'acpkXRsa?PhaSQ5es\?,>^%<e.+(]GEW!i319_eioJ0m3!]hRgq+d&*i'o1?E!e#gsQu2IW?pY[!_K32ijhom)V3mLY5:g]Z\rjo-]gc]r6ne>'lJ/$M?rZa:P#%]2(oSr.Gf6^bBl"O._mIRA4YpeOp?`jBQ;s-Sn)H0;'A=,1.u&?,@><^hu.A$$-W2e$VnUHPtt`02Mn`ius,6gJA.EE,sabG1ChN%*PQ@KCA'ALa0gf0Vuo]b;$ZO4(/9<\ORC7RP+@Jk3oK@pi0su^GL/f1'=^U$$2WG0*ZtVWnNuAH%rd^Z;mIEl@#7)H5[Osf);HqS%(MDq^5)K9uR%t='C&ij9chREa&-U$l>F"C>4E4\P(^-JgN'YfrHlTmQ#(cT0HOUHhi:q.\Fs]BW6/o1QSE=Z*KJoRHn`+YH/gsp4%K&d+f5S.'0!ak7Dp`dIWLaDmO"MSlM9?JQY'U2@_H5,/gU3#SZ&F:n#E<t253e)Do&A\u:aFN_,dN\L)W)#ah1X-_s#R!>u^Gd'b%5<3f<^"&3l4G*;ITE\<&NTNe"XWFa;SMs`_L@2GR?jY]c[PY]pN#P3gONgk5$<1JN\_@cV#>=R)bn]%XDLD-6-cPTEnhq+*c/U]a%!koSH50gA8`WNH/&fZXWL*]rb%nglf=h"K>=Mse>T7j3I\&e&p^]^Ge-RC;E,,snh,qPacPd#g'oq&In"I<5bI/!lh>`SMT4ta\'%=;I=O7P(eN\l1mI4E(AO=@THE5prIF>0LiNVo@H2@^mhH4[]?Q2ZP2t-mU#kjc+fGFFt:#%JX+p%oTW"#<orB1;7>cOc"rN#<kV.%SYHJ45`8KiJ>P&+>`2I`,TidhM%4l?8+T:aZpl!&!H[:aJ/c_7TR3NK+:=\qG=8LVFkJtMPdr=4\"0\=,j3oW=,BeYb$8EeF9l9=%\KcCBg`nknXYC/D$M0'"7_rh\NDW6#Vp-ea_,KK6+eCHula==Zj&E#%4d+:V!KOVK'KgO+n-,-A5R:D!qBW+DIA0TSrb+bqqern-%g`[-^F!V[>%H]),SW7<[k(^/LkZVX*[X]1AUIcDB_9L#P"_:ZtVCru^OiSs$Na;/Kc5()?&9H@cg)p\f>*8+4$pG8lT0_881<_ml%i%[=_JgL63BC@k18nIEp01IG4bW?=]HpO22((n,PqX=Y]eF8/S2G#pa`jY@?9C^sKmP,(eJC3Gt0ogq4hV=sEa"M[rZ:K['c#MV;%EfasXZ]40l]nA(aZ;G'JX:-sQJe^O*E*nKU)Zhu5K-`Pm"%Z%(aklG@![W8B/;SjhU"d=C&46lq4rQ"4&-I6>UHa9i@6ca[m\\nr%%(a+f4m+L-StU+4`2Z;fGoMJ=><p(4K43,%D5u@G\Ma.SYLaZ>-jIdV&V9PZ0F"Rn*K5QULjZhjTbsl\pb2o>/VT;5!?&E%B+31s%5R-p?FMfO4AAH>I89[T/kGT4GK>0$sAan<j?j;%=S9;N#A`+P6O\$),!"PoYiUm](J2WME7R:N%GVE<9Jh2es118.CmG0cRK5RZE%SZl3#>SUkLNPdNikjK5)jlVqJor'jFl]VE,GiIF+eUIs=J@?g<-/-]SRVAS#/=_98OTa1,),_EYP8IF^"5"Zi]qgErYVZm;_#65k%EgePP!Er&$DNJ9-%@1T,%?=<f)D&i/)RSbN,be*CBX!EmDeS7Y#AN*sXXJ,bO9S5nj8L$o!H(NL"[IiV?pB>I;%%(<n+c=]__bJY%%r-(0=_%S//8J:IKK^umY,,>HCmp%6>A,7Uj",_a$u76nTa8Ehi*["[<5KP/g%JYWCL@eOTK<8Y?=8;+4qW2G;qV@j!3sW:fRl%h%cabulK/Hbo%r:[+.q&n\'cPYbRT3ku1O-,.4Jn&,(=qCJZ`jZ6V&%Y?Sn#8sA6L!n:In!-G@0PTM`q^kTBgJCX9!#jIH/2])D'!_%27U[XX9%].8=3k=CZ%SllJP6r=^6Ss*/ud+rr@dL'\[po>Qa%9_i?]aK-g?7#5=XA2R$pt;:ZOC-f*,Rjq`90qToF>[)`D'?4,po%^sfB@9A"um-+`],)[]guFIoabV'Ys4#5=Vk0=]ClP'a/S]"-MAg]G&'q@>h$YV$*j7i@D@0'aFE#BE(:_\bPI/BEBhWKVW^(^JmD%.FLpi/]Ih9(Nf'"@N6qu`&O"KC7+3=%[oe@IPWh:!60SbI[iSDjM60l!39QsK/2ODWOT',#E>P$U)\7kXup\X#>=T+%[L^X%[Q)t%*T/hp$RcC*J;gf8[nm<Q,_QdoeA9QaeA5$FW.UpLVum:NBpSNj#>6jLLU%0roRfUo`+>i'FG23<%[O#P!1u?h%aWi@!tI#8mA">A%KNVXH6^bd&-u%%/A:QJ.,1'Ic3(eh2JC_R#0I+r")!b\IkpY7%7;*@tPCVdd1h+96J\=Q86H7ld'7t*p7>rcNH<,$p-hMiHT3ago%a5$V1715ueTY4g0PbJtORr7CEEL)aEfB*:tj[*<c:V!<dVK#+:Unr.8d\$]-[RqG#)jhmmJ(Fm;W[2kJ::SEGdcCo.&FbDo*V]W&%9+0ReE>1!raFE6nKZLtUE#TGXQ&7%)[U0a2Xk[DD0OIl(nDN>3%u:ecP)C%06Y'0*8;EU/A)/e!;6fQ&^K*XO2;on:r51CJECodr%9ACdco^CahPY*oE8SU<clREkB"FP,_'ujp?K6*0JM'cRWkAF=fDMD2L6JlEUjqg*1&WR41L->p!1\"%U5SDQ!d66*qFO`t(C`eMs%DF("MmQAQQiI4uZY9[:sO.qaT)HHD9"_gSr;5rueLD4^QNOCBpes8tX;9V0.eUoaLBG<-F;2B`qmmO#\6c;hK9(Q)[32rE^h9.&R%LtYGub7(M1:P:O-oNUngiAEQRj75"u0NpCI.FHD])OsQ6bbKFnku?*CP+u3>`k;ueCgr5iAd[ffiC'o)7qB+TU3IO]$\4K$r&MqE%!q;!r1TH[AmIBHlU<kLi*;ZXu^#l$q=[ja7E.\dOAf:,I8Z;O*"pNqVUIEVlQ!Q)cEK8t^Y)TAQ-7kd8rT0<RnBo?ODbV9Kn9t-Q%o`;$`gm0%FXJ3S,kc1OQ'%-CiMQj1N&UL@'h7S05<[qDOj-%qnNf-9"g_2C%g$#dmZj4XiU%re+3jc-,q?(O@0f-oCJ6qQmIU.m0%\%8M[TB&Wl7bf:@6"="47fK*G6;NDr:rZ!t,77jDq#Y0'U5>l!7(.?5E8O,]'P#qP8>YEj7/S<"cGg;FE.tQ,;2c>@D"!HGk7`b+%K"1-%P:0@</2T@?WNY_^&h5@X!U#8Dnl*aEH7NL?4VF4&7f']`,GH6I_u2$79@C+tHBh1ARdsU-WH>IR(OS$4j[PX<+28YE]J#IX%[$C:u:e="<2<LMVnK3s:7WUAQ7)M++#k4YoAcs#OlfruDh/1P>OMZ1W^4g/V:i?'U`iuoan4H$]9927)P`:1rrBerd,dLWj4/MgW%\uC>l2JW*Bl5$rgXs!b+S*dJATe#*/PE?V?7+?ted!&?]V3$2\$#`?i_-;a+Gd6OV<kFB6i7s)>ID@)kp)AV_7E>uGGUl($r="Zf%\cql7&et!+dh"VuJ]$#d"FFk*c<UeDAU)NMLklBO<iCi58eT[C<0*n07tf0fr\[rJ]qWTjO.afO4,D\?'Sf^rgBNKr-u+o#:W6ud%gYbms7N&r]5>.,SE0G1eNIZp2Sht-0K(2-^kIfIc=K&rq#9NTg]06"@h]Ijhct#EIQAP.n@RNQLUENb\AYM]ifc?l3#I<0*?m&V]%Kp9F#ZS;/RNlM-jdoR=<!<O^6Z002mPSQc\;-)CBo,%e2G%,_NB])_"(Q8_(d:4lQ/5"d95/at[j[ihD`ck'iX/F:(h]QB^"I$^%%;g;C!nMT:fm,eRHmLb=gdR>Xm+]7Al+8MrdgE9m6E`P`lkJ^#Rp`UJeF@RRlW$O+e(l0TMB*%%>TO14:[6#`ooEm@bK98F?'(inj%]F26lh<oCKkQXe,5S""j"nnSOX!7N&<g[$AllWphAC#R<=(#57Ribo6YLK-Y]RY8#&E=6R-f>@)Eg^I0PV,MLj6L&-@nhm=&+.KL%/r^jtgYn>0F?K]B*]aqM]uW$`NV01.Y-%I^Lkt4!+:,"!4\StEG8"qHH3N\AF1JB*j<l']]m/8Qql]l(mpa)r##')Wr;f(c\/F59%T7[UOf_E81_<LL4h8.d`nQk8Krnp#]I0WhTf+/)sa#EW^hs&terPS<aESp_Uli.!>^/@-Y0JN*0[dsFufJO,e~>%AI9_PrivateDataEnd